#pragma once

class Scaleform::GFx::AS3::WordCode
{
	enum OpCode
	{
		op_nop = 2,
		op_throw = 3,
		op_getsuper = 4,
		op_setsuper = 5,
		op_dxns = 6,
		op_dxnslate = 7,
		op_kill = 8,
		op_inclocal_ti = 10,
		op_declocal_ti = 11,
		op_ifnlt = 12,
		op_ifnle = 13,
		op_ifngt = 14,
		op_ifnge = 15,
		op_jump = 16,
		op_iftrue = 17,
		op_iffalse = 18,
		op_ifeq = 19,
		op_ifne = 20,
		op_iflt = 21,
		op_ifle = 22,
		op_ifgt = 23,
		op_ifge = 24,
		op_ifstricteq = 25,
		op_ifstrictne = 26,
		op_lookupswitch = 27,
		op_pushwith = 28,
		op_popscope = 29,
		op_nextname = 30,
		op_hasnext = 31,
		op_pushnull = 32,
		op_pushundefined = 33,
		op_not_tb = 34,
		op_nextvalue = 35,
		op_pushbyte = 36,
		op_pushshort = 37,
		op_pushtrue = 38,
		op_pushfalse = 39,
		op_pushnan = 40,
		op_pop = 41,
		op_dup = 42,
		op_swap = 43,
		op_pushstring = 44,
		op_pushint = 45,
		op_pushuint = 46,
		op_pushdouble = 47,
		op_pushscope = 48,
		op_pushnamespace = 49,
		op_hasnext2 = 50,
		op_iftrue_tb = 51,
		op_iffalse_tb = 52,
		op_increment_td = 53,
		op_decrement_td = 54,
		op_inclocal_td = 55,
		op_declocal_td = 56,
		op_negate_ti = 63,
		op_newfunction = 64,
		op_call = 65,
		op_construct = 66,
		op_callmethod = 67,
		op_typebarrier_reg = 68,
		op_callsuper = 69,
		op_callproperty = 70,
		op_returnvoid = 71,
		op_returnvalue = 72,
		op_constructsuper = 73,
		op_constructprop = 74,
		op_callproplex = 76,
		op_callsupervoid = 78,
		op_callpropvoid = 79,
		op_construct_strict = 80,
		op_typebarrier = 81,
		op_iftype = 82,
		op_applytype = 83,
		op_negate_td = 84,
		op_newobject = 85,
		op_newarray = 86,
		op_newactivation = 87,
		op_newclass = 88,
		op_getdescendants = 89,
		op_newcatch = 90,
		op_findpropstrict = 93,
		op_findproperty = 94,
		op_getlex = 96,
		op_setproperty = 97,
		op_getlocal = 98,
		op_setlocal = 99,
		op_getglobalscope = 100,
		op_getscopeobject = 101,
		op_getproperty = 102,
		op_getouterscope = 103,
		op_initproperty = 104,
		op_dup_nrc = 105,
		op_deleteproperty = 106,
		op_pop_nrc = 107,
		op_getslot = 108,
		op_setslot = 109,
		op_getglobalslot = 110,
		op_setglobalslot = 111,
		op_convert_s = 112,
		op_esc_xelem = 113,
		op_esc_xattr = 114,
		op_convert_i = 115,
		op_convert_u = 116,
		op_convert_d = 117,
		op_convert_b = 118,
		op_convert_o = 119,
		op_checkfilter = 120,
		op_add_ti = 121,
		op_subtract_ti = 122,
		op_multiply_ti = 123,
		op_add_td = 124,
		op_subtract_td = 125,
		op_multiply_td = 126,
		op_divide_td = 127,
		op_coerce = 128,
		op_inclocal_tu = 129,
		op_declocal_tu = 130,
		op_coerce_s = 133,
		op_astype = 134,
		op_astypelate = 135,
		op_inclocal_u = 136,
		op_declocal_u = 137,
		op_negate = 144,
		op_increment = 145,
		op_inclocal = 146,
		op_decrement = 147,
		op_declocal = 148,
		op_typeof = 149,
		op_not = 150,
		op_bitnot = 151,
		op_increment_ti = 152,
		op_decrement_ti = 153,
		op_getproperty_ind = 154,
		op_add = 160,
		op_subtract = 161,
		op_multiply = 162,
		op_divide = 163,
		op_modulo = 164,
		op_lshift = 165,
		op_rshift = 166,
		op_urshift = 167,
		op_bitand = 168,
		op_bitor = 169,
		op_bitxor = 170,
		op_equals = 171,
		op_strictequals = 172,
		op_lessthan = 173,
		op_lessequals = 174,
		op_greaterthan = 175,
		op_greaterequals = 176,
		op_instanceof = 177,
		op_istype = 178,
		op_istypelate = 179,
		op_in = 180,
		op_getabsobject = 181,
		op_getabsslot = 182,
		op_setabsslot = 183,
		op_initabsslot = 184,
		op_callsupermethod = 185,
		op_callgetter = 186,
		op_callsupergetter = 187,
		op_increment_i = 192,
		op_decrement_i = 193,
		op_inclocal_i = 194,
		op_declocal_i = 195,
		op_negate_i = 196,
		op_add_i = 197,
		op_subtract_i = 198,
		op_multiply_i = 199,
		op_callobject = 206,
		op_getlocal_0 = 208,
		op_getlocal_1 = 209,
		op_getlocal_2 = 210,
		op_getlocal_3 = 211,
		op_setlocal_1 = 213,
		op_setlocal_2 = 214,
		op_setlocal_3 = 215,
		op_debug = 239,
		op_debugline = 240,
		op_debugfile = 241,
	};
	struct WordCodeInfo;
public:
	static const Scaleform::GFx::AS3::WordCode::WordCodeInfo & GetWordCodeInfo(const Scaleform::GFx::AS3::WordCode::OpCode);
private:
	static const Scaleform::GFx::AS3::WordCode::WordCodeInfo opcode_info[128]; // 0xFFFFFFFFFFFFFFFF
};
struct Scaleform::GFx::AS3::WordCode::WordCodeInfo
{
	unsigned char GetPopN();
	unsigned char GetPushN();
	bool PopArgs();
	bool PopIndex();
	char GetOperandCount();
	char operandCount : 4; // 0x0
	unsigned char canThrow : 1; // 0x0
	unsigned char hasEffect : 1; // 0x0
	unsigned char pop : 2; // 0x0
	unsigned char push : 2; // 0x1
	unsigned char pop_args : 1; // 0x1
	unsigned char pop_index : 1; // 0x1
};
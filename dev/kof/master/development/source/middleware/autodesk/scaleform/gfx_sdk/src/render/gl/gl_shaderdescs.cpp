#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_vertex.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_shapedatadefs.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/kernel/sf_stats.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/kernel/sf_timer.h"
#include "program files (x86)/windows kits/8.1/include/um/winuser.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_strokeraa.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/kernel/sf_alg.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_hal.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/kernel/sf_threads.h"
#include "program files (x86)/windows kits/10/include/10.0.10240.0/ucrt/corecrt_wio.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/kernel/sf_array.h"
#include "program files (x86)/microsoft visual studio 14.0/vc/include/xtgmath.h"
#include "program files (x86)/microsoft visual studio 14.0/vc/include/xtr1common"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_glyphcacheconfig.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_meshkey.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/kernel/sf_sysalloc.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_rasterizer.h"
#include "program files (x86)/windows kits/10/include/10.0.10240.0/ucrt/stdio.h"
#include "program files (x86)/windows kits/10/include/10.0.10240.0/ucrt/corecrt_wstdio.h"
#include "program files (x86)/windows kits/10/include/10.0.10240.0/ucrt/corecrt_stdio_config.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_textmeshprovider.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_glyphparam.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_matrixpool.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_meshcache.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_meshcacheconfig.h"
#include "program files (x86)/windows kits/8.1/include/um/propidl.h"
#include "program files (x86)/windows kits/8.1/include/um/winbase.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_texturecache.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_glyphqueue.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_font.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_tessdefs.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/kernel/sf_allocinfo.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_shapedatapacked.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_gradients.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_pathdatapacker.h"
#include "program files (x86)/windows kits/10/include/10.0.10240.0/ucrt/corecrt_wstring.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_twips.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/gl/gl_shader.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_shader.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/kernel/sf_hash.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_filters.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/kernel/sf_allocator.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_filterparams.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_queue.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/kernel/sf_ampinterface.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_primitive.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/kernel/sf_string.h"
#include "program files (x86)/windows kits/10/include/10.0.10240.0/ucrt/string.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/kernel/sf_utf8util.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/kernel/sf_allocaddr.h"
#include "program files (x86)/windows kits/10/include/10.0.10240.0/ucrt/corecrt_memory.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/kernel/sf_radixtree.h"
#include "program files (x86)/windows kits/10/include/10.0.10240.0/ucrt/corecrt_memcpy_s.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/gl/gl_extensions.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_containers.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_graphicsdevice.h"
#include "program files (x86)/windows kits/8.1/include/shared/stralign.h"
#include "program files (x86)/windows kits/10/include/10.0.10240.0/ucrt/sys/stat.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_scale9grid.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_matrix4x4.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/kernel/sf_arraystaticbuff.h"
#include "program files (x86)/windows kits/10/include/10.0.10240.0/ucrt/wchar.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_matrix3x4.h"
#include "program files (x86)/windows kits/10/include/10.0.10240.0/ucrt/corecrt_wconio.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_tessgen.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/kernel/heapmh/heapmh_sysallocmalloc.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_tessellator.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_color.h"
#include "program files (x86)/windows kits/10/include/10.0.10240.0/ucrt/malloc.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/gl/gl_graphicsdevice.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_resizeimage.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/kernel/sf_arrayunsafe.h"
#include "program files (x86)/microsoft visual studio 14.0/vc/include/cmath"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_glyphfitter.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_drawableimage.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_buffer.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_math2d.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_image.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_cxform.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_matrixstate.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_toleranceparams.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_sync.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_threadcommandqueue.h"
#include "program files (x86)/windows kits/8.1/include/shared/winerror.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_stroker.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_viewport.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/kernel/sf_uncopyable.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/kernel/sf_list.h"
#include "program files (x86)/windows kits/8.1/include/shared/guiddef.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_hairliner.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_matrix2x4.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_glyphcache.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/kernel/sf_simd_sse.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/kernel/sf_log.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/kernel/sf_refcount.h"
#include "program files (x86)/windows kits/8.1/include/um/oleauto.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/kernel/sf_memory.h"
#include "program files (x86)/windows kits/10/include/10.0.10240.0/ucrt/corecrt_wtime.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/kernel/sf_memoryheap.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_states.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/kernel/sf_atomic.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_statebag.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_profiler.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_memorymanager.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/kernel/sf_std.h"
#include "program files (x86)/windows kits/10/include/10.0.10240.0/ucrt/stdlib.h"
#include "program files (x86)/windows kits/10/include/10.0.10240.0/ucrt/ctype.h"
#include "program files (x86)/windows kits/8.1/include/um/winnt.h"
#include "program files (x86)/windows kits/8.1/include/shared/basetsd.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/kernel/sf_types.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_types2d.h"
#include "program files (x86)/windows kits/10/include/10.0.10240.0/ucrt/math.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/kernel/sf_threadcheck.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_textlayout.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/kernel/sf_file.h"
#include "program files (x86)/microsoft visual studio 14.0/vc/include/vadefs.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_context.h"
#include "dev/kof/master/development/source/middleware/autodesk/scaleform/gfx_sdk/src/render/render_constants.h"

bool Scaleform::Render::GL::ShaderDesc::IsShaderVersionSupported(Scaleform::Render::GL::ShaderDesc::ShaderVersion ver); // 0x1405DB350
Scaleform::Render::GL::ShaderDesc::ShaderType Scaleform::Render::GL::ShaderDesc::GetShaderTypeForComboIndex(unsigned long comboIndex, Scaleform::Render::GL::ShaderDesc::ShaderVersion ver); // 0x1405D7DC0
Scaleform::Render::GL::ShaderDesc::ShaderIndex Scaleform::Render::GL::ShaderDesc::GetShaderIndex(Scaleform::Render::GL::ShaderDesc::ShaderType type); // 0x1405CD120
struct Scaleform::Render::GL::ShaderIndexEntry
{
	Scaleform::Render::GL::VertexShaderDesc::ShaderIndex VertexIndex; // 0x0
	Scaleform::Render::GL::FragShaderDesc::ShaderIndex FragIndex; // 0x4
};
const unsigned char Scaleform::Render::GL::Uniform::UniformFlags[0]; // 0x14079C200
typedef Scaleform::Render::RBGenericImpl::RenderBufferManager Scaleform::Render::RenderBufferManagerGeneric;
const Scaleform::Render::GL::VertexShaderDesc * Scaleform::Render::GL::VertexShaderDesc::Descs[405]; // 0x140A0C950
const Scaleform::Render::GL::FragShaderDesc * Scaleform::Render::GL::FragShaderDesc::Descs[1105]; // 0x140A07710
const char * Scaleform::Render::GL::ShaderUniformNames[26]; // 0x140A099A0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGVertexTexDensity$initializer$)(); // 0x14073E840
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dYUVCxformEAlpha$initializer$)(); // 0x14073E310
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSGradOuterBevelMul$initializer$)(); // 0x14073F6B0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGCxformAcEAlpha$initializer$)(); // 0x14073EEB0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGVertexMul; // 0x140A19C48
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchYUV; // 0x140A17AA0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dTexTGTexTGCxform$initializer$)(); // 0x14073DBD8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGCxformAcEAlphaMul; // 0x140A1BC78
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSGradInnerBevel; // 0x140A1E478
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGCMatrixAc$initializer$)(); // 0x140740428
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dTexTGVertex; // 0x140A11590
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGTexTGEAlphaMul$initializer$)(); // 0x14073FC28
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGCMatrixAcMul; // 0x140A227D0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGTexTGEAlphaInv; // 0x140A1FFD0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchYUV$initializer$)(); // 0x14073E318
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGVertexMul$initializer$)(); // 0x14073E848
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGCxformAcEAlphaMul$initializer$)(); // 0x14073EEB8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSGradInnerBevel$initializer$)(); // 0x14073F6B8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dTexTGVertex$initializer$)(); // 0x14073DBE0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGCxformAcEAlphaInv; // 0x140A1BCA0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchYUVTexDensity; // 0x140A17B10
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSGradInnerBevelMul; // 0x140A1E4A0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGVertexInv; // 0x140A19C70
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGTexTGEAlphaInv$initializer$)(); // 0x14073FC30
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGCMatrixAcMul$initializer$)(); // 0x140740430
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dTexTGVertexTexDensity; // 0x140A11600
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGCMatrixAcEAlpha; // 0x140A227F8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGTexTGCxform; // 0x140A1FFF8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGCxformAcEAlphaInv$initializer$)(); // 0x14073EEC0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchYUVTexDensity$initializer$)(); // 0x14073E320
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSGradInnerBevelMul$initializer$)(); // 0x14073F6C0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGVertexInv$initializer$)(); // 0x14073E850
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dTexTGVertexTexDensity$initializer$)(); // 0x14073DBE8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FVertex; // 0x140A1BCC8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSGradFullBevel; // 0x140A1E4C8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGVertexEAlpha; // 0x140A19C98
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchYUVEAlpha; // 0x140A17B80
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGCMatrixAcEAlpha$initializer$)(); // 0x140740438
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGTexTGCxform$initializer$)(); // 0x14073FC38
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dTexTGVertexCxform; // 0x140A11670
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGCMatrixAcEAlphaMul; // 0x140A22820
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGTexTGCxformMul; // 0x140A20020
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSGradFullBevel$initializer$)(); // 0x14073F6C8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FVertex$initializer$)(); // 0x14073EEC8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGVertexEAlpha$initializer$)(); // 0x14073E858
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchYUVEAlpha$initializer$)(); // 0x14073E328
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGVertexEAlphaTexDensity; // 0x140A19CC0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FVertexMul; // 0x140A1BCF0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchYUVEAlphaTexDensity; // 0x140A17BF0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dTexTGVertexCxform$initializer$)(); // 0x14073DBF0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSGradFullBevelMul; // 0x140A1E4F0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGCMatrixAcEAlphaMul$initializer$)(); // 0x140740440
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchTexTG; // 0x140A116E0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGTexTGCxformMul$initializer$)(); // 0x14073FC40
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGTexTGCxformInv; // 0x140A20048
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBox1Blur; // 0x140A22848
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGVertexEAlphaTexDensity$initializer$)(); // 0x14073E860
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FVertexMul$initializer$)(); // 0x14073EED0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchYUVEAlphaTexDensity$initializer$)(); // 0x14073E330
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSGradFullBevelMul$initializer$)(); // 0x14073F6D0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FVertexInv; // 0x140A1BD18
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchTexTG$initializer$)(); // 0x14073DBF8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSGradHideBaseOuterBevel; // 0x140A1E518
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGVertexEAlphaMul; // 0x140A19CE8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchYUVCxform; // 0x140A17C60
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGTexTGCxformInv$initializer$)(); // 0x14073FC48
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchTexTGTexDensity; // 0x140A11750
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBox1Blur$initializer$)(); // 0x140740448
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGTexTGCxformEAlpha; // 0x140A20070
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBox1BlurMul; // 0x140A22870
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FVertexInv$initializer$)(); // 0x14073EED8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSGradHideBaseOuterBevel$initializer$)(); // 0x14073F6D8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGVertexEAlphaMul$initializer$)(); // 0x14073E868
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchYUVCxform$initializer$)(); // 0x14073E338
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchTexTGTexDensity$initializer$)(); // 0x14073DC00
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FVertexEAlpha; // 0x140A1BD40
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGVertexEAlphaInv; // 0x140A19D10
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchYUVCxformEAlpha; // 0x140A17CD0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSGradHideBaseOuterBevelMul; // 0x140A1E540
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGTexTGCxformEAlpha$initializer$)(); // 0x14073FC50
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBox1BlurMul$initializer$)(); // 0x140740450
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchTexTGEAlpha; // 0x140A117C0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBox2Blur; // 0x140A22898
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGTexTGCxformEAlphaMul; // 0x140A20098
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FVertexEAlpha$initializer$)(); // 0x14073EEE0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGVertexEAlphaInv$initializer$)(); // 0x14073E870
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchYUVCxformEAlpha$initializer$)(); // 0x14073E340
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSGradHideBaseOuterBevelMul$initializer$)(); // 0x14073F6E0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGVertexCxform; // 0x140A19D38
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dYUV; // 0x140A17D40
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FVertexEAlphaMul; // 0x140A1BD68
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchTexTGEAlpha$initializer$)(); // 0x14073DC08
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSGradHideBaseInnerBevel; // 0x140A1E568
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBox2Blur$initializer$)(); // 0x140740458
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchTexTGEAlphaTexDensity; // 0x140A11830
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGTexTGCxformEAlphaMul$initializer$)(); // 0x14073FC58
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGTexTGCxformEAlphaInv; // 0x140A200C0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBox2BlurMul; // 0x140A228C0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGVertexCxform$initializer$)(); // 0x14073E878
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dYUV$initializer$)(); // 0x14073E348
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FVertexEAlphaMul$initializer$)(); // 0x14073EEE8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSGradHideBaseInnerBevel$initializer$)(); // 0x14073F6E8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchTexTGEAlphaTexDensity$initializer$)(); // 0x14073DC10
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGVertexCxformMul; // 0x140A19D60
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dYUVTexDensity; // 0x140A17DB0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSGradHideBaseInnerBevelMul; // 0x140A1E590
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FVertexEAlphaInv; // 0x140A1BD90
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGTexTGCxformEAlphaInv$initializer$)(); // 0x14073FC60
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBox2BlurMul$initializer$)(); // 0x140740460
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchTexTGCxform; // 0x140A118A0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSColorOuterBevel; // 0x140A228E8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGTexTGCxformAc; // 0x140A200E8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGVertexCxformMul$initializer$)(); // 0x14073E880
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dYUVTexDensity$initializer$)(); // 0x14073E350
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSGradHideBaseInnerBevelMul$initializer$)(); // 0x14073F6F0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FVertexEAlphaInv$initializer$)(); // 0x14073EEF0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGVertexCxformInv; // 0x140A19D88
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dYUVEAlpha; // 0x140A17E20
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FVertexCxform; // 0x140A1BDB8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSGradHideBaseFullBevel; // 0x140A1E5B8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchTexTGCxform$initializer$)(); // 0x14073DC18
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSColorOuterBevel$initializer$)(); // 0x140740468
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchTexTGCxformEAlpha; // 0x140A11910
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGTexTGCxformAc$initializer$)(); // 0x14073FC68
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSColorOuterBevelMul; // 0x140A22910
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGTexTGCxformAcMul; // 0x140A20110
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dYUVEAlpha$initializer$)(); // 0x14073E358
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGVertexCxformInv$initializer$)(); // 0x14073E888
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FVertexCxform$initializer$)(); // 0x14073EEF8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSGradHideBaseFullBevel$initializer$)(); // 0x14073F6F8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dYUVEAlphaTexDensity; // 0x140A17E90
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGVertexCxformEAlpha; // 0x140A19DB0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSGradHideBaseFullBevelMul; // 0x140A1E5E0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchTexTGCxformEAlpha$initializer$)(); // 0x14073DC20
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FVertexCxformMul; // 0x140A1BDE0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSColorOuterBevelMul$initializer$)(); // 0x140740470
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchVertex; // 0x140A11980
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGTexTGCxformAcMul$initializer$)(); // 0x14073FC70
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSColorInnerShadow; // 0x140A22938
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGTexTGCxformAcInv; // 0x140A20138
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGVertexCxformEAlpha$initializer$)(); // 0x14073E890
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dYUVEAlphaTexDensity$initializer$)(); // 0x14073E360
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSGradHideBaseFullBevelMul$initializer$)(); // 0x14073F700
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FVertexCxformMul$initializer$)(); // 0x14073EF00
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGVertexCxformEAlphaMul; // 0x140A19DD8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FVertexCxformInv; // 0x140A1BE08
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchVertex$initializer$)(); // 0x14073DC28
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dYUVCxform; // 0x140A17F00
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSColor2OuterBevel; // 0x140A1E608
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchVertexEAlpha; // 0x140A119F0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSColorInnerShadow$initializer$)(); // 0x140740478
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGTexTGCxformAcInv$initializer$)(); // 0x14073FC78
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGTexTGCxformAcEAlpha; // 0x140A20160
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSColorInnerShadowMul; // 0x140A22960
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGVertexCxformEAlphaMul$initializer$)(); // 0x14073E898
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FVertexCxformInv$initializer$)(); // 0x14073EF08
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dYUVCxform$initializer$)(); // 0x14073E368
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSColor2OuterBevel$initializer$)(); // 0x14073F708
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchVertexEAlpha$initializer$)(); // 0x14073DC30
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dYUVCxformEAlpha; // 0x140A17F70
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSColor2OuterBevelMul; // 0x140A1E630
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FVertexCxformEAlpha; // 0x140A1BE30
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGVertexCxformEAlphaInv; // 0x140A19E00
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGTexTGCxformAcEAlpha$initializer$)(); // 0x14073FC80
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSColorInnerShadowMul$initializer$)(); // 0x140740480
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchVertexCxform; // 0x140A11A60
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSColorFullBevel; // 0x140A22988
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGTexTGCxformAcEAlphaMul; // 0x140A20188
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dYUVCxformEAlpha$initializer$)(); // 0x14073E370
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSColor2OuterBevelMul$initializer$)(); // 0x14073F710
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FVertexCxformEAlpha$initializer$)(); // 0x14073EF10
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGVertexCxformEAlphaInv$initializer$)(); // 0x14073E8A0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSColor2InnerBevel; // 0x140A1E658
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGVertexCxformAc; // 0x140A19E28
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedYUV; // 0x140A17FE0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FVertexCxformEAlphaMul; // 0x140A1BE58
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchVertexCxform$initializer$)(); // 0x14073DC38
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchVertexCxformEAlpha; // 0x140A11AD0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSColorFullBevel$initializer$)(); // 0x140740488
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGTexTGCxformAcEAlphaMul$initializer$)(); // 0x14073FC88
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSColorFullBevelMul; // 0x140A229B0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGTexTGCxformAcEAlphaInv; // 0x140A201B0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSColor2InnerBevel$initializer$)(); // 0x14073F718
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGVertexCxformAc$initializer$)(); // 0x14073E8A8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedYUV$initializer$)(); // 0x14073E378
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FVertexCxformEAlphaMul$initializer$)(); // 0x14073EF18
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedYUVTexDensity; // 0x140A18050
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSColor2InnerBevelMul; // 0x140A1E680
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FVertexCxformEAlphaInv; // 0x140A1BE80
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchVertexCxformEAlpha$initializer$)(); // 0x14073DC40
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGVertexCxformAcMul; // 0x140A19E50
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchTexTGTexTG; // 0x140A11B40
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSColorFullBevelMul$initializer$)(); // 0x140740490
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGTexTGCxformAcEAlphaInv$initializer$)(); // 0x14073FC90
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSColorHideBaseOuterBevel; // 0x140A229D8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGVertex; // 0x140A201D8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedYUVTexDensity$initializer$)(); // 0x14073E380
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSColor2InnerBevelMul$initializer$)(); // 0x14073F720
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FVertexCxformEAlphaInv$initializer$)(); // 0x14073EF20
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGVertexCxformAcMul$initializer$)(); // 0x14073E8B0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchTexTGTexTG$initializer$)(); // 0x14073DC48
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedYUVEAlpha; // 0x140A180C0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGVertexCxformAcInv; // 0x140A19E78
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSColor2FullBevel; // 0x140A1E6A8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FVertexCxformAc; // 0x140A1BEA8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSColorHideBaseOuterBevel$initializer$)(); // 0x140740498
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchTexTGTexTGTexDensity; // 0x140A11BB0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGVertex$initializer$)(); // 0x14073FC98
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSColorHideBaseOuterBevelMul; // 0x140A22A00
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGVertexTexDensity; // 0x140A20200
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedYUVEAlpha$initializer$)(); // 0x14073E388
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGVertexCxformAcInv$initializer$)(); // 0x14073E8B8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSColor2FullBevel$initializer$)(); // 0x14073F728
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FVertexCxformAc$initializer$)(); // 0x14073EF28
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedYUVEAlphaTexDensity; // 0x140A18130
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FVertexCxformAcMul; // 0x140A1BED0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchTexTGTexTGTexDensity$initializer$)(); // 0x14073DC50
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGVertexCxformAcEAlpha; // 0x140A19EA0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSColor2FullBevelMul; // 0x140A1E6D0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchTexTGTexTGCxform; // 0x140A11C20
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSColorHideBaseOuterBevelMul$initializer$)(); // 0x1407404A0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGVertexTexDensity$initializer$)(); // 0x14073FCA0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGVertexMul; // 0x140A20228
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSColorHideBaseInnerShadow; // 0x140A22A28
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedYUVEAlphaTexDensity$initializer$)(); // 0x14073E390
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FVertexCxformAcMul$initializer$)(); // 0x14073EF30
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGVertexCxformAcEAlpha$initializer$)(); // 0x14073E8C0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSColor2FullBevelMul$initializer$)(); // 0x14073F730
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedYUVCxform; // 0x140A181A0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchTexTGTexTGCxform$initializer$)(); // 0x14073DC58
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FVertexCxformAcInv; // 0x140A1BEF8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGVertexCxformAcEAlphaMul; // 0x140A19EC8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSColor2HideBaseOuterBevel; // 0x140A1E6F8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGVertexMul$initializer$)(); // 0x14073FCA8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSColorHideBaseInnerShadow$initializer$)(); // 0x1407404A8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchTexTGVertex; // 0x140A11C90
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGVertexInv; // 0x140A20250
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSColorHideBaseInnerShadowMul; // 0x140A22A50
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedYUVCxform$initializer$)(); // 0x14073E398
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FVertexCxformAcInv$initializer$)(); // 0x14073EF38
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGVertexCxformAcEAlphaMul$initializer$)(); // 0x14073E8C8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSColor2HideBaseOuterBevel$initializer$)(); // 0x14073F738
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FVertexCxformAcEAlpha; // 0x140A1BF20
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGVertexCxformAcEAlphaInv; // 0x140A19EF0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedYUVCxformEAlpha; // 0x140A18210
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSColor2HideBaseOuterBevelMul; // 0x140A1E720
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchTexTGVertex$initializer$)(); // 0x14073DC60
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGVertexInv$initializer$)(); // 0x14073FCB0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSColorHideBaseInnerShadowMul$initializer$)(); // 0x1407404B0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchTexTGVertexTexDensity; // 0x140A11D00
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGVertexEAlpha; // 0x140A20278
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSColorHideBaseFullBevel; // 0x140A22A78
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FVertexCxformAcEAlpha$initializer$)(); // 0x14073EF40
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGVertexCxformAcEAlphaInv$initializer$)(); // 0x14073E8D0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedYUVCxformEAlpha$initializer$)(); // 0x14073E3A0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSColor2HideBaseOuterBevelMul$initializer$)(); // 0x14073F740
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dYUV; // 0x140A18280
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FVertexCxformAcEAlphaMul; // 0x140A1BF48
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSolid; // 0x140A19F18
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchTexTGVertexTexDensity$initializer$)(); // 0x14073DC68
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSColor2HideBaseInnerBevel; // 0x140A1E748
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGVertexEAlpha$initializer$)(); // 0x14073FCB8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSColorHideBaseFullBevel$initializer$)(); // 0x1407404B8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchTexTGVertexCxform; // 0x140A11D70
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSColorHideBaseFullBevelMul; // 0x140A22AA0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGVertexEAlphaTexDensity; // 0x140A202A0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dYUV$initializer$)(); // 0x14073E3A8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FVertexCxformAcEAlphaMul$initializer$)(); // 0x14073EF48
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSolid$initializer$)(); // 0x14073E8D8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSColor2HideBaseInnerBevel$initializer$)(); // 0x14073F748
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FVertexCxformAcEAlphaInv; // 0x140A1BF70
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSColor2HideBaseInnerBevelMul; // 0x140A1E770
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSolidMul; // 0x140A19F40
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dYUVTexDensity; // 0x140A182F0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchTexTGVertexCxform$initializer$)(); // 0x14073DC70
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSColorHideBaseFullBevelMul$initializer$)(); // 0x1407404C0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGVertexEAlphaTexDensity$initializer$)(); // 0x14073FCC0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dTexTG; // 0x140A11DE0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGVertexEAlphaMul; // 0x140A202C8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSGradOuterBevel; // 0x140A22AC8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dYUVTexDensity$initializer$)(); // 0x14073E3B0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSolidMul$initializer$)(); // 0x14073E8E0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FVertexCxformAcEAlphaInv$initializer$)(); // 0x14073EF50
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSColor2HideBaseInnerBevelMul$initializer$)(); // 0x14073F750
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dYUVEAlpha; // 0x140A18360
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSColor2HideBaseFullBevel; // 0x140A1E798
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGTexTG; // 0x140A1BF98
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSolidInv; // 0x140A19F68
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dTexTG$initializer$)(); // 0x14073DC78
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGVertexEAlphaMul$initializer$)(); // 0x14073FCC8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dTexTGTexDensity; // 0x140A11E50
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSGradOuterBevel$initializer$)(); // 0x1407404C8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSGradOuterBevelMul; // 0x140A22AF0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGVertexEAlphaInv; // 0x140A202F0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dYUVEAlpha$initializer$)(); // 0x14073E3B8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSColor2HideBaseFullBevel$initializer$)(); // 0x14073F758
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGTexTG$initializer$)(); // 0x14073EF58
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSolidInv$initializer$)(); // 0x14073E8E8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGTexTGTexDensity; // 0x140A1BFC0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSColor2HideBaseFullBevelMul; // 0x140A1E7C0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dYUVEAlphaTexDensity; // 0x140A183D0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dTexTGTexDensity$initializer$)(); // 0x14073DC80
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FText; // 0x140A19F90
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSGradOuterBevelMul$initializer$)(); // 0x1407404D0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dTexTGEAlpha; // 0x140A11EC0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGVertexEAlphaInv$initializer$)(); // 0x14073FCD0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGVertexCxform; // 0x140A20318
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSGradInnerBevel; // 0x140A22B18
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGTexTGTexDensity$initializer$)(); // 0x14073EF60
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSColor2HideBaseFullBevelMul$initializer$)(); // 0x14073F760
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dYUVEAlphaTexDensity$initializer$)(); // 0x14073E3C0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FText$initializer$)(); // 0x14073E8F0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGTexTGMul; // 0x140A1BFE8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSGrad2OuterBevel; // 0x140A1E7E8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dTexTGEAlpha$initializer$)(); // 0x14073DC88
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dYUVCxform; // 0x140A18440
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTextTexDensity; // 0x140A19FB8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGVertexCxform$initializer$)(); // 0x14073FCD8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dTexTGEAlphaTexDensity; // 0x140A11F30
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSGradInnerBevel$initializer$)(); // 0x1407404D8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSGradInnerBevelMul; // 0x140A22B40
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGVertexCxformMul; // 0x140A20340
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGTexTGMul$initializer$)(); // 0x14073EF68
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSGrad2OuterBevel$initializer$)(); // 0x14073F768
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dYUVCxform$initializer$)(); // 0x14073E3C8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTextTexDensity$initializer$)(); // 0x14073E8F8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dTexTGEAlphaTexDensity$initializer$)(); // 0x14073DC90
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dYUVCxformEAlpha; // 0x140A184B0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGTexTGInv; // 0x140A1C010
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTextMul; // 0x140A19FE0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSGrad2OuterBevelMul; // 0x140A1E810
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dTexTGCxform; // 0x140A11FA0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSGradInnerBevelMul$initializer$)(); // 0x1407404E0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGVertexCxformMul$initializer$)(); // 0x14073FCE0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGVertexCxformInv; // 0x140A20368
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSGradFullBevel; // 0x140A22B68
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dYUVCxformEAlpha$initializer$)(); // 0x14073E3D0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGTexTGInv$initializer$)(); // 0x14073EF70
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTextMul$initializer$)(); // 0x14073E900
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSGrad2OuterBevelMul$initializer$)(); // 0x14073F770
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dTexTGCxform$initializer$)(); // 0x14073DC98
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSGrad2InnerBevel; // 0x140A1E838
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGTexTGEAlpha; // 0x140A1C038
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBox1Blur; // 0x140A18520
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTextInv; // 0x140A1A008
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGVertexCxformInv$initializer$)(); // 0x14073FCE8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dTexTGCxformEAlpha; // 0x140A12010
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSGradFullBevel$initializer$)(); // 0x1407404E8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSGradFullBevelMul; // 0x140A22B90
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGVertexCxformEAlpha; // 0x140A20390
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSGrad2InnerBevel$initializer$)(); // 0x14073F778
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGTexTGEAlpha$initializer$)(); // 0x14073EF78
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBox1Blur$initializer$)(); // 0x14073E3D8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTextInv$initializer$)(); // 0x14073E908
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGTexTGEAlphaTexDensity; // 0x140A1C060
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VDrawableCopyPixels; // 0x140A18590
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSGrad2InnerBevelMul; // 0x140A1E860
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FATexUV; // 0x140A1A030
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dTexTGCxformEAlpha$initializer$)(); // 0x14073DCA0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dVertex; // 0x140A12080
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSGradFullBevelMul$initializer$)(); // 0x1407404F0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGVertexCxformEAlpha$initializer$)(); // 0x14073FCF0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGVertexCxformEAlphaMul; // 0x140A203B8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSGradHideBaseOuterBevel; // 0x140A22BB8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGTexTGEAlphaTexDensity$initializer$)(); // 0x14073EF80
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VDrawableCopyPixels$initializer$)(); // 0x14073E3E0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSGrad2InnerBevelMul$initializer$)(); // 0x14073F780
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FATexUV$initializer$)(); // 0x14073E910
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VDrawableCopyPixelsAlpha; // 0x140A18600
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSGrad2FullBevel; // 0x140A1E888
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dVertex$initializer$)(); // 0x14073DCA8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGTexTGEAlphaMul; // 0x140A1C088
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FATexUVTexDensity; // 0x140A1A058
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGVertexCxformEAlphaMul$initializer$)(); // 0x14073FCF8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dVertexEAlpha; // 0x140A120F0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSGradHideBaseOuterBevel$initializer$)(); // 0x1407404F8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSGradHideBaseOuterBevelMul; // 0x140A22BE0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGVertexCxformEAlphaInv; // 0x140A203E0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VDrawableCopyPixelsAlpha$initializer$)(); // 0x14073E3E8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSGrad2FullBevel$initializer$)(); // 0x14073F788
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGTexTGEAlphaMul$initializer$)(); // 0x14073EF88
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FATexUVTexDensity$initializer$)(); // 0x14073E918
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dVertexEAlpha$initializer$)(); // 0x14073DCB0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FATexUVMul; // 0x140A1A080
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSGrad2FullBevelMul; // 0x140A1E8B0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBlendLayer; // 0x140A18670
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGTexTGEAlphaInv; // 0x140A1C0B0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSGradHideBaseOuterBevelMul$initializer$)(); // 0x140740500
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dVertexCxform; // 0x140A12160
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGVertexCxformEAlphaInv$initializer$)(); // 0x14073FD00
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGVertexCxformAc; // 0x140A20408
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSGradHideBaseInnerBevel; // 0x140A22C08
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FATexUVMul$initializer$)(); // 0x14073E920
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSGrad2FullBevelMul$initializer$)(); // 0x14073F790
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBlendLayer$initializer$)(); // 0x14073E3F0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGTexTGEAlphaInv$initializer$)(); // 0x14073EF90
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FATexUVInv; // 0x140A1A0A8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dVertexCxform$initializer$)(); // 0x14073DCB8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSGrad2HideBaseOuterBevel; // 0x140A1E8D8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGTexTGCxform; // 0x140A1C0D8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGVertexCxformAc$initializer$)(); // 0x14073FD08
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSGradHideBaseInnerBevel$initializer$)(); // 0x140740508
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dVertexCxformEAlpha; // 0x140A121D0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSGradHideBaseInnerBevelMul; // 0x140A22C30
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGVertexCxformAcMul; // 0x140A20430
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FATexUVInv$initializer$)(); // 0x14073E928
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSGrad2HideBaseOuterBevel$initializer$)(); // 0x14073F798
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGTexTGCxform$initializer$)(); // 0x14073EF98
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSGrad2HideBaseOuterBevelMul; // 0x140A1E900
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FATexUVCxform; // 0x140A1A0D0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGTexTGCxformMul; // 0x140A1C100
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dVertexCxformEAlpha$initializer$)(); // 0x14073DCC0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSGradHideBaseInnerBevelMul$initializer$)(); // 0x140740510
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGVertexCxformAcMul$initializer$)(); // 0x14073FD10
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dTexTGTexTG; // 0x140A12240
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSGradHideBaseFullBevel; // 0x140A22C58
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGVertexCxformAcInv; // 0x140A20458
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSGrad2HideBaseOuterBevelMul$initializer$)(); // 0x14073F7A0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FATexUVCxform$initializer$)(); // 0x14073E930
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGTexTGCxformMul$initializer$)(); // 0x14073EFA0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGTexTGCxformInv; // 0x140A1C128
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FATexUVCxformMul; // 0x140A1A0F8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dTexTGTexTG$initializer$)(); // 0x14073DCC8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSGrad2HideBaseInnerBevel; // 0x140A1E928
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGVertexCxformAcInv$initializer$)(); // 0x14073FD18
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSGradHideBaseFullBevel$initializer$)(); // 0x140740518
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dTexTGTexTGTexDensity; // 0x140A122B0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGVertexCxformAcEAlpha; // 0x140A20480
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSGradHideBaseFullBevelMul; // 0x140A22C80
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGTexTGCxformInv$initializer$)(); // 0x14073EFA8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FATexUVCxformMul$initializer$)(); // 0x14073E938
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSGrad2HideBaseInnerBevel$initializer$)(); // 0x14073F7A8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dTexTGTexTGTexDensity$initializer$)(); // 0x14073DCD0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSGrad2HideBaseInnerBevelMul; // 0x140A1E950
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGTexTGCxformEAlpha; // 0x140A1C150
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FATexUVCxformInv; // 0x140A1A120
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGVertexCxformAcEAlpha$initializer$)(); // 0x14073FD20
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSGradHideBaseFullBevelMul$initializer$)(); // 0x140740520
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dTexTGTexTGCxform; // 0x140A12320
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSColor2OuterBevel; // 0x140A22CA8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGVertexCxformAcEAlphaMul; // 0x140A204A8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSGrad2HideBaseInnerBevelMul$initializer$)(); // 0x14073F7B0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGTexTGCxformEAlpha$initializer$)(); // 0x14073EFB0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FATexUVCxformInv$initializer$)(); // 0x14073E940
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dTexTGTexTGCxform$initializer$)(); // 0x14073DCD8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchSolid; // 0x140A1A148
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGTexTGCxformEAlphaMul; // 0x140A1C178
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSGrad2HideBaseFullBevel; // 0x140A1E978
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSColor2OuterBevel$initializer$)(); // 0x140740528
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dTexTGVertex; // 0x140A12390
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGVertexCxformAcEAlphaMul$initializer$)(); // 0x14073FD28
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGVertexCxformAcEAlphaInv; // 0x140A204D0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSColor2OuterBevelMul; // 0x140A22CD0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchSolid$initializer$)(); // 0x14073E948
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGTexTGCxformEAlphaMul$initializer$)(); // 0x14073EFB8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSGrad2HideBaseFullBevel$initializer$)(); // 0x14073F7B8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dTexTGVertex$initializer$)(); // 0x14073DCE0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSGrad2HideBaseFullBevelMul; // 0x140A1E9A0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchSolidMul; // 0x140A1A170
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGTexTGCxformEAlphaInv; // 0x140A1C1A0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGVertexCxformAcEAlphaInv$initializer$)(); // 0x14073FD30
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dTexTGVertexTexDensity; // 0x140A12400
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSColor2OuterBevelMul$initializer$)(); // 0x140740530
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSColor2InnerBevel; // 0x140A22CF8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTG; // 0x140A204F8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSGrad2HideBaseFullBevelMul$initializer$)(); // 0x14073F7C0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchSolidMul$initializer$)(); // 0x14073E950
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGTexTGCxformEAlphaInv$initializer$)(); // 0x14073EFC0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FDisplacementMap; // 0x140A1E9C8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dTexTGVertexTexDensity$initializer$)(); // 0x14073DCE8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGTexTGCxformAc; // 0x140A1C1C8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchSolidInv; // 0x140A1A198
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSColor2InnerBevel$initializer$)(); // 0x140740538
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dTexTGVertexCxform; // 0x140A12470
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTG$initializer$)(); // 0x14073FD38
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSColor2InnerBevelMul; // 0x140A22D20
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGTexDensity; // 0x140A20520
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FDisplacementMap$initializer$)(); // 0x14073F7C8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGTexTGCxformAc$initializer$)(); // 0x14073EFC8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchSolidInv$initializer$)(); // 0x14073E958
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGTexTGCxformAcMul; // 0x140A1C1F0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dTexTGVertexCxform$initializer$)(); // 0x14073DCF0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FDisplacementMapDMIgnore; // 0x140A1E9F0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchText; // 0x140A1A1C0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSColor2InnerBevelMul$initializer$)(); // 0x140740540
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VSolid; // 0x140A124E0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGTexDensity$initializer$)(); // 0x14073FD40
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGMul; // 0x140A20548
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSColor2FullBevel; // 0x140A22D48
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGTexTGCxformAcMul$initializer$)(); // 0x14073EFD0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FDisplacementMapDMIgnore$initializer$)(); // 0x14073F7D0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchText$initializer$)(); // 0x14073E960
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTextTexDensity; // 0x140A1A1E8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FDisplacementMapDMColor; // 0x140A1EA18
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGTexTGCxformAcInv; // 0x140A1C218
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VSolid$initializer$)(); // 0x14073DCF8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VText; // 0x140A12550
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGMul$initializer$)(); // 0x14073FD48
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSColor2FullBevel$initializer$)(); // 0x140740548
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSColor2FullBevelMul; // 0x140A22D70
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGInv; // 0x140A20570
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FDisplacementMapDMColor$initializer$)(); // 0x14073F7D8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTextTexDensity$initializer$)(); // 0x14073E968
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGTexTGCxformAcInv$initializer$)(); // 0x14073EFD8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VText$initializer$)(); // 0x14073DD00
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGTexTGCxformAcEAlpha; // 0x140A1C240
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FDrawableCopyPixels; // 0x140A1EA40
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTextMul; // 0x140A1A210
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VTextTexDensity; // 0x140A125C0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSColor2FullBevelMul$initializer$)(); // 0x140740550
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGInv$initializer$)(); // 0x14073FD50
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGEAlpha; // 0x140A20598
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSColor2HideBaseOuterBevel; // 0x140A22D98
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGTexTGCxformAcEAlpha$initializer$)(); // 0x14073EFE0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FDrawableCopyPixels$initializer$)(); // 0x14073F7E0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTextMul$initializer$)(); // 0x14073E970
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGTexTGCxformAcEAlphaMul; // 0x140A1C268
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FDrawableCopyPixelsMergeAlpha; // 0x140A1EA68
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VTextTexDensity$initializer$)(); // 0x14073DD08
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTextInv; // 0x140A1A238
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGEAlpha$initializer$)(); // 0x14073FD58
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSColor2HideBaseOuterBevel$initializer$)(); // 0x140740558
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VTexUV; // 0x140A12630
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGEAlphaTexDensity; // 0x140A205C0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSColor2HideBaseOuterBevelMul; // 0x140A22DC0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGTexTGCxformAcEAlphaMul$initializer$)(); // 0x14073EFE8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FDrawableCopyPixelsMergeAlpha$initializer$)(); // 0x14073F7E8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTextInv$initializer$)(); // 0x14073E978
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VTexUV$initializer$)(); // 0x14073DD10
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FDrawableCopyPixelsNoDestAlpha; // 0x140A1EA90
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchATexUV; // 0x140A1A260
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGTexTGCxformAcEAlphaInv; // 0x140A1C290
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGEAlphaTexDensity$initializer$)(); // 0x14073FD60
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VTexUVTexDensity; // 0x140A126A0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSColor2HideBaseOuterBevelMul$initializer$)(); // 0x140740560
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSColor2HideBaseInnerBevel; // 0x140A22DE8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGEAlphaMul; // 0x140A205E8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FDrawableCopyPixelsNoDestAlpha$initializer$)(); // 0x14073F7F0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchATexUV$initializer$)(); // 0x14073E980
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGTexTGCxformAcEAlphaInv$initializer$)(); // 0x14073EFF0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VTexUVTexDensity$initializer$)(); // 0x14073DD18
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchATexUVTexDensity; // 0x140A1A288
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGVertex; // 0x140A1C2B8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FDrawableCopyPixelsAlpha; // 0x140A1EAB8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VTexUVCxform; // 0x140A12710
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSColor2HideBaseInnerBevel$initializer$)(); // 0x140740568
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGEAlphaMul$initializer$)(); // 0x14073FD68
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGEAlphaInv; // 0x140A20610
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSColor2HideBaseInnerBevelMul; // 0x140A22E10
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGVertex$initializer$)(); // 0x14073EFF8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchATexUVTexDensity$initializer$)(); // 0x14073E988
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FDrawableCopyPixelsAlpha$initializer$)(); // 0x14073F7F8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FDrawableCopyPixelsAlphaMergeAlpha; // 0x140A1EAE0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchATexUVMul; // 0x140A1A2B0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VTexUVCxform$initializer$)(); // 0x14073DD20
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGVertexTexDensity; // 0x140A1C2E0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGEAlphaInv$initializer$)(); // 0x14073FD70
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dSolid; // 0x140A12780
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSColor2HideBaseInnerBevelMul$initializer$)(); // 0x140740570
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGCxform; // 0x140A20638
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSColor2HideBaseFullBevel; // 0x140A22E38
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FDrawableCopyPixelsAlphaMergeAlpha$initializer$)(); // 0x14073F800
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchATexUVMul$initializer$)(); // 0x14073E990
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGVertexTexDensity$initializer$)(); // 0x14073F000
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FDrawableCopyPixelsAlphaNoDestAlpha; // 0x140A1EB08
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dSolid$initializer$)(); // 0x14073DD28
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchATexUVInv; // 0x140A1A2D8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGVertexMul; // 0x140A1C308
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dText; // 0x140A127F0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGCxform$initializer$)(); // 0x14073FD78
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSColor2HideBaseFullBevel$initializer$)(); // 0x140740578
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGCxformMul; // 0x140A20660
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSColor2HideBaseFullBevelMul; // 0x140A22E60
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FDrawableCopyPixelsAlphaNoDestAlpha$initializer$)(); // 0x14073F808
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchATexUVInv$initializer$)(); // 0x14073E998
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGVertexMul$initializer$)(); // 0x14073F008
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dText$initializer$)(); // 0x14073DD30
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGVertexInv; // 0x140A1C330
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FDrawableMerge; // 0x140A1EB30
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchATexUVCxform; // 0x140A1A300
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dTextTexDensity; // 0x140A12860
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGCxformMul$initializer$)(); // 0x14073FD80
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSColor2HideBaseFullBevelMul$initializer$)(); // 0x140740580
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSGrad2OuterBevel; // 0x140A22E88
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGCxformInv; // 0x140A20688
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGVertexInv$initializer$)(); // 0x14073F010
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FDrawableMerge$initializer$)(); // 0x14073F810
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchATexUVCxform$initializer$)(); // 0x14073E9A0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGVertexEAlpha; // 0x140A1C358
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchATexUVCxformMul; // 0x140A1A328
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dTextTexDensity$initializer$)(); // 0x14073DD38
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FDrawableCompare; // 0x140A1EB58
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSGrad2OuterBevel$initializer$)(); // 0x140740588
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dTexUV; // 0x140A128D0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGCxformInv$initializer$)(); // 0x14073FD88
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGCxformEAlpha; // 0x140A206B0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSGrad2OuterBevelMul; // 0x140A22EB0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGVertexEAlpha$initializer$)(); // 0x14073F018
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchATexUVCxformMul$initializer$)(); // 0x14073E9A8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FDrawableCompare$initializer$)(); // 0x14073F818
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGVertexEAlphaTexDensity; // 0x140A1C380
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dTexUV$initializer$)(); // 0x14073DD40
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchATexUVCxformInv; // 0x140A1A350
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FDrawablePaletteMap; // 0x140A1EB80
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGCxformEAlpha$initializer$)(); // 0x14073FD90
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSGrad2OuterBevelMul$initializer$)(); // 0x140740590
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dTexUVTexDensity; // 0x140A12940
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGCxformEAlphaMul; // 0x140A206D8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSGrad2InnerBevel; // 0x140A22ED8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGVertexEAlphaTexDensity$initializer$)(); // 0x14073F020
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchATexUVCxformInv$initializer$)(); // 0x14073E9B0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FDrawablePaletteMap$initializer$)(); // 0x14073F820
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBlendLighten; // 0x140A1EBA8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGVertexEAlphaMul; // 0x140A1C3A8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUV; // 0x140A1A378
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dTexUVTexDensity$initializer$)(); // 0x14073DD48
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGCxformEAlphaMul$initializer$)(); // 0x14073FD98
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dTexUVCxform; // 0x140A129B0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSGrad2InnerBevel$initializer$)(); // 0x140740598
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSGrad2InnerBevelMul; // 0x140A22F00
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGCxformEAlphaInv; // 0x140A20700
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBlendLighten$initializer$)(); // 0x14073F828
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGVertexEAlphaMul$initializer$)(); // 0x14073F028
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUV$initializer$)(); // 0x14073E9B8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVTexDensity; // 0x140A1A3A0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBlendDarken; // 0x140A1EBD0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGVertexEAlphaInv; // 0x140A1C3D0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dTexUVCxform$initializer$)(); // 0x14073DD50
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSGrad2InnerBevelMul$initializer$)(); // 0x1407405A0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchSolid; // 0x140A12A20
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGCxformEAlphaInv$initializer$)(); // 0x14073FDA0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSGrad2FullBevel; // 0x140A22F28
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGCxformAc; // 0x140A20728
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVTexDensity$initializer$)(); // 0x14073E9C0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBlendDarken$initializer$)(); // 0x14073F830
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGVertexEAlphaInv$initializer$)(); // 0x14073F030
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchSolid$initializer$)(); // 0x14073DD58
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGVertexCxform; // 0x140A1C3F8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVMul; // 0x140A1A3C8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBlendOverlay; // 0x140A1EBF8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSGrad2FullBevel$initializer$)(); // 0x1407405A8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchText; // 0x140A12A90
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGCxformAc$initializer$)(); // 0x14073FDA8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGCxformAcMul; // 0x140A20750
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSGrad2FullBevelMul; // 0x140A22F50
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGVertexCxform$initializer$)(); // 0x14073F038
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVMul$initializer$)(); // 0x14073E9C8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBlendOverlay$initializer$)(); // 0x14073F838
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGVertexCxformMul; // 0x140A1C420
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchText$initializer$)(); // 0x14073DD60
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBlendHardlight; // 0x140A1EC20
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVEAlpha; // 0x140A1A3F0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchTextTexDensity; // 0x140A12B00
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGCxformAcMul$initializer$)(); // 0x14073FDB0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSGrad2FullBevelMul$initializer$)(); // 0x1407405B0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSGrad2HideBaseOuterBevel; // 0x140A22F78
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGCxformAcInv; // 0x140A20778
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGVertexCxformMul$initializer$)(); // 0x14073F040
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBlendHardlight$initializer$)(); // 0x14073F840
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVEAlpha$initializer$)(); // 0x14073E9D0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGVertexCxformInv; // 0x140A1C448
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBlendDifference; // 0x140A1EC48
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVEAlphaTexDensity; // 0x140A1A418
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchTextTexDensity$initializer$)(); // 0x14073DD68
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSGrad2HideBaseOuterBevel$initializer$)(); // 0x1407405B8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchTexUV; // 0x140A12B70
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGCxformAcInv$initializer$)(); // 0x14073FDB8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGCxformAcEAlpha; // 0x140A207A0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSGrad2HideBaseOuterBevelMul; // 0x140A22FA0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGVertexCxformInv$initializer$)(); // 0x14073F048
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBlendDifference$initializer$)(); // 0x14073F848
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVEAlphaTexDensity$initializer$)(); // 0x14073E9D8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGVertexCxformEAlpha; // 0x140A1C470
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBlendLayer; // 0x140A1EC70
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchTexUV$initializer$)(); // 0x14073DD70
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVEAlphaMul; // 0x140A1A440
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGCxformAcEAlpha$initializer$)(); // 0x14073FDC0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchTexUVTexDensity; // 0x140A12BE0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSGrad2HideBaseOuterBevelMul$initializer$)(); // 0x1407405C0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGCxformAcEAlphaMul; // 0x140A207C8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSGrad2HideBaseInnerBevel; // 0x140A22FC8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGVertexCxformEAlpha$initializer$)(); // 0x14073F050
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBlendLayer$initializer$)(); // 0x14073F850
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVEAlphaMul$initializer$)(); // 0x14073E9E0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchTexUVTexDensity$initializer$)(); // 0x14073DD78
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGVertexCxformEAlphaMul; // 0x140A1C498
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVCxform; // 0x140A1A468
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGCxformAcEAlphaMul$initializer$)(); // 0x14073FDC8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSGrad2HideBaseInnerBevel$initializer$)(); // 0x1407405C8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchTexUVCxform; // 0x140A12C50
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSGrad2HideBaseInnerBevelMul; // 0x140A22FF0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGCxformAcEAlphaInv; // 0x140A207F0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGVertexCxformEAlphaMul$initializer$)(); // 0x14073F058
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVCxform$initializer$)(); // 0x14073E9E8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVCxformMul; // 0x140A1A490
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchTexUVCxform$initializer$)(); // 0x14073DD80
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGVertexCxformEAlphaInv; // 0x140A1C4C0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSGrad2HideBaseInnerBevelMul$initializer$)(); // 0x1407405D0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dSolid; // 0x140A12CC0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGCxformAcEAlphaInv$initializer$)(); // 0x14073FDD0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedVertex; // 0x140A20818
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSGrad2HideBaseFullBevel; // 0x140A23018
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVCxformMul$initializer$)(); // 0x14073E9F0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGVertexCxformEAlphaInv$initializer$)(); // 0x14073F060
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVCxformEAlpha; // 0x140A1A4B8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dSolid$initializer$)(); // 0x14073DD88
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGVertexCxformAc; // 0x140A1C4E8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dText; // 0x140A12D30
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedVertex$initializer$)(); // 0x14073FDD8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSGrad2HideBaseFullBevel$initializer$)(); // 0x1407405D8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedVertexMul; // 0x140A20840
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSGrad2HideBaseFullBevelMul; // 0x140A23040
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVCxformEAlpha$initializer$)(); // 0x14073E9F8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGVertexCxformAc$initializer$)(); // 0x14073F068
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVCxformEAlphaMul; // 0x140A1A4E0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dText$initializer$)(); // 0x14073DD90
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGVertexCxformAcMul; // 0x140A1C510
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedVertexMul$initializer$)(); // 0x14073FDE0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSGrad2HideBaseFullBevelMul$initializer$)(); // 0x1407405E0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dTextTexDensity; // 0x140A12DA0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FDisplacementMap; // 0x140A23068
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedVertexInv; // 0x140A20868
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVCxformEAlphaMul$initializer$)(); // 0x14073EA00
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGVertexCxformAcMul$initializer$)(); // 0x14073F070
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVCxformAc; // 0x140A1A508
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGVertexCxformAcInv; // 0x140A1C538
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dTextTexDensity$initializer$)(); // 0x14073DD98
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FDisplacementMap$initializer$)(); // 0x1407405E8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedVertexInv$initializer$)(); // 0x14073FDE8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dTexUV; // 0x140A12E10
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FDisplacementMapDMIgnore; // 0x140A23090
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedVertexEAlpha; // 0x140A20890
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVCxformAc$initializer$)(); // 0x14073EA08
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGVertexCxformAcInv$initializer$)(); // 0x14073F078
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGVertexCxformAcEAlpha; // 0x140A1C560
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVCxformAcMul; // 0x140A1A530
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dTexUV$initializer$)(); // 0x14073DDA0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dTexUVTexDensity; // 0x140A12E80
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FDisplacementMapDMIgnore$initializer$)(); // 0x1407405F0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedVertexEAlpha$initializer$)(); // 0x14073FDF0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FDisplacementMapDMColor; // 0x140A230B8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedVertexEAlphaMul; // 0x140A208B8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGVertexCxformAcEAlpha$initializer$)(); // 0x14073F080
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVCxformAcMul$initializer$)(); // 0x14073EA10
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVCxformAcEAlpha; // 0x140A1A558
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGVertexCxformAcEAlphaMul; // 0x140A1C588
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dTexUVTexDensity$initializer$)(); // 0x14073DDA8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dTexUVCxform; // 0x140A12EF0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FDisplacementMapDMColor$initializer$)(); // 0x1407405F8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedVertexEAlphaMul$initializer$)(); // 0x14073FDF8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FDrawableCopyPixels; // 0x140A230E0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedVertexEAlphaInv; // 0x140A208E0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGVertexCxformAcEAlphaMul$initializer$)(); // 0x14073F088
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVCxformAcEAlpha$initializer$)(); // 0x14073EA18
const long Scaleform::Render::GL::ShaderVersionIndex[3]; // 0x1407A3D98
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dTexUVCxform$initializer$)(); // 0x14073DDB0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVCxformAcEAlphaMul; // 0x140A1A580
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGVertexCxformAcEAlphaInv; // 0x140A1C5B0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedVertexEAlphaInv$initializer$)(); // 0x14073FE00
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FDrawableCopyPixels$initializer$)(); // 0x140740600
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VYUV; // 0x140A12F60
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedVertexCxform; // 0x140A20908
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FDrawableCopyPixelsMergeAlpha; // 0x140A23108
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVCxformAcEAlphaMul$initializer$)(); // 0x14073EA20
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGVertexCxformAcEAlphaInv$initializer$)(); // 0x14073F090
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTG; // 0x140A1C5D8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VYUV$initializer$)(); // 0x14073DDB8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVA; // 0x140A1A5A8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedVertexCxform$initializer$)(); // 0x14073FE08
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VYUVTexDensity; // 0x140A12FD0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FDrawableCopyPixelsMergeAlpha$initializer$)(); // 0x140740608
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FDrawableCopyPixelsNoDestAlpha; // 0x140A23130
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedVertexCxformMul; // 0x140A20930
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTG$initializer$)(); // 0x14073F098
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVA$initializer$)(); // 0x14073EA28
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVATexDensity; // 0x140A1A5D0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGTexDensity; // 0x140A1C600
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VYUVTexDensity$initializer$)(); // 0x14073DDC0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FDrawableCopyPixelsNoDestAlpha$initializer$)(); // 0x140740610
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedVertexCxformMul$initializer$)(); // 0x14073FE10
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VYUVEAlpha; // 0x140A13040
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FDrawableCopyPixelsAlpha; // 0x140A23158
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedVertexCxformInv; // 0x140A20958
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVATexDensity$initializer$)(); // 0x14073EA30
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGTexDensity$initializer$)(); // 0x14073F0A0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGMul; // 0x140A1C628
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VYUVEAlpha$initializer$)(); // 0x14073DDC8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVAMul; // 0x140A1A5F8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FDrawableCopyPixelsAlpha$initializer$)(); // 0x140740618
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VYUVEAlphaTexDensity; // 0x140A130B0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedVertexCxformInv$initializer$)(); // 0x14073FE18
const Scaleform::Render::GL::ShaderIndexEntry Scaleform::Render::GL::ShaderIndexingData[6][1317]; // 0x14079C220
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedVertexCxformEAlpha; // 0x140A20980
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FDrawableCopyPixelsAlphaMergeAlpha; // 0x140A23180
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGMul$initializer$)(); // 0x14073F0A8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVAMul$initializer$)(); // 0x14073EA38
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGInv; // 0x140A1C650
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVAInv; // 0x140A1A620
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VYUVEAlphaTexDensity$initializer$)(); // 0x14073DDD0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VYUVCxform; // 0x140A13120
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedVertexCxformEAlpha$initializer$)(); // 0x14073FE20
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FDrawableCopyPixelsAlphaMergeAlpha$initializer$)(); // 0x140740620
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FDrawableCopyPixelsAlphaNoDestAlpha; // 0x140A231A8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedVertexCxformEAlphaMul; // 0x140A209A8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGInv$initializer$)(); // 0x14073F0B0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVAInv$initializer$)(); // 0x14073EA40
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VYUVCxform$initializer$)(); // 0x14073DDD8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGEAlpha; // 0x140A1C678
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVAEAlpha; // 0x140A1A648
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FDrawableCopyPixelsAlphaNoDestAlpha$initializer$)(); // 0x140740628
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedVertexCxformEAlphaMul$initializer$)(); // 0x14073FE28
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VYUVCxformEAlpha; // 0x140A13190
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedVertexCxformEAlphaInv; // 0x140A209D0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FDrawableMerge; // 0x140A231D0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGEAlpha$initializer$)(); // 0x14073F0B8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVAEAlpha$initializer$)(); // 0x14073EA48
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVAEAlphaTexDensity; // 0x140A1A670
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGEAlphaTexDensity; // 0x140A1C6A0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VYUVCxformEAlpha$initializer$)(); // 0x14073DDE0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FDrawableMerge$initializer$)(); // 0x140740630
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedVertexCxformEAlphaInv$initializer$)(); // 0x14073FE30
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dYUV; // 0x140A13200
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedVertexCxformAc; // 0x140A209F8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FDrawableCompare; // 0x140A231F8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVAEAlphaTexDensity$initializer$)(); // 0x14073EA50
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGEAlphaTexDensity$initializer$)(); // 0x14073F0C0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGEAlphaMul; // 0x140A1C6C8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dYUV$initializer$)(); // 0x14073DDE8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVAEAlphaMul; // 0x140A1A698
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedVertexCxformAc$initializer$)(); // 0x14073FE38
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dYUVTexDensity; // 0x140A13270
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FDrawableCompare$initializer$)(); // 0x140740638
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedVertexCxformAcMul; // 0x140A20A20
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FDrawablePaletteMap; // 0x140A23220
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGEAlphaMul$initializer$)(); // 0x14073F0C8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVAEAlphaMul$initializer$)(); // 0x14073EA58
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGEAlphaInv; // 0x140A1C6F0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dYUVTexDensity$initializer$)(); // 0x14073DDF0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVAEAlphaInv; // 0x140A1A6C0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dYUVEAlpha; // 0x140A132E0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedVertexCxformAcMul$initializer$)(); // 0x14073FE40
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FDrawablePaletteMap$initializer$)(); // 0x140740640
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedVertexCxformAcInv; // 0x140A20A48
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBlendLighten; // 0x140A23248
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGEAlphaInv$initializer$)(); // 0x14073F0D0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVAEAlphaInv$initializer$)(); // 0x14073EA60
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dYUVEAlpha$initializer$)(); // 0x14073DDF8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGCxform; // 0x140A1C718
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVACxform; // 0x140A1A6E8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dYUVEAlphaTexDensity; // 0x140A13350
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedVertexCxformAcInv$initializer$)(); // 0x14073FE48
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBlendLighten$initializer$)(); // 0x140740648
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBlendDarken; // 0x140A23270
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedVertexCxformAcEAlpha; // 0x140A20A70
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGCxform$initializer$)(); // 0x14073F0D8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVACxform$initializer$)(); // 0x14073EA68
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dYUVEAlphaTexDensity$initializer$)(); // 0x14073DE00
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGCxformMul; // 0x140A1C740
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVACxformMul; // 0x140A1A710
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBlendDarken$initializer$)(); // 0x140740650
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedVertexCxformAcEAlpha$initializer$)(); // 0x14073FE50
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dYUVCxform; // 0x140A133C0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBlendOverlay; // 0x140A23298
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedVertexCxformAcEAlphaMul; // 0x140A20A98
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGCxformMul$initializer$)(); // 0x14073F0E0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVACxformMul$initializer$)(); // 0x14073EA70
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVACxformInv; // 0x140A1A738
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dYUVCxform$initializer$)(); // 0x14073DE08
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGCxformInv; // 0x140A1C768
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dYUVCxformEAlpha; // 0x140A13430
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBlendOverlay$initializer$)(); // 0x140740658
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedVertexCxformAcEAlphaMul$initializer$)(); // 0x14073FE58
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBlendHardlight; // 0x140A232C0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedVertexCxformAcEAlphaInv; // 0x140A20AC0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVACxformInv$initializer$)(); // 0x14073EA78
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGCxformInv$initializer$)(); // 0x14073F0E8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVACxformEAlpha; // 0x140A1A760
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dYUVCxformEAlpha$initializer$)(); // 0x14073DE10
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGCxformEAlpha; // 0x140A1C790
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBlendHardlight$initializer$)(); // 0x140740660
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedVertexCxformAcEAlphaInv$initializer$)(); // 0x14073FE60
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchYUV; // 0x140A134A0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBlendDifference; // 0x140A232E8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGTexTG; // 0x140A20AE8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVACxformEAlpha$initializer$)(); // 0x14073EA80
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGCxformEAlpha$initializer$)(); // 0x14073F0F0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGCxformEAlphaMul; // 0x140A1C7B8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVACxformEAlphaMul; // 0x140A1A788
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchYUV$initializer$)(); // 0x14073DE18
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBlendDifference$initializer$)(); // 0x140740668
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchYUVTexDensity; // 0x140A13510
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGTexTG$initializer$)(); // 0x14073FE68
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBlendLayer; // 0x140A23310
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGTexTGTexDensity; // 0x140A20B10
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGCxformEAlphaMul$initializer$)(); // 0x14073F0F8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVACxformEAlphaMul$initializer$)(); // 0x14073EA88
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVACxformEAlphaInv; // 0x140A1A7B0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGCxformEAlphaInv; // 0x140A1C7E0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchYUVTexDensity$initializer$)(); // 0x14073DE20
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBlendLayer$initializer$)(); // 0x140740670
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchYUVEAlpha; // 0x140A13580
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGTexTGTexDensity$initializer$)(); // 0x14073FE70
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGTexTGMul; // 0x140A20B38
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVACxformEAlphaInv$initializer$)(); // 0x14073EA90
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGCxformEAlphaInv$initializer$)(); // 0x14073F100
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchYUVEAlpha$initializer$)(); // 0x14073DE28
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGCxformAc; // 0x140A1C808
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVACxformAc; // 0x140A1A7D8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGTexTGMul$initializer$)(); // 0x14073FE78
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchYUVEAlphaTexDensity; // 0x140A135F0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGTexTGInv; // 0x140A20B60
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGCxformAc$initializer$)(); // 0x14073F108
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVACxformAc$initializer$)(); // 0x14073EA98
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGCxformAcMul; // 0x140A1C830
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVACxformAcMul; // 0x140A1A800
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchYUVEAlphaTexDensity$initializer$)(); // 0x14073DE30
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGTexTGInv$initializer$)(); // 0x14073FE80
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchYUVCxform; // 0x140A13660
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGTexTGEAlpha; // 0x140A20B88
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGCxformAcMul$initializer$)(); // 0x14073F110
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVACxformAcMul$initializer$)(); // 0x14073EAA0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVACxformAcInv; // 0x140A1A828
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchYUVCxform$initializer$)(); // 0x14073DE38
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGCxformAcInv; // 0x140A1C858
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchYUVCxformEAlpha; // 0x140A136D0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGTexTGEAlpha$initializer$)(); // 0x14073FE88
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGTexTGEAlphaTexDensity; // 0x140A20BB0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVACxformAcInv$initializer$)(); // 0x14073EAA8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGCxformAcInv$initializer$)(); // 0x14073F118
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchYUVCxformEAlpha$initializer$)(); // 0x14073DE40
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVACxformAcEAlpha; // 0x140A1A850
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGCxformAcEAlpha; // 0x140A1C880
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGTexTGEAlphaTexDensity$initializer$)(); // 0x14073FE90
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dYUV; // 0x140A13740
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGTexTGEAlphaMul; // 0x140A20BD8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVACxformAcEAlpha$initializer$)(); // 0x14073EAB0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGCxformAcEAlpha$initializer$)(); // 0x14073F120
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGCxformAcEAlphaMul; // 0x140A1C8A8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVACxformAcEAlphaMul; // 0x140A1A878
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dYUV$initializer$)(); // 0x14073DE48
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dYUVTexDensity; // 0x140A137B0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGTexTGEAlphaMul$initializer$)(); // 0x14073FE98
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGTexTGEAlphaInv; // 0x140A20C00
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGCxformAcEAlphaMul$initializer$)(); // 0x14073F128
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVACxformAcEAlphaMul$initializer$)(); // 0x14073EAB8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dYUVTexDensity$initializer$)(); // 0x14073DE50
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGCxformAcEAlphaInv; // 0x140A1C8D0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVACxformAcEAlphaInv; // 0x140A1A8A0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGTexTGEAlphaInv$initializer$)(); // 0x14073FEA0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dYUVEAlpha; // 0x140A13820
Scaleform::Render::GL::UniformVar Scaleform::Render::GL::Uniforms_5660088524[26]; // 0x140A09A70
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGTexTGCxform; // 0x140A20C28
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGCxformAcEAlphaInv$initializer$)(); // 0x14073F130
Scaleform::Render::GL::BatchVar Scaleform::Render::GL::BatchUniforms_4509961553[26]; // 0x140A09B80
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FYUVACxformAcEAlphaInv$initializer$)(); // 0x14073EAC0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUV; // 0x140A1A8C8
Scaleform::Render::GL::UniformVar Scaleform::Render::GL::Uniforms_5201834225[26]; // 0x140A09BD0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dYUVEAlpha$initializer$)(); // 0x14073DE58
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchVertex; // 0x140A1C8F8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGTexTGCxform$initializer$)(); // 0x14073FEA8
Scaleform::Render::GL::UniformVar Scaleform::Render::GL::Uniforms_5967893553[26]; // 0x140A09CE0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dYUVEAlphaTexDensity; // 0x140A13890
Scaleform::Render::GL::UniformVar Scaleform::Render::GL::Uniforms_3924697416[26]; // 0x140A09DF0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGTexTGCxformMul; // 0x140A20C50
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUV$initializer$)(); // 0x14073EAC8
Scaleform::Render::GL::UniformVar Scaleform::Render::GL::Uniforms_2375906800[26]; // 0x140A09F00
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchVertex$initializer$)(); // 0x14073F138
Scaleform::Render::GL::UniformVar Scaleform::Render::GL::Uniforms_6038109934[26]; // 0x140A0A010
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchVertexMul; // 0x140A1C920
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVTexDensity; // 0x140A1A8F0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dYUVEAlphaTexDensity$initializer$)(); // 0x14073DE60
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGTexTGCxformMul$initializer$)(); // 0x14073FEB0
Scaleform::Render::GL::UniformVar Scaleform::Render::GL::Uniforms_4614322395[26]; // 0x140A0A120
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dYUVCxform; // 0x140A13900
Scaleform::Render::GL::UniformVar Scaleform::Render::GL::Uniforms_5454776097[26]; // 0x140A0A230
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGTexTGCxformInv; // 0x140A20C78
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchVertexMul$initializer$)(); // 0x14073F140
Scaleform::Render::GL::UniformVar Scaleform::Render::GL::Uniforms_4301152625[26]; // 0x140A0A340
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVTexDensity$initializer$)(); // 0x14073EAD0
Scaleform::Render::GL::UniformVar Scaleform::Render::GL::Uniforms_5949452583[26]; // 0x140A0A450
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchVertexInv; // 0x140A1C948
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dYUVCxform$initializer$)(); // 0x14073DE68
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVMul; // 0x140A1A918
Scaleform::Render::GL::UniformVar Scaleform::Render::GL::Uniforms_4795432089[26]; // 0x140A0A560
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGTexTGCxformInv$initializer$)(); // 0x14073FEB8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dYUVCxformEAlpha; // 0x140A13970
Scaleform::Render::GL::UniformVar Scaleform::Render::GL::Uniforms_4790046111[26]; // 0x140A0A670
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGTexTGCxformEAlpha; // 0x140A20CA0
Scaleform::Render::GL::UniformVar Scaleform::Render::GL::Uniforms_5532759676[26]; // 0x140A0A780
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchVertexInv$initializer$)(); // 0x14073F148
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVMul$initializer$)(); // 0x14073EAD8
Scaleform::Render::GL::BatchVar Scaleform::Render::GL::BatchUniforms_6062277587[26]; // 0x140A0A890
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVEAlpha; // 0x140A1A940
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchVertexEAlpha; // 0x140A1C970
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBatchPosition3dYUVCxformEAlpha$initializer$)(); // 0x14073DE70
Scaleform::Render::GL::UniformVar Scaleform::Render::GL::Uniforms_3027735968[26]; // 0x140A0A8E0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBox1Blur; // 0x140A139E0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGTexTGCxformEAlpha$initializer$)(); // 0x14073FEC0
Scaleform::Render::GL::BatchVar Scaleform::Render::GL::BatchUniforms_4160821659[26]; // 0x140A0A9F0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGTexTGCxformEAlphaMul; // 0x140A20CC8
Scaleform::Render::GL::UniformVar Scaleform::Render::GL::Uniforms_6248738272[26]; // 0x140A0AA40
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVEAlpha$initializer$)(); // 0x14073EAE0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchVertexEAlpha$initializer$)(); // 0x14073F150
Scaleform::Render::GL::BatchVar Scaleform::Render::GL::BatchUniforms_4410895489[26]; // 0x140A0AB50
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVEAlphaTexDensity; // 0x140A1A968
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBox1Blur$initializer$)(); // 0x14073DE78
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchVertexEAlphaMul; // 0x140A1C998
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGTexTGCxformEAlphaMul$initializer$)(); // 0x14073FEC8
Scaleform::Render::GL::BatchVar Scaleform::Render::GL::BatchUniforms_4400902029[26]; // 0x140A0ABA0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VDrawableCopyPixels; // 0x140A13A50
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGTexTGCxformEAlphaInv; // 0x140A20CF0
Scaleform::Render::GL::BatchVar Scaleform::Render::GL::BatchUniforms_2999864591[26]; // 0x140A0ABF0
Scaleform::Render::GL::UniformVar Scaleform::Render::GL::Uniforms_4976188948[26]; // 0x140A0AC40
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVEAlphaTexDensity$initializer$)(); // 0x14073EAE8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchVertexEAlphaMul$initializer$)(); // 0x14073F158
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VDrawableCopyPixels$initializer$)(); // 0x14073DE80
Scaleform::Render::GL::BatchVar Scaleform::Render::GL::BatchUniforms_4570371129[26]; // 0x140A0AD50
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVEAlphaMul; // 0x140A1A990
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchVertexEAlphaInv; // 0x140A1C9C0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGTexTGCxformEAlphaInv$initializer$)(); // 0x14073FED0
Scaleform::Render::GL::BatchVar Scaleform::Render::GL::BatchUniforms_4826444642[26]; // 0x140A0ADA0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VDrawableCopyPixelsAlpha; // 0x140A13AC0
Scaleform::Render::GL::BatchVar Scaleform::Render::GL::BatchUniforms_5965737885[26]; // 0x140A0ADF0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGTexTGCxformAc; // 0x140A20D18
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchVertexEAlphaInv$initializer$)(); // 0x14073F160
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVEAlphaMul$initializer$)(); // 0x14073EAF0
Scaleform::Render::GL::BatchVar Scaleform::Render::GL::BatchUniforms_2716561271[26]; // 0x140A0AE40
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchVertexCxform; // 0x140A1C9E8
Scaleform::Render::GL::BatchVar Scaleform::Render::GL::BatchUniforms_6418527729[26]; // 0x140A0AE90
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVCxform; // 0x140A1A9B8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VDrawableCopyPixelsAlpha$initializer$)(); // 0x14073DE88
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGTexTGCxformAc$initializer$)(); // 0x14073FED8
Scaleform::Render::GL::BatchVar Scaleform::Render::GL::BatchUniforms_4844428610[26]; // 0x140A0AEE0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBlendLayer; // 0x140A13B30
Scaleform::Render::GL::UniformVar Scaleform::Render::GL::Uniforms_4557150941[26]; // 0x140A0AF30
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGTexTGCxformAcMul; // 0x140A20D40
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchVertexCxform$initializer$)(); // 0x14073F168
Scaleform::Render::GL::BatchVar Scaleform::Render::GL::BatchUniforms_4190243292[26]; // 0x140A0B040
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVCxform$initializer$)(); // 0x14073EAF8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VBlendLayer$initializer$)(); // 0x14073DE90
Scaleform::Render::GL::BatchVar Scaleform::Render::GL::BatchUniforms_5675771743[26]; // 0x140A0B090
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVCxformMul; // 0x140A1A9E0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchVertexCxformMul; // 0x140A1CA10
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGTexTGCxformAcMul$initializer$)(); // 0x14073FEE0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VTexTG; // 0x140A0D620
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGTexTGCxformAcInv; // 0x140A20D68
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVCxformMul$initializer$)(); // 0x14073EB00
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchVertexCxformMul$initializer$)(); // 0x14073F170
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchVertexCxformInv; // 0x140A1CA38
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVCxformEAlpha; // 0x140A1AA08
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGTexTGCxformAcInv$initializer$)(); // 0x14073FEE8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGTexTGCxformAcEAlpha; // 0x140A20D90
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchVertexCxformInv$initializer$)(); // 0x14073F178
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVCxformEAlpha$initializer$)(); // 0x14073EB08
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVCxformEAlphaMul; // 0x140A1AA30
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchVertexCxformEAlpha; // 0x140A1CA60
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGTexTGCxformAcEAlpha$initializer$)(); // 0x14073FEF0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGTexTGCxformAcEAlphaMul; // 0x140A20DB8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVCxformEAlphaMul$initializer$)(); // 0x14073EB10
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchVertexCxformEAlpha$initializer$)(); // 0x14073F180
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchVertexCxformEAlphaMul; // 0x140A1CA88
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVCxformAc; // 0x140A1AA58
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGTexTGCxformAcEAlphaMul$initializer$)(); // 0x14073FEF8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGTexTGCxformAcEAlphaInv; // 0x140A20DE0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchVertexCxformEAlphaMul$initializer$)(); // 0x14073F188
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVCxformAc$initializer$)(); // 0x14073EB18
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVCxformAcMul; // 0x140A1AA80
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchVertexCxformEAlphaInv; // 0x140A1CAB0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGTexTGCxformAcEAlphaInv$initializer$)(); // 0x14073FF00
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGVertex; // 0x140A20E08
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVCxformAcMul$initializer$)(); // 0x14073EB20
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchVertexCxformEAlphaInv$initializer$)(); // 0x14073F190
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVCxformAcEAlpha; // 0x140A1AAA8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchVertexCxformAc; // 0x140A1CAD8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGVertex$initializer$)(); // 0x14073FF08
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGVertexTexDensity; // 0x140A20E30
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVCxformAcEAlpha$initializer$)(); // 0x14073EB28
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchVertexCxformAc$initializer$)(); // 0x14073F198
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVCxformAcEAlphaMul; // 0x140A1AAD0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchVertexCxformAcMul; // 0x140A1CB00
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGVertexTexDensity$initializer$)(); // 0x14073FF10
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGVertexMul; // 0x140A20E58
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVCxformAcEAlphaMul$initializer$)(); // 0x14073EB30
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchVertexCxformAcMul$initializer$)(); // 0x14073F1A0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVA; // 0x140A1AAF8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchVertexCxformAcInv; // 0x140A1CB28
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VTexTG$initializer$)(); // 0x14073D758
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGVertexMul$initializer$)(); // 0x14073FF18
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VTexTGTexDensity; // 0x140A0D690
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGVertexInv; // 0x140A20E80
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVA$initializer$)(); // 0x14073EB38
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchVertexCxformAcInv$initializer$)(); // 0x14073F1A8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVATexDensity; // 0x140A1AB20
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchVertexCxformAcEAlpha; // 0x140A1CB50
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VTexTGTexDensity$initializer$)(); // 0x14073D760
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGVertexInv$initializer$)(); // 0x14073FF20
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VTexTGEAlpha; // 0x140A0D700
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGVertexEAlpha; // 0x140A20EA8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVATexDensity$initializer$)(); // 0x14073EB40
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchVertexCxformAcEAlpha$initializer$)(); // 0x14073F1B0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchVertexCxformAcEAlphaMul; // 0x140A1CB78
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVAMul; // 0x140A1AB48
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGVertexEAlpha$initializer$)(); // 0x14073FF28
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VTexTGEAlpha$initializer$)(); // 0x14073D768
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGVertexEAlphaTexDensity; // 0x140A20ED0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VTexTGEAlphaTexDensity; // 0x140A0D770
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchVertexCxformAcEAlphaMul$initializer$)(); // 0x14073F1B8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVAMul$initializer$)(); // 0x14073EB48
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchVertexCxformAcEAlphaInv; // 0x140A1CBA0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVAInv; // 0x140A1AB70
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGVertexEAlphaTexDensity$initializer$)(); // 0x14073FF30
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VTexTGEAlphaTexDensity$initializer$)(); // 0x14073D770
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGVertexEAlphaMul; // 0x140A20EF8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchVertexCxformAcEAlphaInv$initializer$)(); // 0x14073F1C0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVAInv$initializer$)(); // 0x14073EB50
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VTexTGCxform; // 0x140A0D7E0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGTexTG; // 0x140A1CBC8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVAEAlpha; // 0x140A1AB98
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGVertexEAlphaMul$initializer$)(); // 0x14073FF38
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGVertexEAlphaInv; // 0x140A20F20
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VTexTGCxform$initializer$)(); // 0x14073D778
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGTexTG$initializer$)(); // 0x14073F1C8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVAEAlpha$initializer$)(); // 0x14073EB58
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VTexTGCxformEAlpha; // 0x140A0D850
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVAEAlphaTexDensity; // 0x140A1ABC0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGTexTGTexDensity; // 0x140A1CBF0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGVertexEAlphaInv$initializer$)(); // 0x14073FF40
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VTexTGCxformEAlpha$initializer$)(); // 0x14073D780
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGVertexCxform; // 0x140A20F48
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVAEAlphaTexDensity$initializer$)(); // 0x14073EB60
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGTexTGTexDensity$initializer$)(); // 0x14073F1D0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VVertex; // 0x140A0D8C0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVAEAlphaMul; // 0x140A1ABE8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGTexTGMul; // 0x140A1CC18
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGVertexCxform$initializer$)(); // 0x14073FF48
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGVertexCxformMul; // 0x140A20F70
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVAEAlphaMul$initializer$)(); // 0x14073EB68
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGTexTGMul$initializer$)(); // 0x14073F1D8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VVertex$initializer$)(); // 0x14073D788
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VVertexEAlpha; // 0x140A0D930
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVAEAlphaInv; // 0x140A1AC10
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGTexTGInv; // 0x140A1CC40
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGVertexCxformMul$initializer$)(); // 0x14073FF50
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGVertexCxformInv; // 0x140A20F98
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VVertexEAlpha$initializer$)(); // 0x14073D790
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVAEAlphaInv$initializer$)(); // 0x14073EB70
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGTexTGInv$initializer$)(); // 0x14073F1E0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGTexTGEAlpha; // 0x140A1CC68
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVACxform; // 0x140A1AC38
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VVertexCxform; // 0x140A0D9A0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGVertexCxformInv$initializer$)(); // 0x14073FF58
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGVertexCxformEAlpha; // 0x140A20FC0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGTexTGEAlpha$initializer$)(); // 0x14073F1E8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVACxform$initializer$)(); // 0x14073EB78
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VVertexCxform$initializer$)(); // 0x14073D798
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGTexTGEAlphaTexDensity; // 0x140A1CC90
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VVertexCxformEAlpha; // 0x140A0DA10
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVACxformMul; // 0x140A1AC60
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGVertexCxformEAlpha$initializer$)(); // 0x14073FF60
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGVertexCxformEAlphaMul; // 0x140A20FE8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VVertexCxformEAlpha$initializer$)(); // 0x14073D7A0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGTexTGEAlphaTexDensity$initializer$)(); // 0x14073F1F0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVACxformMul$initializer$)(); // 0x14073EB80
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGTexTGEAlphaMul; // 0x140A1CCB8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VTexTGTexTG; // 0x140A0DA80
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVACxformInv; // 0x140A1AC88
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGVertexCxformEAlphaMul$initializer$)(); // 0x14073FF68
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGVertexCxformEAlphaInv; // 0x140A21010
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGTexTGEAlphaMul$initializer$)(); // 0x14073F1F8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VTexTGTexTG$initializer$)(); // 0x14073D7A8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVACxformInv$initializer$)(); // 0x14073EB88
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVACxformEAlpha; // 0x140A1ACB0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VTexTGTexTGTexDensity; // 0x140A0DAF0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGTexTGEAlphaInv; // 0x140A1CCE0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGVertexCxformEAlphaInv$initializer$)(); // 0x14073FF70
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGVertexCxformAc; // 0x140A21038
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVACxformEAlpha$initializer$)(); // 0x14073EB90
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VTexTGTexTGTexDensity$initializer$)(); // 0x14073D7B0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGTexTGEAlphaInv$initializer$)(); // 0x14073F200
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGTexTGCxform; // 0x140A1CD08
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVACxformEAlphaMul; // 0x140A1ACD8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VTexTGTexTGCxform; // 0x140A0DB60
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGVertexCxformAc$initializer$)(); // 0x14073FF78
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGVertexCxformAcMul; // 0x140A21060
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGTexTGCxform$initializer$)(); // 0x14073F208
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVACxformEAlphaMul$initializer$)(); // 0x14073EB98
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VTexTGTexTGCxform$initializer$)(); // 0x14073D7B8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVACxformEAlphaInv; // 0x140A1AD00
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGTexTGCxformMul; // 0x140A1CD30
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VTexTGVertex; // 0x140A0DBD0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGVertexCxformAcMul$initializer$)(); // 0x14073FF80
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGVertexCxformAcInv; // 0x140A21088
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGTexTGCxformMul$initializer$)(); // 0x14073F210
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVACxformEAlphaInv$initializer$)(); // 0x14073EBA0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VTexTGVertex$initializer$)(); // 0x14073D7C0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVACxformAc; // 0x140A1AD28
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGTexTGCxformInv; // 0x140A1CD58
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VTexTGVertexTexDensity; // 0x140A0DC40
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGVertexCxformAcInv$initializer$)(); // 0x14073FF88
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGVertexCxformAcEAlpha; // 0x140A210B0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVACxformAc$initializer$)(); // 0x14073EBA8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGTexTGCxformInv$initializer$)(); // 0x14073F218
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VTexTGVertexTexDensity$initializer$)(); // 0x14073D7C8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVACxformAcMul; // 0x140A1AD50
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGTexTGCxformEAlpha; // 0x140A1CD80
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VTexTGVertexCxform; // 0x140A0DCB0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGVertexCxformAcEAlpha$initializer$)(); // 0x14073FF90
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGVertexCxformAcEAlphaMul; // 0x140A210D8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVACxformAcMul$initializer$)(); // 0x14073EBB0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGTexTGCxformEAlpha$initializer$)(); // 0x14073F220
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VTexTGVertexCxform$initializer$)(); // 0x14073D7D0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dTexTG; // 0x140A0DD20
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVACxformAcInv; // 0x140A1AD78
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGTexTGCxformEAlphaMul; // 0x140A1CDA8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGVertexCxformAcEAlphaMul$initializer$)(); // 0x14073FF98
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGVertexCxformAcEAlphaInv; // 0x140A21100
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dTexTG$initializer$)(); // 0x14073D7D8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVACxformAcInv$initializer$)(); // 0x14073EBB8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGTexTGCxformEAlphaMul$initializer$)(); // 0x14073F228
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGTexTGCxformEAlphaInv; // 0x140A1CDD0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dTexTGTexDensity; // 0x140A0DD90
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVACxformAcEAlpha; // 0x140A1ADA0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTexTGVertexCxformAcEAlphaInv$initializer$)(); // 0x14073FFA0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSolid; // 0x140A21128
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGTexTGCxformEAlphaInv$initializer$)(); // 0x14073F230
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dTexTGTexDensity$initializer$)(); // 0x14073D7E0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVACxformAcEAlpha$initializer$)(); // 0x14073EBC0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVACxformAcEAlphaMul; // 0x140A1ADC8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGTexTGCxformAc; // 0x140A1CDF8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dTexTGEAlpha; // 0x140A0DE00
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VTexTG; // 0x140A13BA0
Scaleform::Render::GL::UniformVar Scaleform::Render::GL::Uniforms_5528960255[26]; // 0x140A0B0E0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSolid$initializer$)(); // 0x14073FFA8
Scaleform::Render::GL::UniformVar Scaleform::Render::GL::Uniforms_6364359308[26]; // 0x140A0B1F0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSolidMul; // 0x140A21150
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVACxformAcEAlphaMul$initializer$)(); // 0x14073EBC8
Scaleform::Render::GL::UniformVar Scaleform::Render::GL::Uniforms_2561787550[26]; // 0x140A0B300
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGTexTGCxformAc$initializer$)(); // 0x14073F238
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dTexTGEAlpha$initializer$)(); // 0x14073D7E8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VTexTG$initializer$)(); // 0x14073DE98
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGTexTGCxformAcMul; // 0x140A1CE20
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VTexTGTexDensity; // 0x140A13C10
Scaleform::Render::GL::UniformVar Scaleform::Render::GL::Uniforms_2716517035[26]; // 0x140A0B410
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dTexTGEAlphaTexDensity; // 0x140A0DE70
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVACxformAcEAlphaInv; // 0x140A1ADF0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSolidMul$initializer$)(); // 0x14073FFB0
Scaleform::Render::GL::UniformVar Scaleform::Render::GL::Uniforms_5429466528[26]; // 0x140A0B520
Scaleform::Render::GL::UniformVar Scaleform::Render::GL::Uniforms_2880027806[26]; // 0x140A0B630
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSolidInv; // 0x140A21178
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VTexTGTexDensity$initializer$)(); // 0x14073DEA0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGTexTGCxformAcMul$initializer$)(); // 0x14073F240
Scaleform::Render::GL::UniformVar Scaleform::Render::GL::Uniforms_5576174353[26]; // 0x140A0B740
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dTexTGEAlphaTexDensity$initializer$)(); // 0x14073D7F0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchYUVACxformAcEAlphaInv$initializer$)(); // 0x14073EBD0
Scaleform::Render::GL::UniformVar Scaleform::Render::GL::Uniforms_6332133023[26]; // 0x140A0B850
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGCMatrixAc; // 0x140A1AE18
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VTexTGEAlpha; // 0x140A13C80
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dTexTGCxform; // 0x140A0DEE0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGTexTGCxformAcInv; // 0x140A1CE48
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FSolidInv$initializer$)(); // 0x14073FFB8
Scaleform::Render::GL::UniformVar Scaleform::Render::GL::Uniforms_5402180105[26]; // 0x140A0B960
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FText; // 0x140A211A0
Scaleform::Render::GL::UniformVar Scaleform::Render::GL::Uniforms_3333790712[26]; // 0x140A0BA70
Scaleform::Render::GL::UniformVar Scaleform::Render::GL::Uniforms_4161061733[26]; // 0x140A0BB80
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGCMatrixAc$initializer$)(); // 0x14073EBD8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VTexTGEAlpha$initializer$)(); // 0x14073DEA8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dTexTGCxform$initializer$)(); // 0x14073D7F8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGTexTGCxformAcInv$initializer$)(); // 0x14073F248
Scaleform::Render::GL::UniformVar Scaleform::Render::GL::Uniforms_5812273660[26]; // 0x140A0BC90
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGCMatrixAcMul; // 0x140A1AE40
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGTexTGCxformAcEAlpha; // 0x140A1CE70
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dTexTGCxformEAlpha; // 0x140A0DF50
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VTexTGEAlphaTexDensity; // 0x140A13CF0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FText$initializer$)(); // 0x14073FFC0
Scaleform::Render::GL::UniformVar Scaleform::Render::GL::Uniforms_2682535741[26]; // 0x140A0BDA0
Scaleform::Render::GL::UniformVar Scaleform::Render::GL::Uniforms_3009975738[26]; // 0x140A0BEB0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTextTexDensity; // 0x140A211C8
Scaleform::Render::GL::UniformVar Scaleform::Render::GL::Uniforms_5696500094[26]; // 0x140A0BFC0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGCMatrixAcMul$initializer$)(); // 0x14073EBE0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGTexTGCxformAcEAlpha$initializer$)(); // 0x14073F250
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dTexTGCxformEAlpha$initializer$)(); // 0x14073D800
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VTexTGEAlphaTexDensity$initializer$)(); // 0x14073DEB0
Scaleform::Render::GL::UniformVar Scaleform::Render::GL::Uniforms_5929667321[26]; // 0x140A0C0D0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VTexTGCxform; // 0x140A13D60
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGCMatrixAcEAlpha; // 0x140A1AE68
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGTexTGCxformAcEAlphaMul; // 0x140A1CE98
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dVertex; // 0x140A0DFC0
Scaleform::Render::GL::UniformVar Scaleform::Render::GL::Uniforms_3780103292[26]; // 0x140A0C1E0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTextTexDensity$initializer$)(); // 0x14073FFC8
Scaleform::Render::GL::UniformVar Scaleform::Render::GL::Uniforms_2346600189[26]; // 0x140A0C2F0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTextMul; // 0x140A211F0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VTexTGCxform$initializer$)(); // 0x14073DEB8
Scaleform::Render::GL::UniformVar Scaleform::Render::GL::Uniforms_3544426550[26]; // 0x140A0C400
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGCMatrixAcEAlpha$initializer$)(); // 0x14073EBE8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGTexTGCxformAcEAlphaMul$initializer$)(); // 0x14073F258
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dVertex$initializer$)(); // 0x14073D808
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dVertexEAlpha; // 0x140A0E030
Scaleform::Render::GL::UniformVar Scaleform::Render::GL::Uniforms_3163641758[26]; // 0x140A0C510
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGTexTGCxformAcEAlphaInv; // 0x140A1CEC0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGCMatrixAcEAlphaMul; // 0x140A1AE90
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VTexTGCxformEAlpha; // 0x140A13DD0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTextMul$initializer$)(); // 0x14073FFD0
Scaleform::Render::GL::UniformVar Scaleform::Render::GL::Uniforms_4453753847[26]; // 0x140A0C620
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTextInv; // 0x140A21218
Scaleform::Render::GL::UniformVar Scaleform::Render::GL::Uniforms_6325122830[26]; // 0x140A0C730
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dVertexEAlpha$initializer$)(); // 0x14073D810
Scaleform::Render::GL::UniformVar Scaleform::Render::GL::Uniforms_4461654034[26]; // 0x140A0C840
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGTexTGCxformAcEAlphaInv$initializer$)(); // 0x14073F260
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGCMatrixAcEAlphaMul$initializer$)(); // 0x14073EBF0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VTexTGCxformEAlpha$initializer$)(); // 0x14073DEC0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTG; // 0x140A0D5F8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBox1Blur; // 0x140A1AEB8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGVertex; // 0x140A1CEE8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VVertex; // 0x140A13E40
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dVertexCxform; // 0x140A0E0A0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTextInv$initializer$)(); // 0x14073FFD8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FATexUV; // 0x140A21240
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTG$initializer$)(); // 0x14073E3F8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBox1Blur$initializer$)(); // 0x14073EBF8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGVertex$initializer$)(); // 0x14073F268
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VVertex$initializer$)(); // 0x14073DEC8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dVertexCxform$initializer$)(); // 0x14073D818
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dVertexCxformEAlpha; // 0x140A0E110
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGTexDensity; // 0x140A186E0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBox1BlurMul; // 0x140A1AEE0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGVertexTexDensity; // 0x140A1CF10
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VVertexEAlpha; // 0x140A13EB0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FATexUV$initializer$)(); // 0x14073FFE0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FATexUVTexDensity; // 0x140A21268
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dVertexCxformEAlpha$initializer$)(); // 0x14073D820
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGTexDensity$initializer$)(); // 0x14073E400
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGVertexTexDensity$initializer$)(); // 0x14073F270
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBox1BlurMul$initializer$)(); // 0x14073EC00
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VVertexEAlpha$initializer$)(); // 0x14073DED0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGMul; // 0x140A18708
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGVertexMul; // 0x140A1CF38
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VVertexCxform; // 0x140A13F20
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBox2Blur; // 0x140A1AF08
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dTexTGTexTG; // 0x140A0E180
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FATexUVTexDensity$initializer$)(); // 0x14073FFE8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FATexUVMul; // 0x140A21290
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGMul$initializer$)(); // 0x14073E408
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGVertexMul$initializer$)(); // 0x14073F278
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VVertexCxform$initializer$)(); // 0x14073DED8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBox2Blur$initializer$)(); // 0x14073EC08
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dTexTGTexTG$initializer$)(); // 0x14073D828
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGVertexInv; // 0x140A1CF60
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGInv; // 0x140A18730
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dTexTGTexTGTexDensity; // 0x140A0E1F0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBox2BlurMul; // 0x140A1AF30
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VVertexCxformEAlpha; // 0x140A13F90
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FATexUVMul$initializer$)(); // 0x14073FFF0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FATexUVInv; // 0x140A212B8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGInv$initializer$)(); // 0x14073E410
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGVertexInv$initializer$)(); // 0x14073F280
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dTexTGTexTGTexDensity$initializer$)(); // 0x14073D830
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBox2BlurMul$initializer$)(); // 0x14073EC10
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VVertexCxformEAlpha$initializer$)(); // 0x14073DEE0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGVertexEAlpha; // 0x140A1CF88
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSColorOuterBevel; // 0x140A1AF58
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGEAlpha; // 0x140A18758
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dTexTGTexTGCxform; // 0x140A0E260
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VTexTGTexTG; // 0x140A14000
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FATexUVInv$initializer$)(); // 0x14073FFF8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FATexUVCxform; // 0x140A212E0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGVertexEAlpha$initializer$)(); // 0x14073F288
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSColorOuterBevel$initializer$)(); // 0x14073EC18
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGEAlpha$initializer$)(); // 0x14073E418
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dTexTGTexTGCxform$initializer$)(); // 0x14073D838
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VTexTGTexTG$initializer$)(); // 0x14073DEE8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dTexTGVertex; // 0x140A0E2D0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VTexTGTexTGTexDensity; // 0x140A14070
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGEAlphaTexDensity; // 0x140A18780
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSColorOuterBevelMul; // 0x140A1AF80
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGVertexEAlphaTexDensity; // 0x140A1CFB0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FATexUVCxform$initializer$)(); // 0x140740000
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FATexUVCxformMul; // 0x140A21308
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dTexTGVertex$initializer$)(); // 0x14073D840
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VTexTGTexTGTexDensity$initializer$)(); // 0x14073DEF0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGEAlphaTexDensity$initializer$)(); // 0x14073E420
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSColorOuterBevelMul$initializer$)(); // 0x14073EC20
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGVertexEAlphaTexDensity$initializer$)(); // 0x14073F290
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dTexTGVertexTexDensity; // 0x140A0E340
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGEAlphaMul; // 0x140A187A8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VTexTGTexTGCxform; // 0x140A140E0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGVertexEAlphaMul; // 0x140A1CFD8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSColorInnerShadow; // 0x140A1AFA8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FATexUVCxformMul$initializer$)(); // 0x140740008
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FATexUVCxformInv; // 0x140A21330
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGEAlphaMul$initializer$)(); // 0x14073E428
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dTexTGVertexTexDensity$initializer$)(); // 0x14073D848
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VTexTGTexTGCxform$initializer$)(); // 0x14073DEF8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGVertexEAlphaMul$initializer$)(); // 0x14073F298
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSColorInnerShadow$initializer$)(); // 0x14073EC28
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGEAlphaInv; // 0x140A187D0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGVertexEAlphaInv; // 0x140A1D000
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSColorInnerShadowMul; // 0x140A1AFD0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dTexTGVertexCxform; // 0x140A0E3B0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VTexTGVertex; // 0x140A14150
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FATexUVCxformInv$initializer$)(); // 0x140740010
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchSolid; // 0x140A21358
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGEAlphaInv$initializer$)(); // 0x14073E430
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGVertexEAlphaInv$initializer$)(); // 0x14073F2A0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSColorInnerShadowMul$initializer$)(); // 0x14073EC30
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dTexTGVertexCxform$initializer$)(); // 0x14073D850
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VTexTGVertex$initializer$)(); // 0x14073DF00
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGCxform; // 0x140A187F8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSColorFullBevel; // 0x140A1AFF8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VTexTGVertexTexDensity; // 0x140A141C0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGVertexCxform; // 0x140A1D028
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchTexTG; // 0x140A0E420
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchSolid$initializer$)(); // 0x140740018
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchSolidMul; // 0x140A21380
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VTexTGVertexTexDensity$initializer$)(); // 0x14073DF08
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGCxform$initializer$)(); // 0x14073E438
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSColorFullBevel$initializer$)(); // 0x14073EC38
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGVertexCxform$initializer$)(); // 0x14073F2A8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchTexTG$initializer$)(); // 0x14073D858
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGVertexCxformMul; // 0x140A1D050
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VTexTGVertexCxform; // 0x140A14230
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGCxformMul; // 0x140A18820
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSColorFullBevelMul; // 0x140A1B020
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchSolidMul$initializer$)(); // 0x140740020
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchTexTGTexDensity; // 0x140A0E490
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchSolidInv; // 0x140A213A8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGVertexCxformMul$initializer$)(); // 0x14073F2B0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VTexTGVertexCxform$initializer$)(); // 0x14073DF10
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGCxformMul$initializer$)(); // 0x14073E440
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSColorFullBevelMul$initializer$)(); // 0x14073EC40
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGVertexCxformInv; // 0x140A1D078
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGCxformInv; // 0x140A18848
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchTexTGTexDensity$initializer$)(); // 0x14073D860
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dTexTG; // 0x140A142A0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSColorHideBaseOuterBevel; // 0x140A1B048
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchTexTGEAlpha; // 0x140A0E500
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchSolidInv$initializer$)(); // 0x140740028
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchText; // 0x140A213D0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGVertexCxformInv$initializer$)(); // 0x14073F2B8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGCxformInv$initializer$)(); // 0x14073E448
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dTexTG$initializer$)(); // 0x14073DF18
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSColorHideBaseOuterBevel$initializer$)(); // 0x14073EC48
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSColorHideBaseOuterBevelMul; // 0x140A1B070
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGCxformEAlpha; // 0x140A18870
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchTexTGEAlpha$initializer$)(); // 0x14073D868
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGVertexCxformEAlpha; // 0x140A1D0A0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dTexTGTexDensity; // 0x140A14310
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchText$initializer$)(); // 0x140740030
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchTexTGEAlphaTexDensity; // 0x140A0E570
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTextTexDensity; // 0x140A213F8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSColorHideBaseOuterBevelMul$initializer$)(); // 0x14073EC50
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGCxformEAlpha$initializer$)(); // 0x14073E450
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGVertexCxformEAlpha$initializer$)(); // 0x14073F2C0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dTexTGTexDensity$initializer$)(); // 0x14073DF20
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSColorHideBaseInnerShadow; // 0x140A1B098
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchTexTGEAlphaTexDensity$initializer$)(); // 0x14073D870
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGVertexCxformEAlphaMul; // 0x140A1D0C8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dTexTGEAlpha; // 0x140A14380
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGCxformEAlphaMul; // 0x140A18898
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchTexTGCxform; // 0x140A0E5E0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTextTexDensity$initializer$)(); // 0x140740038
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTextMul; // 0x140A21420
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSColorHideBaseInnerShadow$initializer$)(); // 0x14073EC58
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGVertexCxformEAlphaMul$initializer$)(); // 0x14073F2C8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dTexTGEAlpha$initializer$)(); // 0x14073DF28
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGCxformEAlphaMul$initializer$)(); // 0x14073E458
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchTexTGCxform$initializer$)(); // 0x14073D878
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGCxformEAlphaInv; // 0x140A188C0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dTexTGEAlphaTexDensity; // 0x140A143F0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSColorHideBaseInnerShadowMul; // 0x140A1B0C0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGVertexCxformEAlphaInv; // 0x140A1D0F0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchTexTGCxformEAlpha; // 0x140A0E650
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTextMul$initializer$)(); // 0x140740040
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTextInv; // 0x140A21448
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dTexTGEAlphaTexDensity$initializer$)(); // 0x14073DF30
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGCxformEAlphaInv$initializer$)(); // 0x14073E460
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSColorHideBaseInnerShadowMul$initializer$)(); // 0x14073EC60
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGVertexCxformEAlphaInv$initializer$)(); // 0x14073F2D0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchTexTGCxformEAlpha$initializer$)(); // 0x14073D880
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGCxformAc; // 0x140A188E8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSColorHideBaseFullBevel; // 0x140A1B0E8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGVertexCxformAc; // 0x140A1D118
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dTexTGCxform; // 0x140A14460
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchVertex; // 0x140A0E6C0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTextInv$initializer$)(); // 0x140740048
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchATexUV; // 0x140A21470
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGCxformAc$initializer$)(); // 0x14073E468
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSColorHideBaseFullBevel$initializer$)(); // 0x14073EC68
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGVertexCxformAc$initializer$)(); // 0x14073F2D8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dTexTGCxform$initializer$)(); // 0x14073DF38
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchVertex$initializer$)(); // 0x14073D888
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSColorHideBaseFullBevelMul; // 0x140A1B110
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGCxformAcMul; // 0x140A18910
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGVertexCxformAcMul; // 0x140A1D140
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dTexTGCxformEAlpha; // 0x140A144D0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchVertexEAlpha; // 0x140A0E730
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchATexUV$initializer$)(); // 0x140740050
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchATexUVTexDensity; // 0x140A21498
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTG; // 0x140A1EC98
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSColorHideBaseFullBevelMul$initializer$)(); // 0x14073EC70
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGCxformAcMul$initializer$)(); // 0x14073E470
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGVertexCxformAcMul$initializer$)(); // 0x14073F2E0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dTexTGCxformEAlpha$initializer$)(); // 0x14073DF40
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGCxformAcInv; // 0x140A18938
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dVertex; // 0x140A14540
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSGradOuterBevel; // 0x140A1B138
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchVertexEAlpha$initializer$)(); // 0x14073D890
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGVertexCxformAcInv; // 0x140A1D168
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchATexUVTexDensity$initializer$)(); // 0x140740058
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchVertexCxform; // 0x140A0E7A0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTG$initializer$)(); // 0x14073F858
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGTexDensity; // 0x140A1ECC0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchATexUVMul; // 0x140A214C0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGCxformAcInv$initializer$)(); // 0x14073E478
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dVertex$initializer$)(); // 0x14073DF48
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSGradOuterBevel$initializer$)(); // 0x14073EC78
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGVertexCxformAcInv$initializer$)(); // 0x14073F2E8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSGradOuterBevelMul; // 0x140A1B160
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchVertexCxform$initializer$)(); // 0x14073D898
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dVertexEAlpha; // 0x140A145B0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGCxformAcEAlpha; // 0x140A18960
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGVertexCxformAcEAlpha; // 0x140A1D190
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchVertexCxformEAlpha; // 0x140A0E810
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGTexDensity$initializer$)(); // 0x14073F860
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchATexUVMul$initializer$)(); // 0x140740060
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchATexUVInv; // 0x140A214E8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGMul; // 0x140A1ECE8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSGradOuterBevelMul$initializer$)(); // 0x14073EC80
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dVertexEAlpha$initializer$)(); // 0x14073DF50
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGCxformAcEAlpha$initializer$)(); // 0x14073E480
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGVertexCxformAcEAlpha$initializer$)(); // 0x14073F2F0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchVertexCxformEAlpha$initializer$)(); // 0x14073D8A0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dVertexCxform; // 0x140A14620
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGVertexCxformAcEAlphaMul; // 0x140A1D1B8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSGradInnerBevel; // 0x140A1B188
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGCxformAcEAlphaMul; // 0x140A18988
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchATexUVInv$initializer$)(); // 0x140740068
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchTexTGTexTG; // 0x140A0E880
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGMul$initializer$)(); // 0x14073F868
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchATexUVCxform; // 0x140A21510
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGInv; // 0x140A1ED10
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dVertexCxform$initializer$)(); // 0x14073DF58
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGVertexCxformAcEAlphaMul$initializer$)(); // 0x14073F2F8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSGradInnerBevel$initializer$)(); // 0x14073EC88
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGCxformAcEAlphaMul$initializer$)(); // 0x14073E488
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSGradInnerBevelMul; // 0x140A1B1B0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGVertexCxformAcEAlphaInv; // 0x140A1D1E0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchTexTGTexTG$initializer$)(); // 0x14073D8A8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGCxformAcEAlphaInv; // 0x140A189B0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dVertexCxformEAlpha; // 0x140A14690
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGInv$initializer$)(); // 0x14073F870
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchATexUVCxform$initializer$)(); // 0x140740070
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchTexTGTexTGTexDensity; // 0x140A0E8F0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGEAlpha; // 0x140A1ED38
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchATexUVCxformMul; // 0x140A21538
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSGradInnerBevelMul$initializer$)(); // 0x14073EC90
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTexTGVertexCxformAcEAlphaInv$initializer$)(); // 0x14073F300
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGCxformAcEAlphaInv$initializer$)(); // 0x14073E490
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dVertexCxformEAlpha$initializer$)(); // 0x14073DF60
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSolid; // 0x140A1D208
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FVertex; // 0x140A189D8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchTexTGTexTGTexDensity$initializer$)(); // 0x14073D8B0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dTexTGTexTG; // 0x140A14700
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSGradFullBevel; // 0x140A1B1D8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGEAlpha$initializer$)(); // 0x14073F878
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchATexUVCxformMul$initializer$)(); // 0x140740078
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchTexTGTexTGCxform; // 0x140A0E960
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGEAlphaTexDensity; // 0x140A1ED60
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchATexUVCxformInv; // 0x140A21560
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSolid$initializer$)(); // 0x14073F308
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FVertex$initializer$)(); // 0x14073E498
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dTexTGTexTG$initializer$)(); // 0x14073DF68
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSGradFullBevel$initializer$)(); // 0x14073EC98
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FVertexMul; // 0x140A18A00
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSGradFullBevelMul; // 0x140A1B200
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSolidMul; // 0x140A1D230
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dTexTGTexTGTexDensity; // 0x140A14770
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchTexTGTexTGCxform$initializer$)(); // 0x14073D8B8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGEAlphaTexDensity$initializer$)(); // 0x14073F880
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchATexUVCxformInv$initializer$)(); // 0x140740080
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchTexTGVertex; // 0x140A0E9D0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedSolid; // 0x140A21588
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGEAlphaMul; // 0x140A1ED88
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FVertexMul$initializer$)(); // 0x14073E4A0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSGradFullBevelMul$initializer$)(); // 0x14073ECA0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSolidMul$initializer$)(); // 0x14073F310
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dTexTGTexTGTexDensity$initializer$)(); // 0x14073DF70
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSGradHideBaseOuterBevel; // 0x140A1B228
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FVertexInv; // 0x140A18A28
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dTexTGTexTGCxform; // 0x140A147E0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSolidInv; // 0x140A1D258
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchTexTGVertex$initializer$)(); // 0x14073D8C0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedSolid$initializer$)(); // 0x140740088
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchTexTGVertexTexDensity; // 0x140A0EA40
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGEAlphaMul$initializer$)(); // 0x14073F888
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGEAlphaInv; // 0x140A1EDB0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedSolidMul; // 0x140A215B0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSGradHideBaseOuterBevel$initializer$)(); // 0x14073ECA8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FVertexInv$initializer$)(); // 0x14073E4A8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dTexTGTexTGCxform$initializer$)(); // 0x14073DF78
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSolidInv$initializer$)(); // 0x14073F318
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchTexTGVertexTexDensity$initializer$)(); // 0x14073D8C8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FText; // 0x140A1D280
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FVertexEAlpha; // 0x140A18A50
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dTexTGVertex; // 0x140A14850
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSGradHideBaseOuterBevelMul; // 0x140A1B250
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGEAlphaInv$initializer$)(); // 0x14073F890
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchTexTGVertexCxform; // 0x140A0EAB0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedSolidMul$initializer$)(); // 0x140740090
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGCxform; // 0x140A1EDD8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedSolidInv; // 0x140A215D8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FText$initializer$)(); // 0x14073F320
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FVertexEAlpha$initializer$)(); // 0x14073E4B0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dTexTGVertex$initializer$)(); // 0x14073DF80
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSGradHideBaseOuterBevelMul$initializer$)(); // 0x14073ECB0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSGradHideBaseInnerBevel; // 0x140A1B278
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dTexTGVertexTexDensity; // 0x140A148C0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FVertexEAlphaMul; // 0x140A18A78
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchTexTGVertexCxform$initializer$)(); // 0x14073D8D0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTextTexDensity; // 0x140A1D2A8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedSolidInv$initializer$)(); // 0x140740098
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGCxform$initializer$)(); // 0x14073F898
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dTexTG; // 0x140A0EB20
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGCxformMul; // 0x140A1EE00
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedText; // 0x140A21600
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSGradHideBaseInnerBevel$initializer$)(); // 0x14073ECB8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dTexTGVertexTexDensity$initializer$)(); // 0x14073DF88
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FVertexEAlphaMul$initializer$)(); // 0x14073E4B8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTextTexDensity$initializer$)(); // 0x14073F328
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FVertexEAlphaInv; // 0x140A18AA0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dTexTGVertexCxform; // 0x140A14930
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dTexTG$initializer$)(); // 0x14073D8D8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSGradHideBaseInnerBevelMul; // 0x140A1B2A0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTextMul; // 0x140A1D2D0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGCxformMul$initializer$)(); // 0x14073F8A0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedText$initializer$)(); // 0x1407400A0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dTexTGTexDensity; // 0x140A0EB90
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGCxformInv; // 0x140A1EE28
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTextTexDensity; // 0x140A21628
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dTexTGVertexCxform$initializer$)(); // 0x14073DF90
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FVertexEAlphaInv$initializer$)(); // 0x14073E4C0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSGradHideBaseInnerBevelMul$initializer$)(); // 0x14073ECC0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTextMul$initializer$)(); // 0x14073F330
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSGradHideBaseFullBevel; // 0x140A1B2C8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchTexTG; // 0x140A149A0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FVertexCxform; // 0x140A18AC8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dTexTGTexDensity$initializer$)(); // 0x14073D8E0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTextInv; // 0x140A1D2F8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGCxformInv$initializer$)(); // 0x14073F8A8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTextTexDensity$initializer$)(); // 0x1407400A8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dTexTGEAlpha; // 0x140A0EC00
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTextMul; // 0x140A21650
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGCxformEAlpha; // 0x140A1EE50
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchTexTG$initializer$)(); // 0x14073DF98
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSGradHideBaseFullBevel$initializer$)(); // 0x14073ECC8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FVertexCxform$initializer$)(); // 0x14073E4C8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTextInv$initializer$)(); // 0x14073F338
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FVertexCxformMul; // 0x140A18AF0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchTexTGTexDensity; // 0x140A14A10
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FATexUV; // 0x140A1D320
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dTexTGEAlpha$initializer$)(); // 0x14073D8E8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSGradHideBaseFullBevelMul; // 0x140A1B2F0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTextMul$initializer$)(); // 0x1407400B0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dTexTGEAlphaTexDensity; // 0x140A0EC70
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGCxformEAlpha$initializer$)(); // 0x14073F8B0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTextInv; // 0x140A21678
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGCxformEAlphaMul; // 0x140A1EE78
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FVertexCxformMul$initializer$)(); // 0x14073E4D0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchTexTGTexDensity$initializer$)(); // 0x14073DFA0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FATexUV$initializer$)(); // 0x14073F340
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSGradHideBaseFullBevelMul$initializer$)(); // 0x14073ECD0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSColor2OuterBevel; // 0x140A1B318
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchTexTGEAlpha; // 0x140A14A80
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dTexTGEAlphaTexDensity$initializer$)(); // 0x14073D8F0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FATexUVTexDensity; // 0x140A1D348
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FVertexCxformInv; // 0x140A18B18
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGCxformEAlphaMul$initializer$)(); // 0x14073F8B8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedTextInv$initializer$)(); // 0x1407400B8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dTexTGCxform; // 0x140A0ECE0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedATexUV; // 0x140A216A0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGCxformEAlphaInv; // 0x140A1EEA0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchTexTGEAlpha$initializer$)(); // 0x14073DFA8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSColor2OuterBevel$initializer$)(); // 0x14073ECD8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FATexUVTexDensity$initializer$)(); // 0x14073F348
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FVertexCxformInv$initializer$)(); // 0x14073E4D8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dTexTGCxform$initializer$)(); // 0x14073D8F8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchTexTGEAlphaTexDensity; // 0x140A14AF0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSColor2OuterBevelMul; // 0x140A1B340
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FVertexCxformEAlpha; // 0x140A18B40
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FATexUVMul; // 0x140A1D370
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedATexUV$initializer$)(); // 0x1407400C0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGCxformEAlphaInv$initializer$)(); // 0x14073F8C0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dTexTGCxformEAlpha; // 0x140A0ED50
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedATexUVTexDensity; // 0x140A216C8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGCxformAc; // 0x140A1EEC8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSColor2OuterBevelMul$initializer$)(); // 0x14073ECE0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchTexTGEAlphaTexDensity$initializer$)(); // 0x14073DFB0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FVertexCxformEAlpha$initializer$)(); // 0x14073E4E0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FATexUVMul$initializer$)(); // 0x14073F350
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FVertexCxformEAlphaMul; // 0x140A18B68
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FATexUVInv; // 0x140A1D398
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchTexTGCxform; // 0x140A14B60
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSColor2InnerBevel; // 0x140A1B368
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dTexTGCxformEAlpha$initializer$)(); // 0x14073D900
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedATexUVTexDensity$initializer$)(); // 0x1407400C8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dVertex; // 0x140A0EDC0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGCxformAc$initializer$)(); // 0x14073F8C8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedATexUVMul; // 0x140A216F0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGCxformAcMul; // 0x140A1EEF0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FVertexCxformEAlphaMul$initializer$)(); // 0x14073E4E8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FATexUVInv$initializer$)(); // 0x14073F358
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchTexTGCxform$initializer$)(); // 0x14073DFB8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSColor2InnerBevel$initializer$)(); // 0x14073ECE8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSColor2InnerBevelMul; // 0x140A1B390
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchTexTGCxformEAlpha; // 0x140A14BD0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dVertex$initializer$)(); // 0x14073D908
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FATexUVCxform; // 0x140A1D3C0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FVertexCxformEAlphaInv; // 0x140A18B90
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedATexUVMul$initializer$)(); // 0x1407400D0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dVertexEAlpha; // 0x140A0EE30
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGCxformAcMul$initializer$)(); // 0x14073F8D0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedATexUVInv; // 0x140A21718
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGCxformAcInv; // 0x140A1EF18
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSColor2InnerBevelMul$initializer$)(); // 0x14073ECF0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchTexTGCxformEAlpha$initializer$)(); // 0x14073DFC0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FATexUVCxform$initializer$)(); // 0x14073F360
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FVertexCxformEAlphaInv$initializer$)(); // 0x14073E4F0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FVertexCxformAc; // 0x140A18BB8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchVertex; // 0x140A14C40
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dVertexEAlpha$initializer$)(); // 0x14073D910
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FATexUVCxformMul; // 0x140A1D3E8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSColor2FullBevel; // 0x140A1B3B8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dVertexCxform; // 0x140A0EEA0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedATexUVInv$initializer$)(); // 0x1407400D8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGCxformAcInv$initializer$)(); // 0x14073F8D8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedATexUVCxform; // 0x140A21740
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGCxformAcEAlpha; // 0x140A1EF40
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FVertexCxformAc$initializer$)(); // 0x14073E4F8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchVertex$initializer$)(); // 0x14073DFC8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FATexUVCxformMul$initializer$)(); // 0x14073F368
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSColor2FullBevel$initializer$)(); // 0x14073ECF8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FVertexCxformAcMul; // 0x140A18BE0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FATexUVCxformInv; // 0x140A1D410
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dVertexCxform$initializer$)(); // 0x14073D918
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSColor2FullBevelMul; // 0x140A1B3E0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchVertexEAlpha; // 0x140A14CB0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedATexUVCxform$initializer$)(); // 0x1407400E0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGCxformAcEAlpha$initializer$)(); // 0x14073F8E0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dVertexCxformEAlpha; // 0x140A0EF10
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedATexUVCxformMul; // 0x140A21768
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGCxformAcEAlphaMul; // 0x140A1EF68
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FVertexCxformAcMul$initializer$)(); // 0x14073E500
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FATexUVCxformInv$initializer$)(); // 0x14073F370
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSColor2FullBevelMul$initializer$)(); // 0x14073ED00
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchVertexEAlpha$initializer$)(); // 0x14073DFD0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSColor2HideBaseOuterBevel; // 0x140A1B408
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchVertexCxform; // 0x140A14D20
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchSolid; // 0x140A1D438
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FVertexCxformAcInv; // 0x140A18C08
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dVertexCxformEAlpha$initializer$)(); // 0x14073D920
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedATexUVCxformMul$initializer$)(); // 0x1407400E8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGCxformAcEAlphaMul$initializer$)(); // 0x14073F8E8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dTexTGTexTG; // 0x140A0EF80
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedATexUVCxformInv; // 0x140A21790
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGCxformAcEAlphaInv; // 0x140A1EF90
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSColor2HideBaseOuterBevel$initializer$)(); // 0x14073ED08
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchVertexCxform$initializer$)(); // 0x14073DFD8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchSolid$initializer$)(); // 0x14073F378
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FVertexCxformAcInv$initializer$)(); // 0x14073E508
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FVertexCxformAcEAlpha; // 0x140A18C30
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchVertexCxformEAlpha; // 0x140A14D90
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchSolidMul; // 0x140A1D460
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSColor2HideBaseOuterBevelMul; // 0x140A1B430
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dTexTGTexTG$initializer$)(); // 0x14073D928
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedATexUVCxformInv$initializer$)(); // 0x1407400F0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dTexTGTexTGTexDensity; // 0x140A0EFF0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGCxformAcEAlphaInv$initializer$)(); // 0x14073F8F0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUV; // 0x140A217B8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FVertex; // 0x140A1EFB8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FVertexCxformAcEAlpha$initializer$)(); // 0x14073E510
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchVertexCxformEAlpha$initializer$)(); // 0x14073DFE0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchSolidMul$initializer$)(); // 0x14073F380
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSColor2HideBaseOuterBevelMul$initializer$)(); // 0x14073ED10
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FVertexCxformAcEAlphaMul; // 0x140A18C58
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dTexTGTexTGTexDensity$initializer$)(); // 0x14073D930
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchSolidInv; // 0x140A1D488
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSColor2HideBaseInnerBevel; // 0x140A1B458
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchTexTGTexTG; // 0x140A14E00
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dTexTGTexTGCxform; // 0x140A0F060
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUV$initializer$)(); // 0x1407400F8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FVertex$initializer$)(); // 0x14073F8F8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FVertexMul; // 0x140A1EFE0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVTexDensity; // 0x140A217E0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FVertexCxformAcEAlphaMul$initializer$)(); // 0x14073E518
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchSolidInv$initializer$)(); // 0x14073F388
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSColor2HideBaseInnerBevel$initializer$)(); // 0x14073ED18
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchTexTGTexTG$initializer$)(); // 0x14073DFE8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchText; // 0x140A1D4B0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dTexTGTexTGCxform$initializer$)(); // 0x14073D938
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSColor2HideBaseInnerBevelMul; // 0x140A1B480
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FVertexCxformAcEAlphaInv; // 0x140A18C80
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchTexTGTexTGTexDensity; // 0x140A14E70
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FVertexMul$initializer$)(); // 0x14073F900
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVTexDensity$initializer$)(); // 0x140740100
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dTexTGVertex; // 0x140A0F0D0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVMul; // 0x140A21808
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FVertexInv; // 0x140A1F008
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchText$initializer$)(); // 0x14073F390
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSColor2HideBaseInnerBevelMul$initializer$)(); // 0x14073ED20
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FVertexCxformAcEAlphaInv$initializer$)(); // 0x14073E520
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchTexTGTexTGTexDensity$initializer$)(); // 0x14073DFF0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGTexTG; // 0x140A18CA8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTextTexDensity; // 0x140A1D4D8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchTexTGTexTGCxform; // 0x140A14EE0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dTexTGVertex$initializer$)(); // 0x14073D940
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSColor2HideBaseFullBevel; // 0x140A1B4A8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVMul$initializer$)(); // 0x140740108
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FVertexInv$initializer$)(); // 0x14073F908
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dTexTGVertexTexDensity; // 0x140A0F140
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FVertexEAlpha; // 0x140A1F030
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVEAlpha; // 0x140A21830
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTextTexDensity$initializer$)(); // 0x14073F398
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGTexTG$initializer$)(); // 0x14073E528
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchTexTGTexTGCxform$initializer$)(); // 0x14073DFF8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSColor2HideBaseFullBevel$initializer$)(); // 0x14073ED28
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSColor2HideBaseFullBevelMul; // 0x140A1B4D0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dTexTGVertexTexDensity$initializer$)(); // 0x14073D948
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGTexTGTexDensity; // 0x140A18CD0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchTexTGVertex; // 0x140A14F50
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTextMul; // 0x140A1D500
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FVertexEAlpha$initializer$)(); // 0x14073F910
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dTexTGVertexCxform; // 0x140A0F1B0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVEAlpha$initializer$)(); // 0x140740110
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FVertexEAlphaMul; // 0x140A1F058
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVEAlphaTexDensity; // 0x140A21858
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSColor2HideBaseFullBevelMul$initializer$)(); // 0x14073ED30
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGTexTGTexDensity$initializer$)(); // 0x14073E530
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchTexTGVertex$initializer$)(); // 0x14073E000
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTextMul$initializer$)(); // 0x14073F3A0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSGrad2OuterBevel; // 0x140A1B4F8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dTexTGVertexCxform$initializer$)(); // 0x14073D950
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGTexTGMul; // 0x140A18CF8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchTexTGVertexTexDensity; // 0x140A14FC0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTextInv; // 0x140A1D528
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FVertexEAlphaMul$initializer$)(); // 0x14073F918
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VSolid; // 0x140A0F220
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVEAlphaTexDensity$initializer$)(); // 0x140740118
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FVertexEAlphaInv; // 0x140A1F080
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVEAlphaMul; // 0x140A21880
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSGrad2OuterBevel$initializer$)(); // 0x14073ED38
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGTexTGMul$initializer$)(); // 0x14073E538
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchTexTGVertexTexDensity$initializer$)(); // 0x14073E008
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchTextInv$initializer$)(); // 0x14073F3A8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSGrad2OuterBevelMul; // 0x140A1B520
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGTexTGInv; // 0x140A18D20
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchTexTGVertexCxform; // 0x140A15030
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchATexUV; // 0x140A1D550
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VSolid$initializer$)(); // 0x14073D958
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VText; // 0x140A0F290
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FVertexEAlphaInv$initializer$)(); // 0x14073F920
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVEAlphaMul$initializer$)(); // 0x140740120
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVCxform; // 0x140A218A8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FVertexCxform; // 0x140A1F0A8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGTexTGInv$initializer$)(); // 0x14073E540
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchTexTGVertexCxform$initializer$)(); // 0x14073E010
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSGrad2OuterBevelMul$initializer$)(); // 0x14073ED40
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchATexUV$initializer$)(); // 0x14073F3B0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGTexTGEAlpha; // 0x140A18D48
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dTexTG; // 0x140A150A0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSGrad2InnerBevel; // 0x140A1B548
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchATexUVTexDensity; // 0x140A1D578
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVCxform$initializer$)(); // 0x140740128
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VText$initializer$)(); // 0x14073D960
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FVertexCxform$initializer$)(); // 0x14073F928
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FVertexCxformMul; // 0x140A1F0D0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VTextTexDensity; // 0x140A0F300
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVCxformMul; // 0x140A218D0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGTexTGEAlpha$initializer$)(); // 0x14073E548
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dTexTG$initializer$)(); // 0x14073E018
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSGrad2InnerBevel$initializer$)(); // 0x14073ED48
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchATexUVTexDensity$initializer$)(); // 0x14073F3B8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dTexTGTexDensity; // 0x140A15110
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGTexTGEAlphaTexDensity; // 0x140A18D70
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchATexUVMul; // 0x140A1D5A0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSGrad2InnerBevelMul; // 0x140A1B570
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FVertexCxformMul$initializer$)(); // 0x14073F930
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VTextTexDensity$initializer$)(); // 0x14073D968
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVCxformMul$initializer$)(); // 0x140740130
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FVertexCxformInv; // 0x140A1F0F8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVCxformEAlpha; // 0x140A218F8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VTexUV; // 0x140A0F370
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dTexTGTexDensity$initializer$)(); // 0x14073E020
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGTexTGEAlphaTexDensity$initializer$)(); // 0x14073E550
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchATexUVMul$initializer$)(); // 0x14073F3C0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSGrad2InnerBevelMul$initializer$)(); // 0x14073ED50
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dTexTGEAlpha; // 0x140A15180
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGTexTGEAlphaMul; // 0x140A18D98
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchATexUVInv; // 0x140A1D5C8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSGrad2FullBevel; // 0x140A1B598
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FVertexCxformInv$initializer$)(); // 0x14073F938
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVCxformEAlpha$initializer$)(); // 0x140740138
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VTexUV$initializer$)(); // 0x14073D970
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FVertexCxformEAlpha; // 0x140A1F120
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVCxformEAlphaMul; // 0x140A21920
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VTexUVTexDensity; // 0x140A0F3E0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dTexTGEAlpha$initializer$)(); // 0x14073E028
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGTexTGEAlphaMul$initializer$)(); // 0x14073E558
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchATexUVInv$initializer$)(); // 0x14073F3C8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSGrad2FullBevel$initializer$)(); // 0x14073ED58
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchATexUVCxform; // 0x140A1D5F0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGTexTGEAlphaInv; // 0x140A18DC0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dTexTGEAlphaTexDensity; // 0x140A151F0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSGrad2FullBevelMul; // 0x140A1B5C0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FVertexCxformEAlpha$initializer$)(); // 0x14073F940
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVCxformEAlphaMul$initializer$)(); // 0x140740140
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VTexUVTexDensity$initializer$)(); // 0x14073D978
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FVertexCxformEAlphaMul; // 0x140A1F148
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVCxformAc; // 0x140A21948
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VTexUVCxform; // 0x140A0F450
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchATexUVCxform$initializer$)(); // 0x14073F3D0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGTexTGEAlphaInv$initializer$)(); // 0x14073E560
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dTexTGEAlphaTexDensity$initializer$)(); // 0x14073E030
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSGrad2FullBevelMul$initializer$)(); // 0x14073ED60
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchATexUVCxformMul; // 0x140A1D618
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGTexTGCxform; // 0x140A18DE8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dTexTGCxform; // 0x140A15260
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSGrad2HideBaseOuterBevel; // 0x140A1B5E8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FVertexCxformEAlphaMul$initializer$)(); // 0x14073F948
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVCxformAc$initializer$)(); // 0x140740148
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VTexUVCxform$initializer$)(); // 0x14073D980
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVCxformAcMul; // 0x140A21970
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dSolid; // 0x140A0F4C0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FVertexCxformEAlphaInv; // 0x140A1F170
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchATexUVCxformMul$initializer$)(); // 0x14073F3D8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGTexTGCxform$initializer$)(); // 0x14073E568
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dTexTGCxform$initializer$)(); // 0x14073E038
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSGrad2HideBaseOuterBevel$initializer$)(); // 0x14073ED68
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSGrad2HideBaseOuterBevelMul; // 0x140A1B610
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchATexUVCxformInv; // 0x140A1D640
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGTexTGCxformMul; // 0x140A18E10
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dTexTGCxformEAlpha; // 0x140A152D0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVCxformAcMul$initializer$)(); // 0x140740150
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dSolid$initializer$)(); // 0x14073D988
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FVertexCxformEAlphaInv$initializer$)(); // 0x14073F950
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dText; // 0x140A0F530
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FVertexCxformAc; // 0x140A1F198
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVCxformAcEAlpha; // 0x140A21998
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchATexUVCxformInv$initializer$)(); // 0x14073F3E0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSGrad2HideBaseOuterBevelMul$initializer$)(); // 0x14073ED70
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGTexTGCxformMul$initializer$)(); // 0x14073E570
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dTexTGCxformEAlpha$initializer$)(); // 0x14073E040
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUV; // 0x140A1D668
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGTexTGCxformInv; // 0x140A18E38
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dVertex; // 0x140A15340
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSGrad2HideBaseInnerBevel; // 0x140A1B638
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dText$initializer$)(); // 0x14073D990
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FVertexCxformAc$initializer$)(); // 0x14073F958
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVCxformAcEAlpha$initializer$)(); // 0x140740158
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dTextTexDensity; // 0x140A0F5A0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVCxformAcEAlphaMul; // 0x140A219C0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FVertexCxformAcMul; // 0x140A1F1C0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUV$initializer$)(); // 0x14073F3E8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGTexTGCxformInv$initializer$)(); // 0x14073E578
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dVertex$initializer$)(); // 0x14073E048
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSGrad2HideBaseInnerBevel$initializer$)(); // 0x14073ED78
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dVertexEAlpha; // 0x140A153B0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGTexTGCxformEAlpha; // 0x140A18E60
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSGrad2HideBaseInnerBevelMul; // 0x140A1B660
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVTexDensity; // 0x140A1D690
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dTextTexDensity$initializer$)(); // 0x14073D998
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVCxformAcEAlphaMul$initializer$)(); // 0x140740160
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FVertexCxformAcMul$initializer$)(); // 0x14073F960
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVA; // 0x140A219E8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dTexUV; // 0x140A0F610
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FVertexCxformAcInv; // 0x140A1F1E8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dVertexEAlpha$initializer$)(); // 0x14073E050
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGTexTGCxformEAlpha$initializer$)(); // 0x14073E580
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSGrad2HideBaseInnerBevelMul$initializer$)(); // 0x14073ED80
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVTexDensity$initializer$)(); // 0x14073F3F0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVMul; // 0x140A1D6B8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGTexTGCxformEAlphaMul; // 0x140A18E88
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dVertexCxform; // 0x140A15420
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSGrad2HideBaseFullBevel; // 0x140A1B688
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVA$initializer$)(); // 0x140740168
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dTexUV$initializer$)(); // 0x14073D9A0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FVertexCxformAcInv$initializer$)(); // 0x14073F968
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVATexDensity; // 0x140A21A10
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dTexUVTexDensity; // 0x140A0F680
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FVertexCxformAcEAlpha; // 0x140A1F210
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVMul$initializer$)(); // 0x14073F3F8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGTexTGCxformEAlphaMul$initializer$)(); // 0x14073E588
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dVertexCxform$initializer$)(); // 0x14073E058
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSGrad2HideBaseFullBevel$initializer$)(); // 0x14073ED88
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSGrad2HideBaseFullBevelMul; // 0x140A1B6B0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dVertexCxformEAlpha; // 0x140A15490
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVEAlpha; // 0x140A1D6E0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGTexTGCxformEAlphaInv; // 0x140A18EB0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVATexDensity$initializer$)(); // 0x140740170
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dTexUVTexDensity$initializer$)(); // 0x14073D9A8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FVertexCxformAcEAlpha$initializer$)(); // 0x14073F970
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dTexUVCxform; // 0x140A0F6F0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVAMul; // 0x140A21A38
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FVertexCxformAcEAlphaMul; // 0x140A1F238
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FSGrad2HideBaseFullBevelMul$initializer$)(); // 0x14073ED90
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dVertexCxformEAlpha$initializer$)(); // 0x14073E060
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVEAlpha$initializer$)(); // 0x14073F400
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGTexTGCxformEAlphaInv$initializer$)(); // 0x14073E590
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGTexTGCxformAc; // 0x140A18ED8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FDisplacementMap; // 0x140A1B6D8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVEAlphaTexDensity; // 0x140A1D708
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dTexTGTexTG; // 0x140A15500
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVAMul$initializer$)(); // 0x140740178
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dTexUVCxform$initializer$)(); // 0x14073D9B0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FVertexCxformAcEAlphaMul$initializer$)(); // 0x14073F978
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchSolid; // 0x140A0F760
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FVertexCxformAcEAlphaInv; // 0x140A1F260
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVAInv; // 0x140A21A60
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGTexTGCxformAc$initializer$)(); // 0x14073E598
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FDisplacementMap$initializer$)(); // 0x14073ED98
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVEAlphaTexDensity$initializer$)(); // 0x14073F408
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dTexTGTexTG$initializer$)(); // 0x14073E068
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FDisplacementMapDMIgnore; // 0x140A1B700
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dTexTGTexTGTexDensity; // 0x140A15570
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVEAlphaMul; // 0x140A1D730
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGTexTGCxformAcMul; // 0x140A18F00
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FVertexCxformAcEAlphaInv$initializer$)(); // 0x14073F980
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchSolid$initializer$)(); // 0x14073D9B8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVAInv$initializer$)(); // 0x140740180
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGTexTG; // 0x140A1F288
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchText; // 0x140A0F7D0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVAEAlpha; // 0x140A21A88
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dTexTGTexTGTexDensity$initializer$)(); // 0x14073E070
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FDisplacementMapDMIgnore$initializer$)(); // 0x14073EDA0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVEAlphaMul$initializer$)(); // 0x14073F410
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGTexTGCxformAcMul$initializer$)(); // 0x14073E5A0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FDisplacementMapDMColor; // 0x140A1B728
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVCxform; // 0x140A1D758
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dTexTGTexTGCxform; // 0x140A155E0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGTexTGCxformAcInv; // 0x140A18F28
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGTexTG$initializer$)(); // 0x14073F988
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchText$initializer$)(); // 0x14073D9C0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVAEAlpha$initializer$)(); // 0x140740188
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGTexTGTexDensity; // 0x140A1F2B0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVAEAlphaTexDensity; // 0x140A21AB0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchTextTexDensity; // 0x140A0F840
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FDisplacementMapDMColor$initializer$)(); // 0x14073EDA8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVCxform$initializer$)(); // 0x14073F418
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dTexTGTexTGCxform$initializer$)(); // 0x14073E078
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGTexTGCxformAcInv$initializer$)(); // 0x14073E5A8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dTexTGVertex; // 0x140A15650
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGTexTGCxformAcEAlpha; // 0x140A18F50
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVCxformMul; // 0x140A1D780
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FDrawableCopyPixels; // 0x140A1B750
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVAEAlphaTexDensity$initializer$)(); // 0x140740190
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGTexTGTexDensity$initializer$)(); // 0x14073F990
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchTextTexDensity$initializer$)(); // 0x14073D9C8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchTexUV; // 0x140A0F8B0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVAEAlphaMul; // 0x140A21AD8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGTexTGMul; // 0x140A1F2D8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dTexTGVertex$initializer$)(); // 0x14073E080
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGTexTGCxformAcEAlpha$initializer$)(); // 0x14073E5B0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVCxformMul$initializer$)(); // 0x14073F420
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FDrawableCopyPixels$initializer$)(); // 0x14073EDB0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FDrawableCopyPixelsMergeAlpha; // 0x140A1B778
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGTexTGCxformAcEAlphaMul; // 0x140A18F78
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVCxformEAlpha; // 0x140A1D7A8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dTexTGVertexTexDensity; // 0x140A156C0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchTexUV$initializer$)(); // 0x14073D9D0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVAEAlphaMul$initializer$)(); // 0x140740198
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGTexTGMul$initializer$)(); // 0x14073F998
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGTexTGInv; // 0x140A1F300
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchTexUVTexDensity; // 0x140A0F920
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVAEAlphaInv; // 0x140A21B00
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGTexTGCxformAcEAlphaMul$initializer$)(); // 0x14073E5B8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FDrawableCopyPixelsMergeAlpha$initializer$)(); // 0x14073EDB8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVCxformEAlpha$initializer$)(); // 0x14073F428
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dTexTGVertexTexDensity$initializer$)(); // 0x14073E088
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVCxformEAlphaMul; // 0x140A1D7D0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dTexTGVertexCxform; // 0x140A15730
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGTexTGCxformAcEAlphaInv; // 0x140A18FA0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FDrawableCopyPixelsNoDestAlpha; // 0x140A1B7A0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGTexTGInv$initializer$)(); // 0x14073F9A0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchTexUVTexDensity$initializer$)(); // 0x14073D9D8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVAEAlphaInv$initializer$)(); // 0x1407401A0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVACxform; // 0x140A21B28
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGTexTGEAlpha; // 0x140A1F328
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchTexUVCxform; // 0x140A0F990
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVCxformEAlphaMul$initializer$)(); // 0x14073F430
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dTexTGVertexCxform$initializer$)(); // 0x14073E090
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGTexTGCxformAcEAlphaInv$initializer$)(); // 0x14073E5C0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FDrawableCopyPixelsNoDestAlpha$initializer$)(); // 0x14073EDC0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVCxformAc; // 0x140A1D7F8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGVertex; // 0x140A18FC8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedTexTG; // 0x140A157A0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FDrawableCopyPixelsAlpha; // 0x140A1B7C8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVACxform$initializer$)(); // 0x1407401A8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGTexTGEAlpha$initializer$)(); // 0x14073F9A8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchTexUVCxform$initializer$)(); // 0x14073D9E0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGTexTGEAlphaTexDensity; // 0x140A1F350
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVACxformMul; // 0x140A21B50
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dSolid; // 0x140A0FA00
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVCxformAc$initializer$)(); // 0x14073F438
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGVertex$initializer$)(); // 0x14073E5C8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedTexTG$initializer$)(); // 0x14073E098
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FDrawableCopyPixelsAlpha$initializer$)(); // 0x14073EDC8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGVertexTexDensity; // 0x140A18FF0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVCxformAcMul; // 0x140A1D820
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedTexTGTexDensity; // 0x140A15810
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FDrawableCopyPixelsAlphaMergeAlpha; // 0x140A1B7F0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGTexTGEAlphaTexDensity$initializer$)(); // 0x14073F9B0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVACxformMul$initializer$)(); // 0x1407401B0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dSolid$initializer$)(); // 0x14073D9E8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dText; // 0x140A0FA70
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGTexTGEAlphaMul; // 0x140A1F378
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVACxformInv; // 0x140A21B78
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGVertexTexDensity$initializer$)(); // 0x14073E5D0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVCxformAcMul$initializer$)(); // 0x14073F440
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedTexTGTexDensity$initializer$)(); // 0x14073E0A0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FDrawableCopyPixelsAlphaMergeAlpha$initializer$)(); // 0x14073EDD0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGVertexMul; // 0x140A19018
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVCxformAcEAlpha; // 0x140A1D848
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FDrawableCopyPixelsAlphaNoDestAlpha; // 0x140A1B818
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedTexTGEAlpha; // 0x140A15880
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dText$initializer$)(); // 0x14073D9F0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGTexTGEAlphaMul$initializer$)(); // 0x14073F9B8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVACxformInv$initializer$)(); // 0x1407401B8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVACxformEAlpha; // 0x140A21BA0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGTexTGEAlphaInv; // 0x140A1F3A0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dTextTexDensity; // 0x140A0FAE0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGVertexMul$initializer$)(); // 0x14073E5D8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVCxformAcEAlpha$initializer$)(); // 0x14073F448
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FDrawableCopyPixelsAlphaNoDestAlpha$initializer$)(); // 0x14073EDD8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedTexTGEAlpha$initializer$)(); // 0x14073E0A8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVCxformAcEAlphaMul; // 0x140A1D870
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FDrawableMerge; // 0x140A1B840
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGVertexInv; // 0x140A19040
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedTexTGEAlphaTexDensity; // 0x140A158F0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVACxformEAlpha$initializer$)(); // 0x1407401C0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGTexTGEAlphaInv$initializer$)(); // 0x14073F9C0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dTextTexDensity$initializer$)(); // 0x14073D9F8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGTexTGCxform; // 0x140A1F3C8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVACxformEAlphaMul; // 0x140A21BC8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dTexUV; // 0x140A0FB50
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVCxformAcEAlphaMul$initializer$)(); // 0x14073F450
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FDrawableMerge$initializer$)(); // 0x14073EDE0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGVertexInv$initializer$)(); // 0x14073E5E0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedTexTGEAlphaTexDensity$initializer$)(); // 0x14073E0B0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FDrawableCompare; // 0x140A1B868
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVA; // 0x140A1D898
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGVertexEAlpha; // 0x140A19068
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedTexTGCxform; // 0x140A15960
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGTexTGCxform$initializer$)(); // 0x14073F9C8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVACxformEAlphaMul$initializer$)(); // 0x1407401C8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dTexUV$initializer$)(); // 0x14073DA00
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVACxformEAlphaInv; // 0x140A21BF0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGTexTGCxformMul; // 0x140A1F3F0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dTexUVTexDensity; // 0x140A0FBC0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVA$initializer$)(); // 0x14073F458
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGVertexEAlpha$initializer$)(); // 0x14073E5E8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FDrawableCompare$initializer$)(); // 0x14073EDE8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedTexTGCxform$initializer$)(); // 0x14073E0B8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGVertexEAlphaTexDensity; // 0x140A19090
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVATexDensity; // 0x140A1D8C0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedTexTGCxformEAlpha; // 0x140A159D0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FDrawablePaletteMap; // 0x140A1B890
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVACxformEAlphaInv$initializer$)(); // 0x1407401D0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGTexTGCxformMul$initializer$)(); // 0x14073F9D0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dTexUVTexDensity$initializer$)(); // 0x14073DA08
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dTexUVCxform; // 0x140A0FC30
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVACxformAc; // 0x140A21C18
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGTexTGCxformInv; // 0x140A1F418
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGVertexEAlphaTexDensity$initializer$)(); // 0x14073E5F0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVATexDensity$initializer$)(); // 0x14073F460
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedTexTGCxformEAlpha$initializer$)(); // 0x14073E0C0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FDrawablePaletteMap$initializer$)(); // 0x14073EDF0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBlendLighten; // 0x140A1B8B8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedVertex; // 0x140A15A40
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVAMul; // 0x140A1D8E8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGVertexEAlphaMul; // 0x140A190B8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dTexUVCxform$initializer$)(); // 0x14073DA10
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVACxformAc$initializer$)(); // 0x1407401D8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGTexTGCxformInv$initializer$)(); // 0x14073F9D8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVACxformAcMul; // 0x140A21C40
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VYUV; // 0x140A0FCA0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGTexTGCxformEAlpha; // 0x140A1F440
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBlendLighten$initializer$)(); // 0x14073EDF8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedVertex$initializer$)(); // 0x14073E0C8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVAMul$initializer$)(); // 0x14073F468
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGVertexEAlphaMul$initializer$)(); // 0x14073E5F8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGVertexEAlphaInv; // 0x140A190E0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedVertexEAlpha; // 0x140A15AB0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVAInv; // 0x140A1D910
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBlendDarken; // 0x140A1B8E0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVACxformAcMul$initializer$)(); // 0x1407401E0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VYUV$initializer$)(); // 0x14073DA18
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGTexTGCxformEAlpha$initializer$)(); // 0x14073F9E0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGTexTGCxformEAlphaMul; // 0x140A1F468
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVACxformAcInv; // 0x140A21C68
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VYUVTexDensity; // 0x140A0FD10
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGVertexEAlphaInv$initializer$)(); // 0x14073E600
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedVertexEAlpha$initializer$)(); // 0x14073E0D0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVAInv$initializer$)(); // 0x14073F470
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBlendDarken$initializer$)(); // 0x14073EE00
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBlendOverlay; // 0x140A1B908
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGVertexCxform; // 0x140A19108
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVAEAlpha; // 0x140A1D938
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedVertexCxform; // 0x140A15B20
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGTexTGCxformEAlphaMul$initializer$)(); // 0x14073F9E8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVACxformAcInv$initializer$)(); // 0x1407401E8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VYUVTexDensity$initializer$)(); // 0x14073DA20
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VYUVEAlpha; // 0x140A0FD80
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGTexTGCxformEAlphaInv; // 0x140A1F490
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVACxformAcEAlpha; // 0x140A21C90
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBlendOverlay$initializer$)(); // 0x14073EE08
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGVertexCxform$initializer$)(); // 0x14073E608
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVAEAlpha$initializer$)(); // 0x14073F478
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedVertexCxform$initializer$)(); // 0x14073E0D8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedVertexCxformEAlpha; // 0x140A15B90
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBlendHardlight; // 0x140A1B930
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGVertexCxformMul; // 0x140A19130
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVAEAlphaTexDensity; // 0x140A1D960
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGTexTGCxformEAlphaInv$initializer$)(); // 0x14073F9F0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VYUVEAlpha$initializer$)(); // 0x14073DA28
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVACxformAcEAlpha$initializer$)(); // 0x1407401F0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVACxformAcEAlphaMul; // 0x140A21CB8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VYUVEAlphaTexDensity; // 0x140A0FDF0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGTexTGCxformAc; // 0x140A1F4B8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBlendHardlight$initializer$)(); // 0x14073EE10
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGVertexCxformMul$initializer$)(); // 0x14073E610
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedVertexCxformEAlpha$initializer$)(); // 0x14073E0E0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVAEAlphaTexDensity$initializer$)(); // 0x14073F480
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBlendDifference; // 0x140A1B958
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGVertexCxformInv; // 0x140A19158
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVAEAlphaMul; // 0x140A1D988
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedTexTGTexTG; // 0x140A15C00
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VYUVEAlphaTexDensity$initializer$)(); // 0x14073DA30
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGTexTGCxformAc$initializer$)(); // 0x14073F9F8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVACxformAcEAlphaMul$initializer$)(); // 0x1407401F8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVACxformAcEAlphaInv; // 0x140A21CE0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGTexTGCxformAcMul; // 0x140A1F4E0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VYUVCxform; // 0x140A0FE60
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBlendDifference$initializer$)(); // 0x14073EE18
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGVertexCxformInv$initializer$)(); // 0x14073E618
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVAEAlphaMul$initializer$)(); // 0x14073F488
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedTexTGTexTG$initializer$)(); // 0x14073E0E8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGVertexCxformEAlpha; // 0x140A19180
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBlendLayer; // 0x140A1B980
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedTexTGTexTGTexDensity; // 0x140A15C70
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVAEAlphaInv; // 0x140A1D9B0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FYUVACxformAcEAlphaInv$initializer$)(); // 0x140740200
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGTexTGCxformAcMul$initializer$)(); // 0x14073FA00
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VYUVCxform$initializer$)(); // 0x14073DA38
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUV; // 0x140A21D08
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGTexTGCxformAcInv; // 0x140A1F508
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VYUVCxformEAlpha; // 0x140A0FED0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGVertexCxformEAlpha$initializer$)(); // 0x14073E620
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBlendLayer$initializer$)(); // 0x14073EE20
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedTexTGTexTGTexDensity$initializer$)(); // 0x14073E0F0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVAEAlphaInv$initializer$)(); // 0x14073F490
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedTexTGTexTGCxform; // 0x140A15CE0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVACxform; // 0x140A1D9D8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGVertexCxformEAlphaMul; // 0x140A191A8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUV$initializer$)(); // 0x140740208
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGTexTGCxformAcInv$initializer$)(); // 0x14073FA08
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VYUVCxformEAlpha$initializer$)(); // 0x14073DA40
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGTexTGCxformAcEAlpha; // 0x140A1F530
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dYUV; // 0x140A0FF40
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVTexDensity; // 0x140A21D30
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedTexTGTexTGCxform$initializer$)(); // 0x14073E0F8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVACxform$initializer$)(); // 0x14073F498
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGVertexCxformEAlphaMul$initializer$)(); // 0x14073E628
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedTexTGVertex; // 0x140A15D50
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGVertexCxformEAlphaInv; // 0x140A191D0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVACxformMul; // 0x140A1DA00
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGTexTGCxformAcEAlpha$initializer$)(); // 0x14073FA10
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dYUV$initializer$)(); // 0x14073DA48
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVTexDensity$initializer$)(); // 0x140740210
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGTexTGCxformAcEAlphaMul; // 0x140A1F558
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVMul; // 0x140A21D58
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dYUVTexDensity; // 0x140A0FFB0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedTexTGVertex$initializer$)(); // 0x14073E100
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGVertexCxformEAlphaInv$initializer$)(); // 0x14073E630
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVACxformMul$initializer$)(); // 0x14073F4A0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVACxformInv; // 0x140A1DA28
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGVertexCxformAc; // 0x140A191F8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedTexTGVertexTexDensity; // 0x140A15DC0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGTexTGCxformAcEAlphaMul$initializer$)(); // 0x14073FA18
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVMul$initializer$)(); // 0x140740218
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dYUVTexDensity$initializer$)(); // 0x14073DA50
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGTexTGCxformAcEAlphaInv; // 0x140A1F580
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVEAlpha; // 0x140A21D80
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dYUVEAlpha; // 0x140A10020
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVACxformInv$initializer$)(); // 0x14073F4A8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGVertexCxformAc$initializer$)(); // 0x14073E638
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedTexTGVertexTexDensity$initializer$)(); // 0x14073E108
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedTexTGVertexCxform; // 0x140A15E30
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGVertexCxformAcMul; // 0x140A19220
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVACxformEAlpha; // 0x140A1DA50
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGTexTGCxformAcEAlphaInv$initializer$)(); // 0x14073FA20
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVEAlpha$initializer$)(); // 0x140740220
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dYUVEAlpha$initializer$)(); // 0x14073DA58
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dYUVEAlphaTexDensity; // 0x140A10090
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGVertex; // 0x140A1F5A8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVEAlphaTexDensity; // 0x140A21DA8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGVertexCxformAcMul$initializer$)(); // 0x14073E640
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedTexTGVertexCxform$initializer$)(); // 0x14073E110
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVACxformEAlpha$initializer$)(); // 0x14073F4B0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVACxformEAlphaMul; // 0x140A1DA78
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dTexTG; // 0x140A15EA0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGVertexCxformAcInv; // 0x140A19248
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dYUVEAlphaTexDensity$initializer$)(); // 0x14073DA60
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGVertex$initializer$)(); // 0x14073FA28
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVEAlphaTexDensity$initializer$)(); // 0x140740228
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVEAlphaMul; // 0x140A21DD0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dYUVCxform; // 0x140A10100
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGVertexTexDensity; // 0x140A1F5D0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVACxformEAlphaMul$initializer$)(); // 0x14073F4B8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dTexTG$initializer$)(); // 0x14073E118
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGVertexCxformAcInv$initializer$)(); // 0x14073E648
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVACxformEAlphaInv; // 0x140A1DAA0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGVertexCxformAcEAlpha; // 0x140A19270
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dTexTGTexDensity; // 0x140A15F10
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVEAlphaMul$initializer$)(); // 0x140740230
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dYUVCxform$initializer$)(); // 0x14073DA68
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGVertexTexDensity$initializer$)(); // 0x14073FA30
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dYUVCxformEAlpha; // 0x140A10170
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGVertexMul; // 0x140A1F5F8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVCxform; // 0x140A21DF8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVACxformEAlphaInv$initializer$)(); // 0x14073F4C0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGVertexCxformAcEAlpha$initializer$)(); // 0x14073E650
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dTexTGTexDensity$initializer$)(); // 0x14073E120
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGVertexCxformAcEAlphaMul; // 0x140A19298
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dTexTGEAlpha; // 0x140A15F80
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVACxformAc; // 0x140A1DAC8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VPosition3dYUVCxformEAlpha$initializer$)(); // 0x14073DA70
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGVertexMul$initializer$)(); // 0x14073FA38
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVCxform$initializer$)(); // 0x140740238
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchYUV; // 0x140A101E0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVCxformMul; // 0x140A21E20
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGVertexInv; // 0x140A1F620
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGVertexCxformAcEAlphaMul$initializer$)(); // 0x14073E658
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dTexTGEAlpha$initializer$)(); // 0x14073E128
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVACxformAc$initializer$)(); // 0x14073F4C8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dTexTGEAlphaTexDensity; // 0x140A15FF0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGVertexCxformAcEAlphaInv; // 0x140A192C0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVACxformAcMul; // 0x140A1DAF0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchYUV$initializer$)(); // 0x14073DA78
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVCxformMul$initializer$)(); // 0x140740240
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGVertexInv$initializer$)(); // 0x14073FA40
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchYUVTexDensity; // 0x140A10250
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGVertexEAlpha; // 0x140A1F648
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVCxformEAlpha; // 0x140A21E48
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dTexTGEAlphaTexDensity$initializer$)(); // 0x14073E130
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FTexTGVertexCxformAcEAlphaInv$initializer$)(); // 0x14073E660
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVACxformAcMul$initializer$)(); // 0x14073F4D0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTG; // 0x140A192E8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVACxformAcInv; // 0x140A1DB18
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dTexTGCxform; // 0x140A16060
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchYUVTexDensity$initializer$)(); // 0x14073DA80
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGVertexEAlpha$initializer$)(); // 0x14073FA48
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVCxformEAlpha$initializer$)(); // 0x140740248
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVCxformEAlphaMul; // 0x140A21E70
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchYUVEAlpha; // 0x140A102C0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGVertexEAlphaTexDensity; // 0x140A1F670
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTG$initializer$)(); // 0x14073E668
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVACxformAcInv$initializer$)(); // 0x14073F4D8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dTexTGCxform$initializer$)(); // 0x14073E138
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVACxformAcEAlpha; // 0x140A1DB40
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGTexDensity; // 0x140A19310
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dTexTGCxformEAlpha; // 0x140A160D0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVCxformEAlphaMul$initializer$)(); // 0x140740250
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchYUVEAlpha$initializer$)(); // 0x14073DA88
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGVertexEAlphaTexDensity$initializer$)(); // 0x14073FA50
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGVertexEAlphaMul; // 0x140A1F698
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchYUVEAlphaTexDensity; // 0x140A10330
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVCxformAc; // 0x140A21E98
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVACxformAcEAlpha$initializer$)(); // 0x14073F4E0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGTexDensity$initializer$)(); // 0x14073E670
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dTexTGCxformEAlpha$initializer$)(); // 0x14073E140
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dVertex; // 0x140A16140
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGMul; // 0x140A19338
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVACxformAcEAlphaMul; // 0x140A1DB68
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGVertexEAlphaMul$initializer$)(); // 0x14073FA58
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchYUVEAlphaTexDensity$initializer$)(); // 0x14073DA90
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVCxformAc$initializer$)(); // 0x140740258
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGVertexEAlphaInv; // 0x140A1F6C0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVCxformAcMul; // 0x140A21EC0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchYUVCxform; // 0x140A103A0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dVertex$initializer$)(); // 0x14073E148
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGMul$initializer$)(); // 0x14073E678
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVACxformAcEAlphaMul$initializer$)(); // 0x14073F4E8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dVertexEAlpha; // 0x140A161B0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVACxformAcEAlphaInv; // 0x140A1DB90
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGInv; // 0x140A19360
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGVertexEAlphaInv$initializer$)(); // 0x14073FA60
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVCxformAcMul$initializer$)(); // 0x140740260
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchYUVCxform$initializer$)(); // 0x14073DA98
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVCxformAcEAlpha; // 0x140A21EE8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchYUVCxformEAlpha; // 0x140A10410
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGVertexCxform; // 0x140A1F6E8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dVertexEAlpha$initializer$)(); // 0x14073E150
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FYUVACxformAcEAlphaInv$initializer$)(); // 0x14073F4F0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGInv$initializer$)(); // 0x14073E680
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUV; // 0x140A1DBB8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dVertexCxform; // 0x140A16220
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGEAlpha; // 0x140A19388
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVCxformAcEAlpha$initializer$)(); // 0x140740268
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchYUVCxformEAlpha$initializer$)(); // 0x14073DAA0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGVertexCxform$initializer$)(); // 0x14073FA68
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dYUV; // 0x140A10480
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVCxformAcEAlphaMul; // 0x140A21F10
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGVertexCxformMul; // 0x140A1F710
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUV$initializer$)(); // 0x14073F4F8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dVertexCxform$initializer$)(); // 0x14073E158
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGEAlpha$initializer$)(); // 0x14073E688
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGEAlphaTexDensity; // 0x140A193B0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVTexDensity; // 0x140A1DBE0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dVertexCxformEAlpha; // 0x140A16290
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dYUV$initializer$)(); // 0x14073DAA8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVCxformAcEAlphaMul$initializer$)(); // 0x140740270
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGVertexCxformMul$initializer$)(); // 0x14073FA70
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGVertexCxformInv; // 0x140A1F738
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVA; // 0x140A21F38
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dYUVTexDensity; // 0x140A104F0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGEAlphaTexDensity$initializer$)(); // 0x14073E690
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVTexDensity$initializer$)(); // 0x14073F500
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dVertexCxformEAlpha$initializer$)(); // 0x14073E160
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dTexTGTexTG; // 0x140A16300
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVMul; // 0x140A1DC08
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGEAlphaMul; // 0x140A193D8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGVertexCxformInv$initializer$)(); // 0x14073FA78
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVA$initializer$)(); // 0x140740278
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dYUVTexDensity$initializer$)(); // 0x14073DAB0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dYUVEAlpha; // 0x140A10560
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVATexDensity; // 0x140A21F60
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGVertexCxformEAlpha; // 0x140A1F760
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVMul$initializer$)(); // 0x14073F508
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dTexTGTexTG$initializer$)(); // 0x14073E168
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGEAlphaMul$initializer$)(); // 0x14073E698
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVEAlpha; // 0x140A1DC30
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dTexTGTexTGTexDensity; // 0x140A16370
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGEAlphaInv; // 0x140A19400
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dYUVEAlpha$initializer$)(); // 0x14073DAB8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVATexDensity$initializer$)(); // 0x140740280
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGVertexCxformEAlpha$initializer$)(); // 0x14073FA80
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dYUVEAlphaTexDensity; // 0x140A105D0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVAMul; // 0x140A21F88
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGVertexCxformEAlphaMul; // 0x140A1F788
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVEAlpha$initializer$)(); // 0x14073F510
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dTexTGTexTGTexDensity$initializer$)(); // 0x14073E170
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGEAlphaInv$initializer$)(); // 0x14073E6A0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVEAlphaTexDensity; // 0x140A1DC58
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dTexTGTexTGCxform; // 0x140A163E0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGCxform; // 0x140A19428
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dYUVEAlphaTexDensity$initializer$)(); // 0x14073DAC0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVAMul$initializer$)(); // 0x140740288
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGVertexCxformEAlphaMul$initializer$)(); // 0x14073FA88
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVAInv; // 0x140A21FB0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dYUVCxform; // 0x140A10640
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGVertexCxformEAlphaInv; // 0x140A1F7B0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVEAlphaTexDensity$initializer$)(); // 0x14073F518
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dTexTGTexTGCxform$initializer$)(); // 0x14073E178
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGCxform$initializer$)(); // 0x14073E6A8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGCxformMul; // 0x140A19450
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dTexTGVertex; // 0x140A16450
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVEAlphaMul; // 0x140A1DC80
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVAInv$initializer$)(); // 0x140740290
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dYUVCxform$initializer$)(); // 0x14073DAC8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGVertexCxformEAlphaInv$initializer$)(); // 0x14073FA90
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGVertexCxformAc; // 0x140A1F7D8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVAEAlpha; // 0x140A21FD8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dYUVCxformEAlpha; // 0x140A106B0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGCxformMul$initializer$)(); // 0x14073E6B0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dTexTGVertex$initializer$)(); // 0x14073E180
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVEAlphaMul$initializer$)(); // 0x14073F520
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dTexTGVertexTexDensity; // 0x140A164C0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGCxformInv; // 0x140A19478
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVCxform; // 0x140A1DCA8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGVertexCxformAc$initializer$)(); // 0x14073FA98
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVAEAlpha$initializer$)(); // 0x140740298
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBatchPosition3dYUVCxformEAlpha$initializer$)(); // 0x14073DAD0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVAEAlphaTexDensity; // 0x140A22000
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBox1Blur; // 0x140A10720
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGVertexCxformAcMul; // 0x140A1F800
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dTexTGVertexTexDensity$initializer$)(); // 0x14073E188
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGCxformInv$initializer$)(); // 0x14073E6B8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVCxform$initializer$)(); // 0x14073F528
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dTexTGVertexCxform; // 0x140A16530
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGCxformEAlpha; // 0x140A194A0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVCxformMul; // 0x140A1DCD0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBox1Blur$initializer$)(); // 0x14073DAD8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGVertexCxformAcMul$initializer$)(); // 0x14073FAA0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVAEAlphaTexDensity$initializer$)(); // 0x1407402A0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGVertexCxformAcInv; // 0x140A1F828
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVAEAlphaMul; // 0x140A22028
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VDrawableCopyPixels; // 0x140A10790
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dTexTGVertexCxform$initializer$)(); // 0x14073E190
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGCxformEAlpha$initializer$)(); // 0x14073E6C0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVCxformMul$initializer$)(); // 0x14073F530
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGCxformEAlphaMul; // 0x140A194C8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VSolid; // 0x140A165A0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVCxformEAlpha; // 0x140A1DCF8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVAEAlphaMul$initializer$)(); // 0x1407402A8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGVertexCxformAcInv$initializer$)(); // 0x14073FAA8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VDrawableCopyPixels$initializer$)(); // 0x14073DAE0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVAEAlphaInv; // 0x140A22050
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGVertexCxformAcEAlpha; // 0x140A1F850
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VDrawableCopyPixelsAlpha; // 0x140A10800
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGCxformEAlphaMul$initializer$)(); // 0x14073E6C8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VSolid$initializer$)(); // 0x14073E198
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVCxformEAlpha$initializer$)(); // 0x14073F538
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VText; // 0x140A16610
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVCxformEAlphaMul; // 0x140A1DD20
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGCxformEAlphaInv; // 0x140A194F0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGVertexCxformAcEAlpha$initializer$)(); // 0x14073FAB0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVAEAlphaInv$initializer$)(); // 0x1407402B0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VDrawableCopyPixelsAlpha$initializer$)(); // 0x14073DAE8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVACxform; // 0x140A22078
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBlendLayer; // 0x140A10870
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGVertexCxformAcEAlphaMul; // 0x140A1F878
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VText$initializer$)(); // 0x14073E1A0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVCxformEAlphaMul$initializer$)(); // 0x14073F540
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGCxformEAlphaInv$initializer$)(); // 0x14073E6D0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VTextTexDensity; // 0x140A16680
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGCxformAc; // 0x140A19518
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVCxformAc; // 0x140A1DD48
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVACxform$initializer$)(); // 0x1407402B8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL110_VBlendLayer$initializer$)(); // 0x14073DAF0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGVertexCxformAcEAlphaMul$initializer$)(); // 0x14073FAB8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVACxformMul; // 0x140A220A0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGVertexCxformAcEAlphaInv; // 0x140A1F8A0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VTextTexDensity$initializer$)(); // 0x14073E1A8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGCxformAc$initializer$)(); // 0x14073E6D8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVCxformAc$initializer$)(); // 0x14073F548
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVCxformAcMul; // 0x140A1DD70
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGCxformAcMul; // 0x140A19540
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VTexUV; // 0x140A166F0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVACxformMul$initializer$)(); // 0x1407402C0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGVertexCxformAcEAlphaInv$initializer$)(); // 0x14073FAC0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVACxformInv; // 0x140A220C8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTG; // 0x140A1F8C8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVCxformAcMul$initializer$)(); // 0x14073F550
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGCxformAcMul$initializer$)(); // 0x14073E6E0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VTexUV$initializer$)(); // 0x14073E1B0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VTexUVTexDensity; // 0x140A16760
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGCxformAcInv; // 0x140A19568
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVCxformAcEAlpha; // 0x140A1DD98
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVACxformInv$initializer$)(); // 0x1407402C8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTG$initializer$)(); // 0x14073FAC8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGTexDensity; // 0x140A1F8F0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVACxformEAlpha; // 0x140A220F0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VTexUVTexDensity$initializer$)(); // 0x14073E1B8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGCxformAcInv$initializer$)(); // 0x14073E6E8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVCxformAcEAlpha$initializer$)(); // 0x14073F558
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVCxformAcEAlphaMul; // 0x140A1DDC0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VTexUVCxform; // 0x140A167D0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGCxformAcEAlpha; // 0x140A19590
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGTexDensity$initializer$)(); // 0x14073FAD0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVACxformEAlpha$initializer$)(); // 0x1407402D0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVACxformEAlphaMul; // 0x140A22118
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGMul; // 0x140A1F918
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGCxformAcEAlpha$initializer$)(); // 0x14073E6F0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVCxformAcEAlphaMul$initializer$)(); // 0x14073F560
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VTexUVCxform$initializer$)(); // 0x14073E1C0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dSolid; // 0x140A16840
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGCxformAcEAlphaMul; // 0x140A195B8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVA; // 0x140A1DDE8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVACxformEAlphaMul$initializer$)(); // 0x1407402D8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGMul$initializer$)(); // 0x14073FAD8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGInv; // 0x140A1F940
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVACxformEAlphaInv; // 0x140A22140
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dSolid$initializer$)(); // 0x14073E1C8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGCxformAcEAlphaMul$initializer$)(); // 0x14073E6F8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVA$initializer$)(); // 0x14073F568
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVATexDensity; // 0x140A1DE10
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGCxformAcEAlphaInv; // 0x140A195E0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dText; // 0x140A168B0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGInv$initializer$)(); // 0x14073FAE0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVACxformEAlphaInv$initializer$)(); // 0x1407402E0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVACxformAc; // 0x140A22168
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGEAlpha; // 0x140A1F968
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVATexDensity$initializer$)(); // 0x14073F570
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGCxformAcEAlphaInv$initializer$)(); // 0x14073E700
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dText$initializer$)(); // 0x14073E1D0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVAMul; // 0x140A1DE38
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchVertex; // 0x140A19608
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dTextTexDensity; // 0x140A16920
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVACxformAc$initializer$)(); // 0x1407402E8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGEAlpha$initializer$)(); // 0x14073FAE8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGEAlphaTexDensity; // 0x140A1F990
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVACxformAcMul; // 0x140A22190
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVAMul$initializer$)(); // 0x14073F578
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchVertex$initializer$)(); // 0x14073E708
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dTextTexDensity$initializer$)(); // 0x14073E1D8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchVertexMul; // 0x140A19630
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVAInv; // 0x140A1DE60
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dTexUV; // 0x140A16990
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGEAlphaTexDensity$initializer$)(); // 0x14073FAF0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVACxformAcMul$initializer$)(); // 0x1407402F0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVACxformAcInv; // 0x140A221B8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGEAlphaMul; // 0x140A1F9B8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchVertexMul$initializer$)(); // 0x14073E710
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVAInv$initializer$)(); // 0x14073F580
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dTexUV$initializer$)(); // 0x14073E1E0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVAEAlpha; // 0x140A1DE88
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dTexUVTexDensity; // 0x140A16A00
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchVertexInv; // 0x140A19658
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVACxformAcInv$initializer$)(); // 0x1407402F8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGEAlphaMul$initializer$)(); // 0x14073FAF8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVACxformAcEAlpha; // 0x140A221E0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGEAlphaInv; // 0x140A1F9E0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVAEAlpha$initializer$)(); // 0x14073F588
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dTexUVTexDensity$initializer$)(); // 0x14073E1E8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchVertexInv$initializer$)(); // 0x14073E718
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVAEAlphaTexDensity; // 0x140A1DEB0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchVertexEAlpha; // 0x140A19680
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dTexUVCxform; // 0x140A16A70
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVACxformAcEAlpha$initializer$)(); // 0x140740300
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGEAlphaInv$initializer$)(); // 0x14073FB00
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVACxformAcEAlphaMul; // 0x140A22208
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGCxform; // 0x140A1FA08
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchVertexEAlpha$initializer$)(); // 0x14073E720
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVAEAlphaTexDensity$initializer$)(); // 0x14073F590
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dTexUVCxform$initializer$)(); // 0x14073E1F0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchVertexEAlphaMul; // 0x140A196A8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVAEAlphaMul; // 0x140A1DED8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchSolid; // 0x140A16AE0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVACxformAcEAlphaMul$initializer$)(); // 0x140740308
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGCxform$initializer$)(); // 0x14073FB08
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVACxformAcEAlphaInv; // 0x140A22230
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGCxformMul; // 0x140A1FA30
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchVertexEAlphaMul$initializer$)(); // 0x14073E728
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVAEAlphaMul$initializer$)(); // 0x14073F598
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchSolid$initializer$)(); // 0x14073E1F8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchText; // 0x140A16B50
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVAEAlphaInv; // 0x140A1DF00
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchVertexEAlphaInv; // 0x140A196D0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchYUVACxformAcEAlphaInv$initializer$)(); // 0x140740310
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGCxformMul$initializer$)(); // 0x14073FB10
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGCxformInv; // 0x140A1FA58
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUV; // 0x140A22258
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchText$initializer$)(); // 0x14073E200
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVAEAlphaInv$initializer$)(); // 0x14073F5A0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchVertexEAlphaInv$initializer$)(); // 0x14073E730
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVACxform; // 0x140A1DF28
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchTextTexDensity; // 0x140A16BC0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchVertexCxform; // 0x140A196F8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGCxformInv$initializer$)(); // 0x14073FB18
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUV$initializer$)(); // 0x140740318
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVTexDensity; // 0x140A22280
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGCxformEAlpha; // 0x140A1FA80
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVACxform$initializer$)(); // 0x14073F5A8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchTextTexDensity$initializer$)(); // 0x14073E208
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchVertexCxform$initializer$)(); // 0x14073E738
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchVertexCxformMul; // 0x140A19720
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchTexUV; // 0x140A16C30
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVACxformMul; // 0x140A1DF50
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVTexDensity$initializer$)(); // 0x140740320
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGCxformEAlpha$initializer$)(); // 0x14073FB20
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVMul; // 0x140A222A8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGCxformEAlphaMul; // 0x140A1FAA8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchVertexCxformMul$initializer$)(); // 0x14073E740
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchTexUV$initializer$)(); // 0x14073E210
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVACxformMul$initializer$)(); // 0x14073F5B0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchTexUVTexDensity; // 0x140A16CA0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchVertexCxformInv; // 0x140A19748
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVACxformInv; // 0x140A1DF78
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVMul$initializer$)(); // 0x140740328
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGCxformEAlphaMul$initializer$)(); // 0x14073FB28
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVEAlpha; // 0x140A222D0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGCxformEAlphaInv; // 0x140A1FAD0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchTexUVTexDensity$initializer$)(); // 0x14073E218
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchVertexCxformInv$initializer$)(); // 0x14073E748
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVACxformInv$initializer$)(); // 0x14073F5B8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVACxformEAlpha; // 0x140A1DFA0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchTexUVCxform; // 0x140A16D10
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchVertexCxformEAlpha; // 0x140A19770
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGCxformEAlphaInv$initializer$)(); // 0x14073FB30
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVEAlpha$initializer$)(); // 0x140740330
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVEAlphaTexDensity; // 0x140A222F8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGCxformAc; // 0x140A1FAF8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVACxformEAlpha$initializer$)(); // 0x14073F5C0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchTexUVCxform$initializer$)(); // 0x14073E220
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchVertexCxformEAlpha$initializer$)(); // 0x14073E750
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dSolid; // 0x140A16D80
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVACxformEAlphaMul; // 0x140A1DFC8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchVertexCxformEAlphaMul; // 0x140A19798
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVEAlphaTexDensity$initializer$)(); // 0x140740338
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGCxformAc$initializer$)(); // 0x14073FB38
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGCxformAcMul; // 0x140A1FB20
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVEAlphaMul; // 0x140A22320
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dSolid$initializer$)(); // 0x14073E228
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVACxformEAlphaMul$initializer$)(); // 0x14073F5C8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchVertexCxformEAlphaMul$initializer$)(); // 0x14073E758
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchVertexCxformEAlphaInv; // 0x140A197C0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dText; // 0x140A16DF0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVACxformEAlphaInv; // 0x140A1DFF0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGCxformAcMul$initializer$)(); // 0x14073FB40
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VTexTG; // 0x140A108E0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVEAlphaMul$initializer$)(); // 0x140740340
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGCxformAcInv; // 0x140A1FB48
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVCxform; // 0x140A22348
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchVertexCxformEAlphaInv$initializer$)(); // 0x14073E760
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dText$initializer$)(); // 0x14073E230
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVACxformEAlphaInv$initializer$)(); // 0x14073F5D0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dTextTexDensity; // 0x140A16E60
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchVertexCxformAc; // 0x140A197E8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVACxformAc; // 0x140A1E018
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VTexTG$initializer$)(); // 0x14073DAF8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGCxformAcInv$initializer$)(); // 0x14073FB48
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVCxform$initializer$)(); // 0x140740348
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VTexTGTexDensity; // 0x140A10950
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGCxformAcEAlpha; // 0x140A1FB70
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVCxformMul; // 0x140A22370
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dTextTexDensity$initializer$)(); // 0x14073E238
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchVertexCxformAc$initializer$)(); // 0x14073E768
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVACxformAc$initializer$)(); // 0x14073F5D8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchVertexCxformAcMul; // 0x140A19810
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VTexTGTexDensity$initializer$)(); // 0x14073DB00
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVACxformAcMul; // 0x140A1E040
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dTexUV; // 0x140A16ED0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGCxformAcEAlpha$initializer$)(); // 0x14073FB50
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VTexTGEAlpha; // 0x140A109C0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVCxformMul$initializer$)(); // 0x140740350
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGCxformAcEAlphaMul; // 0x140A1FB98
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVCxformEAlpha; // 0x140A22398
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchVertexCxformAcMul$initializer$)(); // 0x14073E770
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVACxformAcMul$initializer$)(); // 0x14073F5E0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dTexUV$initializer$)(); // 0x14073E240
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchVertexCxformAcInv; // 0x140A19838
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dTexUVTexDensity; // 0x140A16F40
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VTexTGEAlpha$initializer$)(); // 0x14073DB08
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVACxformAcInv; // 0x140A1E068
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGCxformAcEAlphaMul$initializer$)(); // 0x14073FB58
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VTexTGEAlphaTexDensity; // 0x140A10A30
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVCxformEAlpha$initializer$)(); // 0x140740358
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVCxformEAlphaMul; // 0x140A223C0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGCxformAcEAlphaInv; // 0x140A1FBC0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchVertexCxformAcInv$initializer$)(); // 0x14073E778
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dTexUVTexDensity$initializer$)(); // 0x14073E248
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVACxformAcInv$initializer$)(); // 0x14073F5E8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dTexUVCxform; // 0x140A16FB0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVACxformAcEAlpha; // 0x140A1E090
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VTexTGEAlphaTexDensity$initializer$)(); // 0x14073DB10
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchVertexCxformAcEAlpha; // 0x140A19860
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVCxformEAlphaMul$initializer$)(); // 0x140740360
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VTexTGCxform; // 0x140A10AA0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGCxformAcEAlphaInv$initializer$)(); // 0x14073FB60
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchVertex; // 0x140A1FBE8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVCxformAc; // 0x140A223E8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VBatchPosition3dTexUVCxform$initializer$)(); // 0x14073E250
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVACxformAcEAlpha$initializer$)(); // 0x14073F5F0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchVertexCxformAcEAlpha$initializer$)(); // 0x14073E780
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VTexTGCxform$initializer$)(); // 0x14073DB18
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVACxformAcEAlphaMul; // 0x140A1E0B8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedSolid; // 0x140A17020
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchVertexCxformAcEAlphaMul; // 0x140A19888
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VTexTGCxformEAlpha; // 0x140A10B10
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchVertex$initializer$)(); // 0x14073FB68
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVCxformAc$initializer$)(); // 0x140740368
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVCxformAcMul; // 0x140A22410
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchVertexMul; // 0x140A1FC10
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVACxformAcEAlphaMul$initializer$)(); // 0x14073F5F8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedSolid$initializer$)(); // 0x14073E258
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchVertexCxformAcEAlphaMul$initializer$)(); // 0x14073E788
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VTexTGCxformEAlpha$initializer$)(); // 0x14073DB20
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedText; // 0x140A17090
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchVertexCxformAcEAlphaInv; // 0x140A198B0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVACxformAcEAlphaInv; // 0x140A1E0E0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VVertex; // 0x140A10B80
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVCxformAcMul$initializer$)(); // 0x140740370
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchVertexMul$initializer$)(); // 0x14073FB70
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchVertexInv; // 0x140A1FC38
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVCxformAcEAlpha; // 0x140A22438
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedText$initializer$)(); // 0x14073E260
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchVertexCxformAcEAlphaInv$initializer$)(); // 0x14073E790
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBatchYUVACxformAcEAlphaInv$initializer$)(); // 0x14073F600
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VVertex$initializer$)(); // 0x14073DB28
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGTexTG; // 0x140A198D8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedTextTexDensity; // 0x140A17100
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGCMatrixAc; // 0x140A1E108
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchVertexInv$initializer$)(); // 0x14073FB78
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VVertexEAlpha; // 0x140A10BF0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVCxformAcEAlpha$initializer$)(); // 0x140740378
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVCxformAcEAlphaMul; // 0x140A22460
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchVertexEAlpha; // 0x140A1FC60
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGTexTG$initializer$)(); // 0x14073E798
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedTextTexDensity$initializer$)(); // 0x14073E268
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGCMatrixAc$initializer$)(); // 0x14073F608
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VVertexEAlpha$initializer$)(); // 0x14073DB30
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGTexTGTexDensity; // 0x140A19900
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedTexUV; // 0x140A17170
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGCMatrixAcMul; // 0x140A1E130
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVCxformAcEAlphaMul$initializer$)(); // 0x140740380
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchVertexEAlpha$initializer$)(); // 0x14073FB80
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VVertexCxform; // 0x140A10C60
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchVertexEAlphaMul; // 0x140A1FC88
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVA; // 0x140A22488
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGTexTGTexDensity$initializer$)(); // 0x14073E7A0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedTexUV$initializer$)(); // 0x14073E270
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGCMatrixAcMul$initializer$)(); // 0x14073F610
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedTexUVTexDensity; // 0x140A171E0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VVertexCxform$initializer$)(); // 0x14073DB38
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGTexTGMul; // 0x140A19928
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGCMatrixAcEAlpha; // 0x140A1E158
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchVertexEAlphaMul$initializer$)(); // 0x14073FB88
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VVertexCxformEAlpha; // 0x140A10CD0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVA$initializer$)(); // 0x140740388
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchVertexEAlphaInv; // 0x140A1FCB0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVATexDensity; // 0x140A224B0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedTexUVTexDensity$initializer$)(); // 0x14073E278
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGTexTGMul$initializer$)(); // 0x14073E7A8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGCMatrixAcEAlpha$initializer$)(); // 0x14073F618
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VVertexCxformEAlpha$initializer$)(); // 0x14073DB40
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGCMatrixAcEAlphaMul; // 0x140A1E180
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGTexTGInv; // 0x140A19950
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedTexUVCxform; // 0x140A17250
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchVertexEAlphaInv$initializer$)(); // 0x14073FB90
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VTexTGTexTG; // 0x140A10D40
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVATexDensity$initializer$)(); // 0x140740390
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchVertexCxform; // 0x140A1FCD8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVAMul; // 0x140A224D8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGCMatrixAcEAlphaMul$initializer$)(); // 0x14073F620
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGTexTGInv$initializer$)(); // 0x14073E7B0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedTexUVCxform$initializer$)(); // 0x14073E280
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VTexTGTexTG$initializer$)(); // 0x14073DB48
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTG; // 0x140A1B9A8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBox1Blur; // 0x140A1E1A8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGTexTGEAlpha; // 0x140A19978
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dSolid; // 0x140A172C0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchVertexCxform$initializer$)(); // 0x14073FB98
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVAMul$initializer$)(); // 0x140740398
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VTexTGTexTGTexDensity; // 0x140A10DB0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchVertexCxformMul; // 0x140A1FD00
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVAInv; // 0x140A22500
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTG$initializer$)(); // 0x14073EE28
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBox1Blur$initializer$)(); // 0x14073F628
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGTexTGEAlpha$initializer$)(); // 0x14073E7B8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dSolid$initializer$)(); // 0x14073E288
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dText; // 0x140A17330
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGTexDensity; // 0x140A1B9D0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VTexTGTexTGTexDensity$initializer$)(); // 0x14073DB50
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGTexTGEAlphaTexDensity; // 0x140A199A0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBox1BlurMul; // 0x140A1E1D0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVAInv$initializer$)(); // 0x1407403A0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchVertexCxformMul$initializer$)(); // 0x14073FBA0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VTexTGTexTGCxform; // 0x140A10E20
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVAEAlpha; // 0x140A22528
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchVertexCxformInv; // 0x140A1FD28
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dText$initializer$)(); // 0x14073E290
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGTexDensity$initializer$)(); // 0x14073EE30
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGTexTGEAlphaTexDensity$initializer$)(); // 0x14073E7C0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBox1BlurMul$initializer$)(); // 0x14073F630
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGTexTGEAlphaMul; // 0x140A199C8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dTextTexDensity; // 0x140A173A0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBox2Blur; // 0x140A1E1F8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VTexTGTexTGCxform$initializer$)(); // 0x14073DB58
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGMul; // 0x140A1B9F8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVAEAlpha$initializer$)(); // 0x1407403A8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VTexTGVertex; // 0x140A10E90
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchVertexCxformInv$initializer$)(); // 0x14073FBA8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchVertexCxformEAlpha; // 0x140A1FD50
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVAEAlphaTexDensity; // 0x140A22550
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGTexTGEAlphaMul$initializer$)(); // 0x14073E7C8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBox2Blur$initializer$)(); // 0x14073F638
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dTextTexDensity$initializer$)(); // 0x14073E298
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGMul$initializer$)(); // 0x14073EE38
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBox2BlurMul; // 0x140A1E220
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGTexTGEAlphaInv; // 0x140A199F0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dTexUV; // 0x140A17410
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VTexTGVertex$initializer$)(); // 0x14073DB60
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGInv; // 0x140A1BA20
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchVertexCxformEAlpha$initializer$)(); // 0x14073FBB0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVAEAlphaTexDensity$initializer$)(); // 0x1407403B0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VTexTGVertexTexDensity; // 0x140A10F00
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchVertexCxformEAlphaMul; // 0x140A1FD78
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVAEAlphaMul; // 0x140A22578
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FBox2BlurMul$initializer$)(); // 0x14073F640
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGTexTGEAlphaInv$initializer$)(); // 0x14073E7D0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dTexUV$initializer$)(); // 0x14073E2A0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGInv$initializer$)(); // 0x14073EE40
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSColorOuterBevel; // 0x140A1E248
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGTexTGCxform; // 0x140A19A18
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGEAlpha; // 0x140A1BA48
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dTexUVTexDensity; // 0x140A17480
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VTexTGVertexTexDensity$initializer$)(); // 0x14073DB68
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchVertexCxformEAlphaMul$initializer$)(); // 0x14073FBB8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVAEAlphaMul$initializer$)(); // 0x1407403B8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VTexTGVertexCxform; // 0x140A10F70
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVAEAlphaInv; // 0x140A225A0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchVertexCxformEAlphaInv; // 0x140A1FDA0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGTexTGCxform$initializer$)(); // 0x14073E7D8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSColorOuterBevel$initializer$)(); // 0x14073F648
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGEAlpha$initializer$)(); // 0x14073EE48
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dTexUVTexDensity$initializer$)(); // 0x14073E2A8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dTexUVCxform; // 0x140A174F0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSColorOuterBevelMul; // 0x140A1E270
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGEAlphaTexDensity; // 0x140A1BA70
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGTexTGCxformMul; // 0x140A19A40
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VTexTGVertexCxform$initializer$)(); // 0x14073DB70
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVAEAlphaInv$initializer$)(); // 0x1407403C0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dTexTG; // 0x140A10FE0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchVertexCxformEAlphaInv$initializer$)(); // 0x14073FBC0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVACxform; // 0x140A225C8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchVertexCxformAc; // 0x140A1FDC8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSColorOuterBevelMul$initializer$)(); // 0x14073F650
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGEAlphaTexDensity$initializer$)(); // 0x14073EE50
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VInstancedPosition3dTexUVCxform$initializer$)(); // 0x14073E2B0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGTexTGCxformMul$initializer$)(); // 0x14073E7E0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dTexTG$initializer$)(); // 0x14073DB78
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGEAlphaMul; // 0x140A1BA98
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGTexTGCxformInv; // 0x140A19A68
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VYUV; // 0x140A17560
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSColorInnerShadow; // 0x140A1E298
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVACxform$initializer$)(); // 0x1407403C8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dTexTGTexDensity; // 0x140A11050
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchVertexCxformAc$initializer$)(); // 0x14073FBC8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchVertexCxformAcMul; // 0x140A1FDF0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVACxformMul; // 0x140A225F0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGEAlphaMul$initializer$)(); // 0x14073EE58
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGTexTGCxformInv$initializer$)(); // 0x14073E7E8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VYUV$initializer$)(); // 0x14073E2B8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSColorInnerShadow$initializer$)(); // 0x14073F658
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSColorInnerShadowMul; // 0x140A1E2C0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dTexTGTexDensity$initializer$)(); // 0x14073DB80
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGEAlphaInv; // 0x140A1BAC0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGTexTGCxformEAlpha; // 0x140A19A90
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VYUVTexDensity; // 0x140A175D0
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dTexTGEAlpha; // 0x140A110C0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchVertexCxformAcMul$initializer$)(); // 0x14073FBD0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVACxformMul$initializer$)(); // 0x1407403D0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchVertexCxformAcInv; // 0x140A1FE18
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVACxformInv; // 0x140A22618
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSColorInnerShadowMul$initializer$)(); // 0x14073F660
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGEAlphaInv$initializer$)(); // 0x14073EE60
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGTexTGCxformEAlpha$initializer$)(); // 0x14073E7F0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VYUVTexDensity$initializer$)(); // 0x14073E2C0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dTexTGEAlpha$initializer$)(); // 0x14073DB88
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VYUVEAlpha; // 0x140A17640
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGCxform; // 0x140A1BAE8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSColorFullBevel; // 0x140A1E2E8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGTexTGCxformEAlphaMul; // 0x140A19AB8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dTexTGEAlphaTexDensity; // 0x140A11130
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchVertexCxformAcInv$initializer$)(); // 0x14073FBD8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVACxformInv$initializer$)(); // 0x1407403D8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVACxformEAlpha; // 0x140A22640
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchVertexCxformAcEAlpha; // 0x140A1FE40
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGCxform$initializer$)(); // 0x14073EE68
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VYUVEAlpha$initializer$)(); // 0x14073E2C8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSColorFullBevel$initializer$)(); // 0x14073F668
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGTexTGCxformEAlphaMul$initializer$)(); // 0x14073E7F8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VYUVEAlphaTexDensity; // 0x140A176B0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGTexTGCxformEAlphaInv; // 0x140A19AE0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dTexTGEAlphaTexDensity$initializer$)(); // 0x14073DB90
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSColorFullBevelMul; // 0x140A1E310
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGCxformMul; // 0x140A1BB10
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dTexTGCxform; // 0x140A111A0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVACxformEAlpha$initializer$)(); // 0x1407403E0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchVertexCxformAcEAlpha$initializer$)(); // 0x14073FBE0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVACxformEAlphaMul; // 0x140A22668
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchVertexCxformAcEAlphaMul; // 0x140A1FE68
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VYUVEAlphaTexDensity$initializer$)(); // 0x14073E2D0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGTexTGCxformEAlphaInv$initializer$)(); // 0x14073E800
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSColorFullBevelMul$initializer$)(); // 0x14073F670
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGCxformMul$initializer$)(); // 0x14073EE70
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VYUVCxform; // 0x140A17720
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dTexTGCxform$initializer$)(); // 0x14073DB98
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSColorHideBaseOuterBevel; // 0x140A1E338
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGCxformInv; // 0x140A1BB38
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGTexTGCxformAc; // 0x140A19B08
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVACxformEAlphaMul$initializer$)(); // 0x1407403E8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dTexTGCxformEAlpha; // 0x140A11210
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchVertexCxformAcEAlphaMul$initializer$)(); // 0x14073FBE8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchVertexCxformAcEAlphaInv; // 0x140A1FE90
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVACxformEAlphaInv; // 0x140A22690
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VYUVCxform$initializer$)(); // 0x14073E2D8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSColorHideBaseOuterBevel$initializer$)(); // 0x14073F678
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGCxformInv$initializer$)(); // 0x14073EE78
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGTexTGCxformAc$initializer$)(); // 0x14073E808
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSColorHideBaseOuterBevelMul; // 0x140A1E360
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGCxformEAlpha; // 0x140A1BB60
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dTexTGCxformEAlpha$initializer$)(); // 0x14073DBA0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGTexTGCxformAcMul; // 0x140A19B30
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VYUVCxformEAlpha; // 0x140A17790
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dVertex; // 0x140A11280
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchVertexCxformAcEAlphaInv$initializer$)(); // 0x14073FBF0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVACxformEAlphaInv$initializer$)(); // 0x1407403F0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGTexTG; // 0x140A1FEB8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVACxformAc; // 0x140A226B8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGCxformEAlpha$initializer$)(); // 0x14073EE80
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSColorHideBaseOuterBevelMul$initializer$)(); // 0x14073F680
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGTexTGCxformAcMul$initializer$)(); // 0x14073E810
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VYUVCxformEAlpha$initializer$)(); // 0x14073E2E0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dVertex$initializer$)(); // 0x14073DBA8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGTexTGCxformAcInv; // 0x140A19B58
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dYUV; // 0x140A17800
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSColorHideBaseInnerShadow; // 0x140A1E388
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGCxformEAlphaMul; // 0x140A1BB88
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dVertexEAlpha; // 0x140A112F0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGTexTG$initializer$)(); // 0x14073FBF8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVACxformAc$initializer$)(); // 0x1407403F8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGTexTGTexDensity; // 0x140A1FEE0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVACxformAcMul; // 0x140A226E0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGTexTGCxformAcInv$initializer$)(); // 0x14073E818
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dYUV$initializer$)(); // 0x14073E2E8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSColorHideBaseInnerShadow$initializer$)(); // 0x14073F688
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGCxformEAlphaMul$initializer$)(); // 0x14073EE88
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dYUVTexDensity; // 0x140A17870
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dVertexEAlpha$initializer$)(); // 0x14073DBB0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSColorHideBaseInnerShadowMul; // 0x140A1E3B0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGCxformEAlphaInv; // 0x140A1BBB0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGTexTGCxformAcEAlpha; // 0x140A19B80
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGTexTGTexDensity$initializer$)(); // 0x14073FC00
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dVertexCxform; // 0x140A11360
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVACxformAcMul$initializer$)(); // 0x140740400
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGTexTGMul; // 0x140A1FF08
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVACxformAcInv; // 0x140A22708
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dYUVTexDensity$initializer$)(); // 0x14073E2F0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSColorHideBaseInnerShadowMul$initializer$)(); // 0x14073F690
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGCxformEAlphaInv$initializer$)(); // 0x14073EE90
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGTexTGCxformAcEAlpha$initializer$)(); // 0x14073E820
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dYUVEAlpha; // 0x140A178E0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGTexTGCxformAcEAlphaMul; // 0x140A19BA8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dVertexCxform$initializer$)(); // 0x14073DBB8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSColorHideBaseFullBevel; // 0x140A1E3D8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGCxformAc; // 0x140A1BBD8
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dVertexCxformEAlpha; // 0x140A113D0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGTexTGMul$initializer$)(); // 0x14073FC08
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVACxformAcInv$initializer$)(); // 0x140740408
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGTexTGInv; // 0x140A1FF30
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVACxformAcEAlpha; // 0x140A22730
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dYUVEAlpha$initializer$)(); // 0x14073E2F8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGTexTGCxformAcEAlphaMul$initializer$)(); // 0x14073E828
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSColorHideBaseFullBevel$initializer$)(); // 0x14073F698
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGCxformAc$initializer$)(); // 0x14073EE98
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dVertexCxformEAlpha$initializer$)(); // 0x14073DBC0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGCxformAcMul; // 0x140A1BC00
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSColorHideBaseFullBevelMul; // 0x140A1E400
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dYUVEAlphaTexDensity; // 0x140A17950
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGTexTGCxformAcEAlphaInv; // 0x140A19BD0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGTexTGInv$initializer$)(); // 0x14073FC10
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dTexTGTexTG; // 0x140A11440
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVACxformAcEAlpha$initializer$)(); // 0x140740410
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVACxformAcEAlphaMul; // 0x140A22758
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGTexTGEAlpha; // 0x140A1FF58
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGCxformAcMul$initializer$)(); // 0x14073EEA0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSColorHideBaseFullBevelMul$initializer$)(); // 0x14073F6A0
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dYUVEAlphaTexDensity$initializer$)(); // 0x14073E300
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGTexTGCxformAcEAlphaInv$initializer$)(); // 0x14073E830
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dTexTGTexTG$initializer$)(); // 0x14073DBC8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGCxformAcInv; // 0x140A1BC28
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGVertex; // 0x140A19BF8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSGradOuterBevel; // 0x140A1E428
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dYUVCxform; // 0x140A179C0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVACxformAcEAlphaMul$initializer$)(); // 0x140740418
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dTexTGTexTGTexDensity; // 0x140A114B0
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGTexTGEAlpha$initializer$)(); // 0x14073FC18
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGTexTGEAlphaTexDensity; // 0x140A1FF80
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVACxformAcEAlphaInv; // 0x140A22780
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGCxformAcInv$initializer$)(); // 0x14073EEA8
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGVertex$initializer$)(); // 0x14073E838
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSGradOuterBevel$initializer$)(); // 0x14073F6A8
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dYUVCxform$initializer$)(); // 0x14073E308
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL150_VPosition3dYUVCxformEAlpha; // 0x140A17A30
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL110_FBatchTexTGVertexTexDensity; // 0x140A19C20
void(*Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dTexTGTexTGTexDensity$initializer$)(); // 0x14073DBD0
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FSGradOuterBevelMul; // 0x140A1E450
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL120_FTexTGCxformAcEAlpha; // 0x140A1BC50
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGTexTGEAlphaTexDensity$initializer$)(); // 0x14073FC20
Scaleform::Render::GL::VertexShaderDesc Scaleform::Render::GL::ShaderDesc_VS_GLSL120_VPosition3dTexTGTexTGCxform; // 0x140A11520
void(*Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FInstancedYUVACxformAcEAlphaInv$initializer$)(); // 0x140740420
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FTexTGCMatrixAc; // 0x140A227A8
Scaleform::Render::GL::FragShaderDesc Scaleform::Render::GL::ShaderDesc_FS_GLSL150_FBatchTexTGTexTGEAlphaMul; // 0x140A1FFA8
const Scaleform::Render::GL::VertexShaderDesc * Scaleform::Render::GL::VertexShaderDesc::GetDesc(Scaleform::Render::GL::ShaderDesc::ShaderType shader, Scaleform::Render::GL::ShaderDesc::ShaderVersion ver); // 0x1405C75A0
Scaleform::Render::GL::VertexShaderDesc::ShaderIndex Scaleform::Render::GL::VertexShaderDesc::GetShaderIndexForComboIndex(unsigned long index, Scaleform::Render::GL::ShaderDesc::ShaderVersion ver); // 0x1405D5320
const Scaleform::Render::GL::FragShaderDesc * Scaleform::Render::GL::FragShaderDesc::GetDesc(Scaleform::Render::GL::ShaderDesc::ShaderType shader, Scaleform::Render::GL::ShaderDesc::ShaderVersion ver); // 0x1405C7550
Scaleform::Render::GL::FragShaderDesc::ShaderIndex Scaleform::Render::GL::FragShaderDesc::GetShaderIndexForComboIndex(unsigned long index, Scaleform::Render::GL::ShaderDesc::ShaderVersion ver); // 0x1405D1820
unsigned long Scaleform::Render::GL::FragShaderDesc::GetShaderComboIndex(Scaleform::Render::GL::ShaderDesc::ShaderType shader, Scaleform::Render::GL::ShaderDesc::ShaderVersion ver); // 0x1405C75F0//decompilation failure at 14079C200!
//decompilation failure at 140A0C950!
//decompilation failure at 140A07710!
//decompilation failure at 140A099A0!
//decompilation failure at 14073E840!
//decompilation failure at 14073E310!
//decompilation failure at 14073F6B0!
//decompilation failure at 14073EEB0!
//decompilation failure at 140A19C48!
//decompilation failure at 140A17AA0!
//decompilation failure at 14073DBD8!
//decompilation failure at 140A1BC78!
//decompilation failure at 140A1E478!
//decompilation failure at 140740428!
//decompilation failure at 140A11590!
//decompilation failure at 14073FC28!
//decompilation failure at 140A227D0!
//decompilation failure at 140A1FFD0!
//decompilation failure at 14073E318!
//decompilation failure at 14073E848!
//decompilation failure at 14073EEB8!
//decompilation failure at 14073F6B8!
//decompilation failure at 14073DBE0!
//decompilation failure at 140A1BCA0!
//decompilation failure at 140A17B10!
//decompilation failure at 140A1E4A0!
//decompilation failure at 140A19C70!
//decompilation failure at 14073FC30!
//decompilation failure at 140740430!
//decompilation failure at 140A11600!
//decompilation failure at 140A227F8!
//decompilation failure at 140A1FFF8!
//decompilation failure at 14073EEC0!
//decompilation failure at 14073E320!
//decompilation failure at 14073F6C0!
//decompilation failure at 14073E850!
//decompilation failure at 14073DBE8!
//decompilation failure at 140A1BCC8!
//decompilation failure at 140A1E4C8!
//decompilation failure at 140A19C98!
//decompilation failure at 140A17B80!
//decompilation failure at 140740438!
//decompilation failure at 14073FC38!
//decompilation failure at 140A11670!
//decompilation failure at 140A22820!
//decompilation failure at 140A20020!
//decompilation failure at 14073F6C8!
//decompilation failure at 14073EEC8!
//decompilation failure at 14073E858!
//decompilation failure at 14073E328!
//decompilation failure at 140A19CC0!
//decompilation failure at 140A1BCF0!
//decompilation failure at 140A17BF0!
//decompilation failure at 14073DBF0!
//decompilation failure at 140A1E4F0!
//decompilation failure at 140740440!
//decompilation failure at 140A116E0!
//decompilation failure at 14073FC40!
//decompilation failure at 140A20048!
//decompilation failure at 140A22848!
//decompilation failure at 14073E860!
//decompilation failure at 14073EED0!
//decompilation failure at 14073E330!
//decompilation failure at 14073F6D0!
//decompilation failure at 140A1BD18!
//decompilation failure at 14073DBF8!
//decompilation failure at 140A1E518!
//decompilation failure at 140A19CE8!
//decompilation failure at 140A17C60!
//decompilation failure at 14073FC48!
//decompilation failure at 140A11750!
//decompilation failure at 140740448!
//decompilation failure at 140A20070!
//decompilation failure at 140A22870!
//decompilation failure at 14073EED8!
//decompilation failure at 14073F6D8!
//decompilation failure at 14073E868!
//decompilation failure at 14073E338!
//decompilation failure at 14073DC00!
//decompilation failure at 140A1BD40!
//decompilation failure at 140A19D10!
//decompilation failure at 140A17CD0!
//decompilation failure at 140A1E540!
//decompilation failure at 14073FC50!
//decompilation failure at 140740450!
//decompilation failure at 140A117C0!
//decompilation failure at 140A22898!
//decompilation failure at 140A20098!
//decompilation failure at 14073EEE0!
//decompilation failure at 14073E870!
//decompilation failure at 14073E340!
//decompilation failure at 14073F6E0!
//decompilation failure at 140A19D38!
//decompilation failure at 140A17D40!
//decompilation failure at 140A1BD68!
//decompilation failure at 14073DC08!
//decompilation failure at 140A1E568!
//decompilation failure at 140740458!
//decompilation failure at 140A11830!
//decompilation failure at 14073FC58!
//decompilation failure at 140A200C0!
//decompilation failure at 140A228C0!
//decompilation failure at 14073E878!
//decompilation failure at 14073E348!
//decompilation failure at 14073EEE8!
//decompilation failure at 14073F6E8!
//decompilation failure at 14073DC10!
//decompilation failure at 140A19D60!
//decompilation failure at 140A17DB0!
//decompilation failure at 140A1E590!
//decompilation failure at 140A1BD90!
//decompilation failure at 14073FC60!
//decompilation failure at 140740460!
//decompilation failure at 140A118A0!
//decompilation failure at 140A228E8!
//decompilation failure at 140A200E8!
//decompilation failure at 14073E880!
//decompilation failure at 14073E350!
//decompilation failure at 14073F6F0!
//decompilation failure at 14073EEF0!
//decompilation failure at 140A19D88!
//decompilation failure at 140A17E20!
//decompilation failure at 140A1BDB8!
//decompilation failure at 140A1E5B8!
//decompilation failure at 14073DC18!
//decompilation failure at 140740468!
//decompilation failure at 140A11910!
//decompilation failure at 14073FC68!
//decompilation failure at 140A22910!
//decompilation failure at 140A20110!
//decompilation failure at 14073E358!
//decompilation failure at 14073E888!
//decompilation failure at 14073EEF8!
//decompilation failure at 14073F6F8!
//decompilation failure at 140A17E90!
//decompilation failure at 140A19DB0!
//decompilation failure at 140A1E5E0!
//decompilation failure at 14073DC20!
//decompilation failure at 140A1BDE0!
//decompilation failure at 140740470!
//decompilation failure at 140A11980!
//decompilation failure at 14073FC70!
//decompilation failure at 140A22938!
//decompilation failure at 140A20138!
//decompilation failure at 14073E890!
//decompilation failure at 14073E360!
//decompilation failure at 14073F700!
//decompilation failure at 14073EF00!
//decompilation failure at 140A19DD8!
//decompilation failure at 140A1BE08!
//decompilation failure at 14073DC28!
//decompilation failure at 140A17F00!
//decompilation failure at 140A1E608!
//decompilation failure at 140A119F0!
//decompilation failure at 140740478!
//decompilation failure at 14073FC78!
//decompilation failure at 140A20160!
//decompilation failure at 140A22960!
//decompilation failure at 14073E898!
//decompilation failure at 14073EF08!
//decompilation failure at 14073E368!
//decompilation failure at 14073F708!
//decompilation failure at 14073DC30!
//decompilation failure at 140A17F70!
//decompilation failure at 140A1E630!
//decompilation failure at 140A1BE30!
//decompilation failure at 140A19E00!
//decompilation failure at 14073FC80!
//decompilation failure at 140740480!
//decompilation failure at 140A11A60!
//decompilation failure at 140A22988!
//decompilation failure at 140A20188!
//decompilation failure at 14073E370!
//decompilation failure at 14073F710!
//decompilation failure at 14073EF10!
//decompilation failure at 14073E8A0!
//decompilation failure at 140A1E658!
//decompilation failure at 140A19E28!
//decompilation failure at 140A17FE0!
//decompilation failure at 140A1BE58!
//decompilation failure at 14073DC38!
//decompilation failure at 140A11AD0!
//decompilation failure at 140740488!
//decompilation failure at 14073FC88!
//decompilation failure at 140A229B0!
//decompilation failure at 140A201B0!
//decompilation failure at 14073F718!
//decompilation failure at 14073E8A8!
//decompilation failure at 14073E378!
//decompilation failure at 14073EF18!
//decompilation failure at 140A18050!
//decompilation failure at 140A1E680!
//decompilation failure at 140A1BE80!
//decompilation failure at 14073DC40!
//decompilation failure at 140A19E50!
//decompilation failure at 140A11B40!
//decompilation failure at 140740490!
//decompilation failure at 14073FC90!
//decompilation failure at 140A229D8!
//decompilation failure at 140A201D8!
//decompilation failure at 14073E380!
//decompilation failure at 14073F720!
//decompilation failure at 14073EF20!
//decompilation failure at 14073E8B0!
//decompilation failure at 14073DC48!
//decompilation failure at 140A180C0!
//decompilation failure at 140A19E78!
//decompilation failure at 140A1E6A8!
//decompilation failure at 140A1BEA8!
//decompilation failure at 140740498!
//decompilation failure at 140A11BB0!
//decompilation failure at 14073FC98!
//decompilation failure at 140A22A00!
//decompilation failure at 140A20200!
//decompilation failure at 14073E388!
//decompilation failure at 14073E8B8!
//decompilation failure at 14073F728!
//decompilation failure at 14073EF28!
//decompilation failure at 140A18130!
//decompilation failure at 140A1BED0!
//decompilation failure at 14073DC50!
//decompilation failure at 140A19EA0!
//decompilation failure at 140A1E6D0!
//decompilation failure at 140A11C20!
//decompilation failure at 1407404A0!
//decompilation failure at 14073FCA0!
//decompilation failure at 140A20228!
//decompilation failure at 140A22A28!
//decompilation failure at 14073E390!
//decompilation failure at 14073EF30!
//decompilation failure at 14073E8C0!
//decompilation failure at 14073F730!
//decompilation failure at 140A181A0!
//decompilation failure at 14073DC58!
//decompilation failure at 140A1BEF8!
//decompilation failure at 140A19EC8!
//decompilation failure at 140A1E6F8!
//decompilation failure at 14073FCA8!
//decompilation failure at 1407404A8!
//decompilation failure at 140A11C90!
//decompilation failure at 140A20250!
//decompilation failure at 140A22A50!
//decompilation failure at 14073E398!
//decompilation failure at 14073EF38!
//decompilation failure at 14073E8C8!
//decompilation failure at 14073F738!
//decompilation failure at 140A1BF20!
//decompilation failure at 140A19EF0!
//decompilation failure at 140A18210!
//decompilation failure at 140A1E720!
//decompilation failure at 14073DC60!
//decompilation failure at 14073FCB0!
//decompilation failure at 1407404B0!
//decompilation failure at 140A11D00!
//decompilation failure at 140A20278!
//decompilation failure at 140A22A78!
//decompilation failure at 14073EF40!
//decompilation failure at 14073E8D0!
//decompilation failure at 14073E3A0!
//decompilation failure at 14073F740!
//decompilation failure at 140A18280!
//decompilation failure at 140A1BF48!
//decompilation failure at 140A19F18!
//decompilation failure at 14073DC68!
//decompilation failure at 140A1E748!
//decompilation failure at 14073FCB8!
//decompilation failure at 1407404B8!
//decompilation failure at 140A11D70!
//decompilation failure at 140A22AA0!
//decompilation failure at 140A202A0!
//decompilation failure at 14073E3A8!
//decompilation failure at 14073EF48!
//decompilation failure at 14073E8D8!
//decompilation failure at 14073F748!
//decompilation failure at 140A1BF70!
//decompilation failure at 140A1E770!
//decompilation failure at 140A19F40!
//decompilation failure at 140A182F0!
//decompilation failure at 14073DC70!
//decompilation failure at 1407404C0!
//decompilation failure at 14073FCC0!
//decompilation failure at 140A11DE0!
//decompilation failure at 140A202C8!
//decompilation failure at 140A22AC8!
//decompilation failure at 14073E3B0!
//decompilation failure at 14073E8E0!
//decompilation failure at 14073EF50!
//decompilation failure at 14073F750!
//decompilation failure at 140A18360!
//decompilation failure at 140A1E798!
//decompilation failure at 140A1BF98!
//decompilation failure at 140A19F68!
//decompilation failure at 14073DC78!
//decompilation failure at 14073FCC8!
//decompilation failure at 140A11E50!
//decompilation failure at 1407404C8!
//decompilation failure at 140A22AF0!
//decompilation failure at 140A202F0!
//decompilation failure at 14073E3B8!
//decompilation failure at 14073F758!
//decompilation failure at 14073EF58!
//decompilation failure at 14073E8E8!
//decompilation failure at 140A1BFC0!
//decompilation failure at 140A1E7C0!
//decompilation failure at 140A183D0!
//decompilation failure at 14073DC80!
//decompilation failure at 140A19F90!
//decompilation failure at 1407404D0!
//decompilation failure at 140A11EC0!
//decompilation failure at 14073FCD0!
//decompilation failure at 140A20318!
//decompilation failure at 140A22B18!
//decompilation failure at 14073EF60!
//decompilation failure at 14073F760!
//decompilation failure at 14073E3C0!
//decompilation failure at 14073E8F0!
//decompilation failure at 140A1BFE8!
//decompilation failure at 140A1E7E8!
//decompilation failure at 14073DC88!
//decompilation failure at 140A18440!
//decompilation failure at 140A19FB8!
//decompilation failure at 14073FCD8!
//decompilation failure at 140A11F30!
//decompilation failure at 1407404D8!
//decompilation failure at 140A22B40!
//decompilation failure at 140A20340!
//decompilation failure at 14073EF68!
//decompilation failure at 14073F768!
//decompilation failure at 14073E3C8!
//decompilation failure at 14073E8F8!
//decompilation failure at 14073DC90!
//decompilation failure at 140A184B0!
//decompilation failure at 140A1C010!
//decompilation failure at 140A19FE0!
//decompilation failure at 140A1E810!
//decompilation failure at 140A11FA0!
//decompilation failure at 1407404E0!
//decompilation failure at 14073FCE0!
//decompilation failure at 140A20368!
//decompilation failure at 140A22B68!
//decompilation failure at 14073E3D0!
//decompilation failure at 14073EF70!
//decompilation failure at 14073E900!
//decompilation failure at 14073F770!
//decompilation failure at 14073DC98!
//decompilation failure at 140A1E838!
//decompilation failure at 140A1C038!
//decompilation failure at 140A18520!
//decompilation failure at 140A1A008!
//decompilation failure at 14073FCE8!
//decompilation failure at 140A12010!
//decompilation failure at 1407404E8!
//decompilation failure at 140A22B90!
//decompilation failure at 140A20390!
//decompilation failure at 14073F778!
//decompilation failure at 14073EF78!
//decompilation failure at 14073E3D8!
//decompilation failure at 14073E908!
//decompilation failure at 140A1C060!
//decompilation failure at 140A18590!
//decompilation failure at 140A1E860!
//decompilation failure at 140A1A030!
//decompilation failure at 14073DCA0!
//decompilation failure at 140A12080!
//decompilation failure at 1407404F0!
//decompilation failure at 14073FCF0!
//decompilation failure at 140A203B8!
//decompilation failure at 140A22BB8!
//decompilation failure at 14073EF80!
//decompilation failure at 14073E3E0!
//decompilation failure at 14073F780!
//decompilation failure at 14073E910!
//decompilation failure at 140A18600!
//decompilation failure at 140A1E888!
//decompilation failure at 14073DCA8!
//decompilation failure at 140A1C088!
//decompilation failure at 140A1A058!
//decompilation failure at 14073FCF8!
//decompilation failure at 140A120F0!
//decompilation failure at 1407404F8!
//decompilation failure at 140A22BE0!
//decompilation failure at 140A203E0!
//decompilation failure at 14073E3E8!
//decompilation failure at 14073F788!
//decompilation failure at 14073EF88!
//decompilation failure at 14073E918!
//decompilation failure at 14073DCB0!
//decompilation failure at 140A1A080!
//decompilation failure at 140A1E8B0!
//decompilation failure at 140A18670!
//decompilation failure at 140A1C0B0!
//decompilation failure at 140740500!
//decompilation failure at 140A12160!
//decompilation failure at 14073FD00!
//decompilation failure at 140A20408!
//decompilation failure at 140A22C08!
//decompilation failure at 14073E920!
//decompilation failure at 14073F790!
//decompilation failure at 14073E3F0!
//decompilation failure at 14073EF90!
//decompilation failure at 140A1A0A8!
//decompilation failure at 14073DCB8!
//decompilation failure at 140A1E8D8!
//decompilation failure at 140A1C0D8!
//decompilation failure at 14073FD08!
//decompilation failure at 140740508!
//decompilation failure at 140A121D0!
//decompilation failure at 140A22C30!
//decompilation failure at 140A20430!
//decompilation failure at 14073E928!
//decompilation failure at 14073F798!
//decompilation failure at 14073EF98!
//decompilation failure at 140A1E900!
//decompilation failure at 140A1A0D0!
//decompilation failure at 140A1C100!
//decompilation failure at 14073DCC0!
//decompilation failure at 140740510!
//decompilation failure at 14073FD10!
//decompilation failure at 140A12240!
//decompilation failure at 140A22C58!
//decompilation failure at 140A20458!
//decompilation failure at 14073F7A0!
//decompilation failure at 14073E930!
//decompilation failure at 14073EFA0!
//decompilation failure at 140A1C128!
//decompilation failure at 140A1A0F8!
//decompilation failure at 14073DCC8!
//decompilation failure at 140A1E928!
//decompilation failure at 14073FD18!
//decompilation failure at 140740518!
//decompilation failure at 140A122B0!
//decompilation failure at 140A20480!
//decompilation failure at 140A22C80!
//decompilation failure at 14073EFA8!
//decompilation failure at 14073E938!
//decompilation failure at 14073F7A8!
//decompilation failure at 14073DCD0!
//decompilation failure at 140A1E950!
//decompilation failure at 140A1C150!
//decompilation failure at 140A1A120!
//decompilation failure at 14073FD20!
//decompilation failure at 140740520!
//decompilation failure at 140A12320!
//decompilation failure at 140A22CA8!
//decompilation failure at 140A204A8!
//decompilation failure at 14073F7B0!
//decompilation failure at 14073EFB0!
//decompilation failure at 14073E940!
//decompilation failure at 14073DCD8!
//decompilation failure at 140A1A148!
//decompilation failure at 140A1C178!
//decompilation failure at 140A1E978!
//decompilation failure at 140740528!
//decompilation failure at 140A12390!
//decompilation failure at 14073FD28!
//decompilation failure at 140A204D0!
//decompilation failure at 140A22CD0!
//decompilation failure at 14073E948!
//decompilation failure at 14073EFB8!
//decompilation failure at 14073F7B8!
//decompilation failure at 14073DCE0!
//decompilation failure at 140A1E9A0!
//decompilation failure at 140A1A170!
//decompilation failure at 140A1C1A0!
//decompilation failure at 14073FD30!
//decompilation failure at 140A12400!
//decompilation failure at 140740530!
//decompilation failure at 140A22CF8!
//decompilation failure at 140A204F8!
//decompilation failure at 14073F7C0!
//decompilation failure at 14073E950!
//decompilation failure at 14073EFC0!
//decompilation failure at 140A1E9C8!
//decompilation failure at 14073DCE8!
//decompilation failure at 140A1C1C8!
//decompilation failure at 140A1A198!
//decompilation failure at 140740538!
//decompilation failure at 140A12470!
//decompilation failure at 14073FD38!
//decompilation failure at 140A22D20!
//decompilation failure at 140A20520!
//decompilation failure at 14073F7C8!
//decompilation failure at 14073EFC8!
//decompilation failure at 14073E958!
//decompilation failure at 140A1C1F0!
//decompilation failure at 14073DCF0!
//decompilation failure at 140A1E9F0!
//decompilation failure at 140A1A1C0!
//decompilation failure at 140740540!
//decompilation failure at 140A124E0!
//decompilation failure at 14073FD40!
//decompilation failure at 140A20548!
//decompilation failure at 140A22D48!
//decompilation failure at 14073EFD0!
//decompilation failure at 14073F7D0!
//decompilation failure at 14073E960!
//decompilation failure at 140A1A1E8!
//decompilation failure at 140A1EA18!
//decompilation failure at 140A1C218!
//decompilation failure at 14073DCF8!
//decompilation failure at 140A12550!
//decompilation failure at 14073FD48!
//decompilation failure at 140740548!
//decompilation failure at 140A22D70!
//decompilation failure at 140A20570!
//decompilation failure at 14073F7D8!
//decompilation failure at 14073E968!
//decompilation failure at 14073EFD8!
//decompilation failure at 14073DD00!
//decompilation failure at 140A1C240!
//decompilation failure at 140A1EA40!
//decompilation failure at 140A1A210!
//decompilation failure at 140A125C0!
//decompilation failure at 140740550!
//decompilation failure at 14073FD50!
//decompilation failure at 140A20598!
//decompilation failure at 140A22D98!
//decompilation failure at 14073EFE0!
//decompilation failure at 14073F7E0!
//decompilation failure at 14073E970!
//decompilation failure at 140A1C268!
//decompilation failure at 140A1EA68!
//decompilation failure at 14073DD08!
//decompilation failure at 140A1A238!
//decompilation failure at 14073FD58!
//decompilation failure at 140740558!
//decompilation failure at 140A12630!
//decompilation failure at 140A205C0!
//decompilation failure at 140A22DC0!
//decompilation failure at 14073EFE8!
//decompilation failure at 14073F7E8!
//decompilation failure at 14073E978!
//decompilation failure at 14073DD10!
//decompilation failure at 140A1EA90!
//decompilation failure at 140A1A260!
//decompilation failure at 140A1C290!
//decompilation failure at 14073FD60!
//decompilation failure at 140A126A0!
//decompilation failure at 140740560!
//decompilation failure at 140A22DE8!
//decompilation failure at 140A205E8!
//decompilation failure at 14073F7F0!
//decompilation failure at 14073E980!
//decompilation failure at 14073EFF0!
//decompilation failure at 14073DD18!
//decompilation failure at 140A1A288!
//decompilation failure at 140A1C2B8!
//decompilation failure at 140A1EAB8!
//decompilation failure at 140A12710!
//decompilation failure at 140740568!
//decompilation failure at 14073FD68!
//decompilation failure at 140A20610!
//decompilation failure at 140A22E10!
//decompilation failure at 14073EFF8!
//decompilation failure at 14073E988!
//decompilation failure at 14073F7F8!
//decompilation failure at 140A1EAE0!
//decompilation failure at 140A1A2B0!
//decompilation failure at 14073DD20!
//decompilation failure at 140A1C2E0!
//decompilation failure at 14073FD70!
//decompilation failure at 140A12780!
//decompilation failure at 140740570!
//decompilation failure at 140A20638!
//decompilation failure at 140A22E38!
//decompilation failure at 14073F800!
//decompilation failure at 14073E990!
//decompilation failure at 14073F000!
//decompilation failure at 140A1EB08!
//decompilation failure at 14073DD28!
//decompilation failure at 140A1A2D8!
//decompilation failure at 140A1C308!
//decompilation failure at 140A127F0!
//decompilation failure at 14073FD78!
//decompilation failure at 140740578!
//decompilation failure at 140A20660!
//decompilation failure at 140A22E60!
//decompilation failure at 14073F808!
//decompilation failure at 14073E998!
//decompilation failure at 14073F008!
//decompilation failure at 14073DD30!
//decompilation failure at 140A1C330!
//decompilation failure at 140A1EB30!
//decompilation failure at 140A1A300!
//decompilation failure at 140A12860!
//decompilation failure at 14073FD80!
//decompilation failure at 140740580!
//decompilation failure at 140A22E88!
//decompilation failure at 140A20688!
//decompilation failure at 14073F010!
//decompilation failure at 14073F810!
//decompilation failure at 14073E9A0!
//decompilation failure at 140A1C358!
//decompilation failure at 140A1A328!
//decompilation failure at 14073DD38!
//decompilation failure at 140A1EB58!
//decompilation failure at 140740588!
//decompilation failure at 140A128D0!
//decompilation failure at 14073FD88!
//decompilation failure at 140A206B0!
//decompilation failure at 140A22EB0!
//decompilation failure at 14073F018!
//decompilation failure at 14073E9A8!
//decompilation failure at 14073F818!
//decompilation failure at 140A1C380!
//decompilation failure at 14073DD40!
//decompilation failure at 140A1A350!
//decompilation failure at 140A1EB80!
//decompilation failure at 14073FD90!
//decompilation failure at 140740590!
//decompilation failure at 140A12940!
//decompilation failure at 140A206D8!
//decompilation failure at 140A22ED8!
//decompilation failure at 14073F020!
//decompilation failure at 14073E9B0!
//decompilation failure at 14073F820!
//decompilation failure at 140A1EBA8!
//decompilation failure at 140A1C3A8!
//decompilation failure at 140A1A378!
//decompilation failure at 14073DD48!
//decompilation failure at 14073FD98!
//decompilation failure at 140A129B0!
//decompilation failure at 140740598!
//decompilation failure at 140A22F00!
//decompilation failure at 140A20700!
//decompilation failure at 14073F828!
//decompilation failure at 14073F028!
//decompilation failure at 14073E9B8!
//decompilation failure at 140A1A3A0!
//decompilation failure at 140A1EBD0!
//decompilation failure at 140A1C3D0!
//decompilation failure at 14073DD50!
//decompilation failure at 1407405A0!
//decompilation failure at 140A12A20!
//decompilation failure at 14073FDA0!
//decompilation failure at 140A22F28!
//decompilation failure at 140A20728!
//decompilation failure at 14073E9C0!
//decompilation failure at 14073F830!
//decompilation failure at 14073F030!
//decompilation failure at 14073DD58!
//decompilation failure at 140A1C3F8!
//decompilation failure at 140A1A3C8!
//decompilation failure at 140A1EBF8!
//decompilation failure at 1407405A8!
//decompilation failure at 140A12A90!
//decompilation failure at 14073FDA8!
//decompilation failure at 140A20750!
//decompilation failure at 140A22F50!
//decompilation failure at 14073F038!
//decompilation failure at 14073E9C8!
//decompilation failure at 14073F838!
//decompilation failure at 140A1C420!
//decompilation failure at 14073DD60!
//decompilation failure at 140A1EC20!
//decompilation failure at 140A1A3F0!
//decompilation failure at 140A12B00!
//decompilation failure at 14073FDB0!
//decompilation failure at 1407405B0!
//decompilation failure at 140A22F78!
//decompilation failure at 140A20778!
//decompilation failure at 14073F040!
//decompilation failure at 14073F840!
//decompilation failure at 14073E9D0!
//decompilation failure at 140A1C448!
//decompilation failure at 140A1EC48!
//decompilation failure at 140A1A418!
//decompilation failure at 14073DD68!
//decompilation failure at 1407405B8!
//decompilation failure at 140A12B70!
//decompilation failure at 14073FDB8!
//decompilation failure at 140A207A0!
//decompilation failure at 140A22FA0!
//decompilation failure at 14073F048!
//decompilation failure at 14073F848!
//decompilation failure at 14073E9D8!
//decompilation failure at 140A1C470!
//decompilation failure at 140A1EC70!
//decompilation failure at 14073DD70!
//decompilation failure at 140A1A440!
//decompilation failure at 14073FDC0!
//decompilation failure at 140A12BE0!
//decompilation failure at 1407405C0!
//decompilation failure at 140A207C8!
//decompilation failure at 140A22FC8!
//decompilation failure at 14073F050!
//decompilation failure at 14073F850!
//decompilation failure at 14073E9E0!
//decompilation failure at 14073DD78!
//decompilation failure at 140A1C498!
//decompilation failure at 140A1A468!
//decompilation failure at 14073FDC8!
//decompilation failure at 1407405C8!
//decompilation failure at 140A12C50!
//decompilation failure at 140A22FF0!
//decompilation failure at 140A207F0!
//decompilation failure at 14073F058!
//decompilation failure at 14073E9E8!
//decompilation failure at 140A1A490!
//decompilation failure at 14073DD80!
//decompilation failure at 140A1C4C0!
//decompilation failure at 1407405D0!
//decompilation failure at 140A12CC0!
//decompilation failure at 14073FDD0!
//decompilation failure at 140A20818!
//decompilation failure at 140A23018!
//decompilation failure at 14073E9F0!
//decompilation failure at 14073F060!
//decompilation failure at 140A1A4B8!
//decompilation failure at 14073DD88!
//decompilation failure at 140A1C4E8!
//decompilation failure at 140A12D30!
//decompilation failure at 14073FDD8!
//decompilation failure at 1407405D8!
//decompilation failure at 140A20840!
//decompilation failure at 140A23040!
//decompilation failure at 14073E9F8!
//decompilation failure at 14073F068!
//decompilation failure at 140A1A4E0!
//decompilation failure at 14073DD90!
//decompilation failure at 140A1C510!
//decompilation failure at 14073FDE0!
//decompilation failure at 1407405E0!
//decompilation failure at 140A12DA0!
//decompilation failure at 140A23068!
//decompilation failure at 140A20868!
//decompilation failure at 14073EA00!
//decompilation failure at 14073F070!
//decompilation failure at 140A1A508!
//decompilation failure at 140A1C538!
//decompilation failure at 14073DD98!
//decompilation failure at 1407405E8!
//decompilation failure at 14073FDE8!
//decompilation failure at 140A12E10!
//decompilation failure at 140A23090!
//decompilation failure at 140A20890!
//decompilation failure at 14073EA08!
//decompilation failure at 14073F078!
//decompilation failure at 140A1C560!
//decompilation failure at 140A1A530!
//decompilation failure at 14073DDA0!
//decompilation failure at 140A12E80!
//decompilation failure at 1407405F0!
//decompilation failure at 14073FDF0!
//decompilation failure at 140A230B8!
//decompilation failure at 140A208B8!
//decompilation failure at 14073F080!
//decompilation failure at 14073EA10!
//decompilation failure at 140A1A558!
//decompilation failure at 140A1C588!
//decompilation failure at 14073DDA8!
//decompilation failure at 140A12EF0!
//decompilation failure at 1407405F8!
//decompilation failure at 14073FDF8!
//decompilation failure at 140A230E0!
//decompilation failure at 140A208E0!
//decompilation failure at 14073F088!
//decompilation failure at 14073EA18!
//decompilation failure at 1407A3D98!
//decompilation failure at 14073DDB0!
//decompilation failure at 140A1A580!
//decompilation failure at 140A1C5B0!
//decompilation failure at 14073FE00!
//decompilation failure at 140740600!
//decompilation failure at 140A12F60!
//decompilation failure at 140A20908!
//decompilation failure at 140A23108!
//decompilation failure at 14073EA20!
//decompilation failure at 14073F090!
//decompilation failure at 140A1C5D8!
//decompilation failure at 14073DDB8!
//decompilation failure at 140A1A5A8!
//decompilation failure at 14073FE08!
//decompilation failure at 140A12FD0!
//decompilation failure at 140740608!
//decompilation failure at 140A23130!
//decompilation failure at 140A20930!
//decompilation failure at 14073F098!
//decompilation failure at 14073EA28!
//decompilation failure at 140A1A5D0!
//decompilation failure at 140A1C600!
//decompilation failure at 14073DDC0!
//decompilation failure at 140740610!
//decompilation failure at 14073FE10!
//decompilation failure at 140A13040!
//decompilation failure at 140A23158!
//decompilation failure at 140A20958!
//decompilation failure at 14073EA30!
//decompilation failure at 14073F0A0!
//decompilation failure at 140A1C628!
//decompilation failure at 14073DDC8!
//decompilation failure at 140A1A5F8!
//decompilation failure at 140740618!
//decompilation failure at 140A130B0!
//decompilation failure at 14073FE18!
//decompilation failure at 14079C220!
//decompilation failure at 140A20980!
//decompilation failure at 140A23180!
//decompilation failure at 14073F0A8!
//decompilation failure at 14073EA38!
//decompilation failure at 140A1C650!
//decompilation failure at 140A1A620!
//decompilation failure at 14073DDD0!
//decompilation failure at 140A13120!
//decompilation failure at 14073FE20!
//decompilation failure at 140740620!
//decompilation failure at 140A231A8!
//decompilation failure at 140A209A8!
//decompilation failure at 14073F0B0!
//decompilation failure at 14073EA40!
//decompilation failure at 14073DDD8!
//decompilation failure at 140A1C678!
//decompilation failure at 140A1A648!
//decompilation failure at 140740628!
//decompilation failure at 14073FE28!
//decompilation failure at 140A13190!
//decompilation failure at 140A209D0!
//decompilation failure at 140A231D0!
//decompilation failure at 14073F0B8!
//decompilation failure at 14073EA48!
//decompilation failure at 140A1A670!
//decompilation failure at 140A1C6A0!
//decompilation failure at 14073DDE0!
//decompilation failure at 140740630!
//decompilation failure at 14073FE30!
//decompilation failure at 140A13200!
//decompilation failure at 140A209F8!
//decompilation failure at 140A231F8!
//decompilation failure at 14073EA50!
//decompilation failure at 14073F0C0!
//decompilation failure at 140A1C6C8!
//decompilation failure at 14073DDE8!
//decompilation failure at 140A1A698!
//decompilation failure at 14073FE38!
//decompilation failure at 140A13270!
//decompilation failure at 140740638!
//decompilation failure at 140A20A20!
//decompilation failure at 140A23220!
//decompilation failure at 14073F0C8!
//decompilation failure at 14073EA58!
//decompilation failure at 140A1C6F0!
//decompilation failure at 14073DDF0!
//decompilation failure at 140A1A6C0!
//decompilation failure at 140A132E0!
//decompilation failure at 14073FE40!
//decompilation failure at 140740640!
//decompilation failure at 140A20A48!
//decompilation failure at 140A23248!
//decompilation failure at 14073F0D0!
//decompilation failure at 14073EA60!
//decompilation failure at 14073DDF8!
//decompilation failure at 140A1C718!
//decompilation failure at 140A1A6E8!
//decompilation failure at 140A13350!
//decompilation failure at 14073FE48!
//decompilation failure at 140740648!
//decompilation failure at 140A23270!
//decompilation failure at 140A20A70!
//decompilation failure at 14073F0D8!
//decompilation failure at 14073EA68!
//decompilation failure at 14073DE00!
//decompilation failure at 140A1C740!
//decompilation failure at 140A1A710!
//decompilation failure at 140740650!
//decompilation failure at 14073FE50!
//decompilation failure at 140A133C0!
//decompilation failure at 140A23298!
//decompilation failure at 140A20A98!
//decompilation failure at 14073F0E0!
//decompilation failure at 14073EA70!
//decompilation failure at 140A1A738!
//decompilation failure at 14073DE08!
//decompilation failure at 140A1C768!
//decompilation failure at 140A13430!
//decompilation failure at 140740658!
//decompilation failure at 14073FE58!
//decompilation failure at 140A232C0!
//decompilation failure at 140A20AC0!
//decompilation failure at 14073EA78!
//decompilation failure at 14073F0E8!
//decompilation failure at 140A1A760!
//decompilation failure at 14073DE10!
//decompilation failure at 140A1C790!
//decompilation failure at 140740660!
//decompilation failure at 14073FE60!
//decompilation failure at 140A134A0!
//decompilation failure at 140A232E8!
//decompilation failure at 140A20AE8!
//decompilation failure at 14073EA80!
//decompilation failure at 14073F0F0!
//decompilation failure at 140A1C7B8!
//decompilation failure at 140A1A788!
//decompilation failure at 14073DE18!
//decompilation failure at 140740668!
//decompilation failure at 140A13510!
//decompilation failure at 14073FE68!
//decompilation failure at 140A23310!
//decompilation failure at 140A20B10!
//decompilation failure at 14073F0F8!
//decompilation failure at 14073EA88!
//decompilation failure at 140A1A7B0!
//decompilation failure at 140A1C7E0!
//decompilation failure at 14073DE20!
//decompilation failure at 140740670!
//decompilation failure at 140A13580!
//decompilation failure at 14073FE70!
//decompilation failure at 140A20B38!
//decompilation failure at 14073EA90!
//decompilation failure at 14073F100!
//decompilation failure at 14073DE28!
//decompilation failure at 140A1C808!
//decompilation failure at 140A1A7D8!
//decompilation failure at 14073FE78!
//decompilation failure at 140A135F0!
//decompilation failure at 140A20B60!
//decompilation failure at 14073F108!
//decompilation failure at 14073EA98!
//decompilation failure at 140A1C830!
//decompilation failure at 140A1A800!
//decompilation failure at 14073DE30!
//decompilation failure at 14073FE80!
//decompilation failure at 140A13660!
//decompilation failure at 140A20B88!
//decompilation failure at 14073F110!
//decompilation failure at 14073EAA0!
//decompilation failure at 140A1A828!
//decompilation failure at 14073DE38!
//decompilation failure at 140A1C858!
//decompilation failure at 140A136D0!
//decompilation failure at 14073FE88!
//decompilation failure at 140A20BB0!
//decompilation failure at 14073EAA8!
//decompilation failure at 14073F118!
//decompilation failure at 14073DE40!
//decompilation failure at 140A1A850!
//decompilation failure at 140A1C880!
//decompilation failure at 14073FE90!
//decompilation failure at 140A13740!
//decompilation failure at 140A20BD8!
//decompilation failure at 14073EAB0!
//decompilation failure at 14073F120!
//decompilation failure at 140A1C8A8!
//decompilation failure at 140A1A878!
//decompilation failure at 14073DE48!
//decompilation failure at 140A137B0!
//decompilation failure at 14073FE98!
//decompilation failure at 140A20C00!
//decompilation failure at 14073F128!
//decompilation failure at 14073EAB8!
//decompilation failure at 14073DE50!
//decompilation failure at 140A1C8D0!
//decompilation failure at 140A1A8A0!
//decompilation failure at 14073FEA0!
//decompilation failure at 140A13820!
//decompilation failure at 140A09A70!
//decompilation failure at 140A20C28!
//decompilation failure at 14073F130!
//decompilation failure at 140A09B80!
//decompilation failure at 14073EAC0!
//decompilation failure at 140A1A8C8!
//decompilation failure at 140A09BD0!
//decompilation failure at 14073DE58!
//decompilation failure at 140A1C8F8!
//decompilation failure at 14073FEA8!
//decompilation failure at 140A09CE0!
//decompilation failure at 140A13890!
//decompilation failure at 140A09DF0!
//decompilation failure at 140A20C50!
//decompilation failure at 14073EAC8!
//decompilation failure at 140A09F00!
//decompilation failure at 14073F138!
//decompilation failure at 140A0A010!
//decompilation failure at 140A1C920!
//decompilation failure at 140A1A8F0!
//decompilation failure at 14073DE60!
//decompilation failure at 14073FEB0!
//decompilation failure at 140A0A120!
//decompilation failure at 140A13900!
//decompilation failure at 140A0A230!
//decompilation failure at 140A20C78!
//decompilation failure at 14073F140!
//decompilation failure at 140A0A340!
//decompilation failure at 14073EAD0!
//decompilation failure at 140A0A450!
//decompilation failure at 140A1C948!
//decompilation failure at 14073DE68!
//decompilation failure at 140A1A918!
//decompilation failure at 140A0A560!
//decompilation failure at 14073FEB8!
//decompilation failure at 140A13970!
//decompilation failure at 140A0A670!
//decompilation failure at 140A20CA0!
//decompilation failure at 140A0A780!
//decompilation failure at 14073F148!
//decompilation failure at 14073EAD8!
//decompilation failure at 140A0A890!
//decompilation failure at 140A1A940!
//decompilation failure at 140A1C970!
//decompilation failure at 14073DE70!
//decompilation failure at 140A0A8E0!
//decompilation failure at 140A139E0!
//decompilation failure at 14073FEC0!
//decompilation failure at 140A0A9F0!
//decompilation failure at 140A20CC8!
//decompilation failure at 140A0AA40!
//decompilation failure at 14073EAE0!
//decompilation failure at 14073F150!
//decompilation failure at 140A0AB50!
//decompilation failure at 140A1A968!
//decompilation failure at 14073DE78!
//decompilation failure at 140A1C998!
//decompilation failure at 14073FEC8!
//decompilation failure at 140A0ABA0!
//decompilation failure at 140A13A50!
//decompilation failure at 140A20CF0!
//decompilation failure at 140A0ABF0!
//decompilation failure at 140A0AC40!
//decompilation failure at 14073EAE8!
//decompilation failure at 14073F158!
//decompilation failure at 14073DE80!
//decompilation failure at 140A0AD50!
//decompilation failure at 140A1A990!
//decompilation failure at 140A1C9C0!
//decompilation failure at 14073FED0!
//decompilation failure at 140A0ADA0!
//decompilation failure at 140A13AC0!
//decompilation failure at 140A0ADF0!
//decompilation failure at 140A20D18!
//decompilation failure at 14073F160!
//decompilation failure at 14073EAF0!
//decompilation failure at 140A0AE40!
//decompilation failure at 140A1C9E8!
//decompilation failure at 140A0AE90!
//decompilation failure at 140A1A9B8!
//decompilation failure at 14073DE88!
//decompilation failure at 14073FED8!
//decompilation failure at 140A0AEE0!
//decompilation failure at 140A13B30!
//decompilation failure at 140A0AF30!
//decompilation failure at 140A20D40!
//decompilation failure at 14073F168!
//decompilation failure at 140A0B040!
//decompilation failure at 14073EAF8!
//decompilation failure at 14073DE90!
//decompilation failure at 140A0B090!
//decompilation failure at 140A1A9E0!
//decompilation failure at 140A1CA10!
//decompilation failure at 14073FEE0!
//decompilation failure at 140A0D620!
//decompilation failure at 140A20D68!
//decompilation failure at 14073EB00!
//decompilation failure at 14073F170!
//decompilation failure at 140A1CA38!
//decompilation failure at 140A1AA08!
//decompilation failure at 14073FEE8!
//decompilation failure at 140A20D90!
//decompilation failure at 14073F178!
//decompilation failure at 14073EB08!
//decompilation failure at 140A1AA30!
//decompilation failure at 140A1CA60!
//decompilation failure at 14073FEF0!
//decompilation failure at 140A20DB8!
//decompilation failure at 14073EB10!
//decompilation failure at 14073F180!
//decompilation failure at 140A1CA88!
//decompilation failure at 140A1AA58!
//decompilation failure at 14073FEF8!
//decompilation failure at 140A20DE0!
//decompilation failure at 14073F188!
//decompilation failure at 14073EB18!
//decompilation failure at 140A1AA80!
//decompilation failure at 140A1CAB0!
//decompilation failure at 14073FF00!
//decompilation failure at 140A20E08!
//decompilation failure at 14073EB20!
//decompilation failure at 14073F190!
//decompilation failure at 140A1AAA8!
//decompilation failure at 140A1CAD8!
//decompilation failure at 14073FF08!
//decompilation failure at 140A20E30!
//decompilation failure at 14073EB28!
//decompilation failure at 14073F198!
//decompilation failure at 140A1AAD0!
//decompilation failure at 140A1CB00!
//decompilation failure at 14073FF10!
//decompilation failure at 140A20E58!
//decompilation failure at 14073EB30!
//decompilation failure at 14073F1A0!
//decompilation failure at 140A1AAF8!
//decompilation failure at 140A1CB28!
//decompilation failure at 14073D758!
//decompilation failure at 14073FF18!
//decompilation failure at 140A0D690!
//decompilation failure at 140A20E80!
//decompilation failure at 14073EB38!
//decompilation failure at 14073F1A8!
//decompilation failure at 140A1AB20!
//decompilation failure at 140A1CB50!
//decompilation failure at 14073D760!
//decompilation failure at 14073FF20!
//decompilation failure at 140A0D700!
//decompilation failure at 140A20EA8!
//decompilation failure at 14073EB40!
//decompilation failure at 14073F1B0!
//decompilation failure at 140A1CB78!
//decompilation failure at 140A1AB48!
//decompilation failure at 14073FF28!
//decompilation failure at 14073D768!
//decompilation failure at 140A20ED0!
//decompilation failure at 140A0D770!
//decompilation failure at 14073F1B8!
//decompilation failure at 14073EB48!
//decompilation failure at 140A1CBA0!
//decompilation failure at 140A1AB70!
//decompilation failure at 14073FF30!
//decompilation failure at 14073D770!
//decompilation failure at 140A20EF8!
//decompilation failure at 14073F1C0!
//decompilation failure at 14073EB50!
//decompilation failure at 140A0D7E0!
//decompilation failure at 140A1CBC8!
//decompilation failure at 140A1AB98!
//decompilation failure at 14073FF38!
//decompilation failure at 140A20F20!
//decompilation failure at 14073D778!
//decompilation failure at 14073F1C8!
//decompilation failure at 14073EB58!
//decompilation failure at 140A0D850!
//decompilation failure at 140A1ABC0!
//decompilation failure at 140A1CBF0!
//decompilation failure at 14073FF40!
//decompilation failure at 14073D780!
//decompilation failure at 140A20F48!
//decompilation failure at 14073EB60!
//decompilation failure at 14073F1D0!
//decompilation failure at 140A0D8C0!
//decompilation failure at 140A1ABE8!
//decompilation failure at 140A1CC18!
//decompilation failure at 14073FF48!
//decompilation failure at 140A20F70!
//decompilation failure at 14073EB68!
//decompilation failure at 14073F1D8!
//decompilation failure at 14073D788!
//decompilation failure at 140A0D930!
//decompilation failure at 140A1AC10!
//decompilation failure at 140A1CC40!
//decompilation failure at 14073FF50!
//decompilation failure at 140A20F98!
//decompilation failure at 14073D790!
//decompilation failure at 14073EB70!
//decompilation failure at 14073F1E0!
//decompilation failure at 140A1CC68!
//decompilation failure at 140A1AC38!
//decompilation failure at 140A0D9A0!
//decompilation failure at 14073FF58!
//decompilation failure at 140A20FC0!
//decompilation failure at 14073F1E8!
//decompilation failure at 14073EB78!
//decompilation failure at 14073D798!
//decompilation failure at 140A1CC90!
//decompilation failure at 140A0DA10!
//decompilation failure at 140A1AC60!
//decompilation failure at 14073FF60!
//decompilation failure at 140A20FE8!
//decompilation failure at 14073D7A0!
//decompilation failure at 14073F1F0!
//decompilation failure at 14073EB80!
//decompilation failure at 140A1CCB8!
//decompilation failure at 140A0DA80!
//decompilation failure at 140A1AC88!
//decompilation failure at 14073FF68!
//decompilation failure at 140A21010!
//decompilation failure at 14073F1F8!
//decompilation failure at 14073D7A8!
//decompilation failure at 14073EB88!
//decompilation failure at 140A1ACB0!
//decompilation failure at 140A0DAF0!
//decompilation failure at 140A1CCE0!
//decompilation failure at 14073FF70!
//decompilation failure at 140A21038!
//decompilation failure at 14073EB90!
//decompilation failure at 14073D7B0!
//decompilation failure at 14073F200!
//decompilation failure at 140A1CD08!
//decompilation failure at 140A1ACD8!
//decompilation failure at 140A0DB60!
//decompilation failure at 14073FF78!
//decompilation failure at 140A21060!
//decompilation failure at 14073F208!
//decompilation failure at 14073EB98!
//decompilation failure at 14073D7B8!
//decompilation failure at 140A1AD00!
//decompilation failure at 140A1CD30!
//decompilation failure at 140A0DBD0!
//decompilation failure at 14073FF80!
//decompilation failure at 140A21088!
//decompilation failure at 14073F210!
//decompilation failure at 14073EBA0!
//decompilation failure at 14073D7C0!
//decompilation failure at 140A1AD28!
//decompilation failure at 140A1CD58!
//decompilation failure at 140A0DC40!
//decompilation failure at 14073FF88!
//decompilation failure at 140A210B0!
//decompilation failure at 14073EBA8!
//decompilation failure at 14073F218!
//decompilation failure at 14073D7C8!
//decompilation failure at 140A1AD50!
//decompilation failure at 140A1CD80!
//decompilation failure at 140A0DCB0!
//decompilation failure at 14073FF90!
//decompilation failure at 140A210D8!
//decompilation failure at 14073EBB0!
//decompilation failure at 14073F220!
//decompilation failure at 14073D7D0!
//decompilation failure at 140A0DD20!
//decompilation failure at 140A1AD78!
//decompilation failure at 140A1CDA8!
//decompilation failure at 14073FF98!
//decompilation failure at 140A21100!
//decompilation failure at 14073D7D8!
//decompilation failure at 14073EBB8!
//decompilation failure at 14073F228!
//decompilation failure at 140A1CDD0!
//decompilation failure at 140A0DD90!
//decompilation failure at 140A1ADA0!
//decompilation failure at 14073FFA0!
//decompilation failure at 140A21128!
//decompilation failure at 14073F230!
//decompilation failure at 14073D7E0!
//decompilation failure at 14073EBC0!
//decompilation failure at 140A1ADC8!
//decompilation failure at 140A1CDF8!
//decompilation failure at 140A0DE00!
//decompilation failure at 140A13BA0!
//decompilation failure at 140A0B0E0!
//decompilation failure at 14073FFA8!
//decompilation failure at 140A0B1F0!
//decompilation failure at 140A21150!
//decompilation failure at 14073EBC8!
//decompilation failure at 140A0B300!
//decompilation failure at 14073F238!
//decompilation failure at 14073D7E8!
//decompilation failure at 14073DE98!
//decompilation failure at 140A1CE20!
//decompilation failure at 140A13C10!
//decompilation failure at 140A0B410!
//decompilation failure at 140A0DE70!
//decompilation failure at 140A1ADF0!
//decompilation failure at 14073FFB0!
//decompilation failure at 140A0B520!
//decompilation failure at 140A0B630!
//decompilation failure at 140A21178!
//decompilation failure at 14073DEA0!
//decompilation failure at 14073F240!
//decompilation failure at 140A0B740!
//decompilation failure at 14073D7F0!
//decompilation failure at 14073EBD0!
//decompilation failure at 140A0B850!
//decompilation failure at 140A1AE18!
//decompilation failure at 140A13C80!
//decompilation failure at 140A0DEE0!
//decompilation failure at 140A1CE48!
//decompilation failure at 14073FFB8!
//decompilation failure at 140A0B960!
//decompilation failure at 140A211A0!
//decompilation failure at 140A0BA70!
//decompilation failure at 140A0BB80!
//decompilation failure at 14073EBD8!
//decompilation failure at 14073DEA8!
//decompilation failure at 14073D7F8!
//decompilation failure at 14073F248!
//decompilation failure at 140A0BC90!
//decompilation failure at 140A1AE40!
//decompilation failure at 140A1CE70!
//decompilation failure at 140A0DF50!
//decompilation failure at 140A13CF0!
//decompilation failure at 14073FFC0!
//decompilation failure at 140A0BDA0!
//decompilation failure at 140A0BEB0!
//decompilation failure at 140A211C8!
//decompilation failure at 140A0BFC0!
//decompilation failure at 14073EBE0!
//decompilation failure at 14073F250!
//decompilation failure at 14073D800!
//decompilation failure at 14073DEB0!
//decompilation failure at 140A0C0D0!
//decompilation failure at 140A13D60!
//decompilation failure at 140A1AE68!
//decompilation failure at 140A1CE98!
//decompilation failure at 140A0DFC0!
//decompilation failure at 140A0C1E0!
//decompilation failure at 14073FFC8!
//decompilation failure at 140A0C2F0!
//decompilation failure at 140A211F0!
//decompilation failure at 14073DEB8!
//decompilation failure at 140A0C400!
//decompilation failure at 14073EBE8!
//decompilation failure at 14073F258!
//decompilation failure at 14073D808!
//decompilation failure at 140A0E030!
//decompilation failure at 140A0C510!
//decompilation failure at 140A1CEC0!
//decompilation failure at 140A1AE90!
//decompilation failure at 140A13DD0!
//decompilation failure at 14073FFD0!
//decompilation failure at 140A0C620!
//decompilation failure at 140A21218!
//decompilation failure at 140A0C730!
//decompilation failure at 14073D810!
//decompilation failure at 140A0C840!
//decompilation failure at 14073F260!
//decompilation failure at 14073EBF0!
//decompilation failure at 14073DEC0!
//decompilation failure at 140A0D5F8!
//decompilation failure at 140A1AEB8!
//decompilation failure at 140A1CEE8!
//decompilation failure at 140A13E40!
//decompilation failure at 140A0E0A0!
//decompilation failure at 14073FFD8!
//decompilation failure at 140A21240!
//decompilation failure at 14073E3F8!
//decompilation failure at 14073EBF8!
//decompilation failure at 14073F268!
//decompilation failure at 14073DEC8!
//decompilation failure at 14073D818!
//decompilation failure at 140A0E110!
//decompilation failure at 140A186E0!
//decompilation failure at 140A1AEE0!
//decompilation failure at 140A1CF10!
//decompilation failure at 140A13EB0!
//decompilation failure at 14073FFE0!
//decompilation failure at 140A21268!
//decompilation failure at 14073D820!
//decompilation failure at 14073E400!
//decompilation failure at 14073F270!
//decompilation failure at 14073EC00!
//decompilation failure at 14073DED0!
//decompilation failure at 140A18708!
//decompilation failure at 140A1CF38!
//decompilation failure at 140A13F20!
//decompilation failure at 140A1AF08!
//decompilation failure at 140A0E180!
//decompilation failure at 14073FFE8!
//decompilation failure at 140A21290!
//decompilation failure at 14073E408!
//decompilation failure at 14073F278!
//decompilation failure at 14073DED8!
//decompilation failure at 14073EC08!
//decompilation failure at 14073D828!
//decompilation failure at 140A1CF60!
//decompilation failure at 140A18730!
//decompilation failure at 140A0E1F0!
//decompilation failure at 140A1AF30!
//decompilation failure at 140A13F90!
//decompilation failure at 14073FFF0!
//decompilation failure at 140A212B8!
//decompilation failure at 14073E410!
//decompilation failure at 14073F280!
//decompilation failure at 14073D830!
//decompilation failure at 14073EC10!
//decompilation failure at 14073DEE0!
//decompilation failure at 140A1CF88!
//decompilation failure at 140A1AF58!
//decompilation failure at 140A18758!
//decompilation failure at 140A0E260!
//decompilation failure at 140A14000!
//decompilation failure at 14073FFF8!
//decompilation failure at 140A212E0!
//decompilation failure at 14073F288!
//decompilation failure at 14073EC18!
//decompilation failure at 14073E418!
//decompilation failure at 14073D838!
//decompilation failure at 14073DEE8!
//decompilation failure at 140A0E2D0!
//decompilation failure at 140A14070!
//decompilation failure at 140A18780!
//decompilation failure at 140A1AF80!
//decompilation failure at 140A1CFB0!
//decompilation failure at 140740000!
//decompilation failure at 140A21308!
//decompilation failure at 14073D840!
//decompilation failure at 14073DEF0!
//decompilation failure at 14073E420!
//decompilation failure at 14073EC20!
//decompilation failure at 14073F290!
//decompilation failure at 140A0E340!
//decompilation failure at 140A187A8!
//decompilation failure at 140A140E0!
//decompilation failure at 140A1CFD8!
//decompilation failure at 140A1AFA8!
//decompilation failure at 140740008!
//decompilation failure at 140A21330!
//decompilation failure at 14073E428!
//decompilation failure at 14073D848!
//decompilation failure at 14073DEF8!
//decompilation failure at 14073F298!
//decompilation failure at 14073EC28!
//decompilation failure at 140A187D0!
//decompilation failure at 140A1D000!
//decompilation failure at 140A1AFD0!
//decompilation failure at 140A0E3B0!
//decompilation failure at 140A14150!
//decompilation failure at 140740010!
//decompilation failure at 140A21358!
//decompilation failure at 14073E430!
//decompilation failure at 14073F2A0!
//decompilation failure at 14073EC30!
//decompilation failure at 14073D850!
//decompilation failure at 14073DF00!
//decompilation failure at 140A187F8!
//decompilation failure at 140A1AFF8!
//decompilation failure at 140A141C0!
//decompilation failure at 140A1D028!
//decompilation failure at 140A0E420!
//decompilation failure at 140740018!
//decompilation failure at 140A21380!
//decompilation failure at 14073DF08!
//decompilation failure at 14073E438!
//decompilation failure at 14073EC38!
//decompilation failure at 14073F2A8!
//decompilation failure at 14073D858!
//decompilation failure at 140A1D050!
//decompilation failure at 140A14230!
//decompilation failure at 140A18820!
//decompilation failure at 140A1B020!
//decompilation failure at 140740020!
//decompilation failure at 140A0E490!
//decompilation failure at 140A213A8!
//decompilation failure at 14073F2B0!
//decompilation failure at 14073DF10!
//decompilation failure at 14073E440!
//decompilation failure at 14073EC40!
//decompilation failure at 140A1D078!
//decompilation failure at 140A18848!
//decompilation failure at 14073D860!
//decompilation failure at 140A142A0!
//decompilation failure at 140A1B048!
//decompilation failure at 140A0E500!
//decompilation failure at 140740028!
//decompilation failure at 140A213D0!
//decompilation failure at 14073F2B8!
//decompilation failure at 14073E448!
//decompilation failure at 14073DF18!
//decompilation failure at 14073EC48!
//decompilation failure at 140A1B070!
//decompilation failure at 140A18870!
//decompilation failure at 14073D868!
//decompilation failure at 140A1D0A0!
//decompilation failure at 140A14310!
//decompilation failure at 140740030!
//decompilation failure at 140A0E570!
//decompilation failure at 140A213F8!
//decompilation failure at 14073EC50!
//decompilation failure at 14073E450!
//decompilation failure at 14073F2C0!
//decompilation failure at 14073DF20!
//decompilation failure at 140A1B098!
//decompilation failure at 14073D870!
//decompilation failure at 140A1D0C8!
//decompilation failure at 140A14380!
//decompilation failure at 140A18898!
//decompilation failure at 140A0E5E0!
//decompilation failure at 140740038!
//decompilation failure at 140A21420!
//decompilation failure at 14073EC58!
//decompilation failure at 14073F2C8!
//decompilation failure at 14073DF28!
//decompilation failure at 14073E458!
//decompilation failure at 14073D878!
//decompilation failure at 140A188C0!
//decompilation failure at 140A143F0!
//decompilation failure at 140A1B0C0!
//decompilation failure at 140A1D0F0!
//decompilation failure at 140A0E650!
//decompilation failure at 140740040!
//decompilation failure at 140A21448!
//decompilation failure at 14073DF30!
//decompilation failure at 14073E460!
//decompilation failure at 14073EC60!
//decompilation failure at 14073F2D0!
//decompilation failure at 14073D880!
//decompilation failure at 140A188E8!
//decompilation failure at 140A1B0E8!
//decompilation failure at 140A1D118!
//decompilation failure at 140A14460!
//decompilation failure at 140A0E6C0!
//decompilation failure at 140740048!
//decompilation failure at 140A21470!
//decompilation failure at 14073E468!
//decompilation failure at 14073EC68!
//decompilation failure at 14073F2D8!
//decompilation failure at 14073DF38!
//decompilation failure at 14073D888!
//decompilation failure at 140A1B110!
//decompilation failure at 140A18910!
//decompilation failure at 140A1D140!
//decompilation failure at 140A144D0!
//decompilation failure at 140A0E730!
//decompilation failure at 140740050!
//decompilation failure at 140A21498!
//decompilation failure at 140A1EC98!
//decompilation failure at 14073EC70!
//decompilation failure at 14073E470!
//decompilation failure at 14073F2E0!
//decompilation failure at 14073DF40!
//decompilation failure at 140A18938!
//decompilation failure at 140A14540!
//decompilation failure at 140A1B138!
//decompilation failure at 14073D890!
//decompilation failure at 140A1D168!
//decompilation failure at 140740058!
//decompilation failure at 140A0E7A0!
//decompilation failure at 14073F858!
//decompilation failure at 140A1ECC0!
//decompilation failure at 140A214C0!
//decompilation failure at 14073E478!
//decompilation failure at 14073DF48!
//decompilation failure at 14073EC78!
//decompilation failure at 14073F2E8!
//decompilation failure at 140A1B160!
//decompilation failure at 14073D898!
//decompilation failure at 140A145B0!
//decompilation failure at 140A18960!
//decompilation failure at 140A1D190!
//decompilation failure at 140A0E810!
//decompilation failure at 14073F860!
//decompilation failure at 140740060!
//decompilation failure at 140A214E8!
//decompilation failure at 140A1ECE8!
//decompilation failure at 14073EC80!
//decompilation failure at 14073DF50!
//decompilation failure at 14073E480!
//decompilation failure at 14073F2F0!
//decompilation failure at 14073D8A0!
//decompilation failure at 140A14620!
//decompilation failure at 140A1D1B8!
//decompilation failure at 140A1B188!
//decompilation failure at 140A18988!
//decompilation failure at 140740068!
//decompilation failure at 140A0E880!
//decompilation failure at 14073F868!
//decompilation failure at 140A21510!
//decompilation failure at 140A1ED10!
//decompilation failure at 14073DF58!
//decompilation failure at 14073F2F8!
//decompilation failure at 14073EC88!
//decompilation failure at 14073E488!
//decompilation failure at 140A1B1B0!
//decompilation failure at 140A1D1E0!
//decompilation failure at 14073D8A8!
//decompilation failure at 140A189B0!
//decompilation failure at 140A14690!
//decompilation failure at 14073F870!
//decompilation failure at 140740070!
//decompilation failure at 140A0E8F0!
//decompilation failure at 140A1ED38!
//decompilation failure at 140A21538!
//decompilation failure at 14073EC90!
//decompilation failure at 14073F300!
//decompilation failure at 14073E490!
//decompilation failure at 14073DF60!
//decompilation failure at 140A1D208!
//decompilation failure at 140A189D8!
//decompilation failure at 14073D8B0!
//decompilation failure at 140A14700!
//decompilation failure at 140A1B1D8!
//decompilation failure at 14073F878!
//decompilation failure at 140740078!
//decompilation failure at 140A0E960!
//decompilation failure at 140A1ED60!
//decompilation failure at 140A21560!
//decompilation failure at 14073F308!
//decompilation failure at 14073E498!
//decompilation failure at 14073DF68!
//decompilation failure at 14073EC98!
//decompilation failure at 140A18A00!
//decompilation failure at 140A1B200!
//decompilation failure at 140A1D230!
//decompilation failure at 140A14770!
//decompilation failure at 14073D8B8!
//decompilation failure at 14073F880!
//decompilation failure at 140740080!
//decompilation failure at 140A0E9D0!
//decompilation failure at 140A21588!
//decompilation failure at 140A1ED88!
//decompilation failure at 14073E4A0!
//decompilation failure at 14073ECA0!
//decompilation failure at 14073F310!
//decompilation failure at 14073DF70!
//decompilation failure at 140A1B228!
//decompilation failure at 140A18A28!
//decompilation failure at 140A147E0!
//decompilation failure at 140A1D258!
//decompilation failure at 14073D8C0!
//decompilation failure at 140740088!
//decompilation failure at 140A0EA40!
//decompilation failure at 14073F888!
//decompilation failure at 140A1EDB0!
//decompilation failure at 140A215B0!
//decompilation failure at 14073ECA8!
//decompilation failure at 14073E4A8!
//decompilation failure at 14073DF78!
//decompilation failure at 14073F318!
//decompilation failure at 14073D8C8!
//decompilation failure at 140A1D280!
//decompilation failure at 140A18A50!
//decompilation failure at 140A14850!
//decompilation failure at 140A1B250!
//decompilation failure at 14073F890!
//decompilation failure at 140A0EAB0!
//decompilation failure at 140740090!
//decompilation failure at 140A1EDD8!
//decompilation failure at 140A215D8!
//decompilation failure at 14073F320!
//decompilation failure at 14073E4B0!
//decompilation failure at 14073DF80!
//decompilation failure at 14073ECB0!
//decompilation failure at 140A1B278!
//decompilation failure at 140A148C0!
//decompilation failure at 140A18A78!
//decompilation failure at 14073D8D0!
//decompilation failure at 140A1D2A8!
//decompilation failure at 140740098!
//decompilation failure at 14073F898!
//decompilation failure at 140A0EB20!
//decompilation failure at 140A1EE00!
//decompilation failure at 140A21600!
//decompilation failure at 14073ECB8!
//decompilation failure at 14073DF88!
//decompilation failure at 14073E4B8!
//decompilation failure at 14073F328!
//decompilation failure at 140A18AA0!
//decompilation failure at 140A14930!
//decompilation failure at 14073D8D8!
//decompilation failure at 140A1B2A0!
//decompilation failure at 140A1D2D0!
//decompilation failure at 14073F8A0!
//decompilation failure at 1407400A0!
//decompilation failure at 140A0EB90!
//decompilation failure at 140A1EE28!
//decompilation failure at 140A21628!
//decompilation failure at 14073DF90!
//decompilation failure at 14073E4C0!
//decompilation failure at 14073ECC0!
//decompilation failure at 14073F330!
//decompilation failure at 140A1B2C8!
//decompilation failure at 140A149A0!
//decompilation failure at 140A18AC8!
//decompilation failure at 14073D8E0!
//decompilation failure at 140A1D2F8!
//decompilation failure at 14073F8A8!
//decompilation failure at 1407400A8!
//decompilation failure at 140A0EC00!
//decompilation failure at 140A21650!
//decompilation failure at 140A1EE50!
//decompilation failure at 14073DF98!
//decompilation failure at 14073ECC8!
//decompilation failure at 14073E4C8!
//decompilation failure at 14073F338!
//decompilation failure at 140A18AF0!
//decompilation failure at 140A14A10!
//decompilation failure at 140A1D320!
//decompilation failure at 14073D8E8!
//decompilation failure at 140A1B2F0!
//decompilation failure at 1407400B0!
//decompilation failure at 140A0EC70!
//decompilation failure at 14073F8B0!
//decompilation failure at 140A21678!
//decompilation failure at 140A1EE78!
//decompilation failure at 14073E4D0!
//decompilation failure at 14073DFA0!
//decompilation failure at 14073F340!
//decompilation failure at 14073ECD0!
//decompilation failure at 140A1B318!
//decompilation failure at 140A14A80!
//decompilation failure at 14073D8F0!
//decompilation failure at 140A1D348!
//decompilation failure at 140A18B18!
//decompilation failure at 14073F8B8!
//decompilation failure at 1407400B8!
//decompilation failure at 140A0ECE0!
//decompilation failure at 140A216A0!
//decompilation failure at 140A1EEA0!
//decompilation failure at 14073DFA8!
//decompilation failure at 14073ECD8!
//decompilation failure at 14073F348!
//decompilation failure at 14073E4D8!
//decompilation failure at 14073D8F8!
//decompilation failure at 140A14AF0!
//decompilation failure at 140A1B340!
//decompilation failure at 140A18B40!
//decompilation failure at 140A1D370!
//decompilation failure at 1407400C0!
//decompilation failure at 14073F8C0!
//decompilation failure at 140A0ED50!
//decompilation failure at 140A216C8!
//decompilation failure at 140A1EEC8!
//decompilation failure at 14073ECE0!
//decompilation failure at 14073DFB0!
//decompilation failure at 14073E4E0!
//decompilation failure at 14073F350!
//decompilation failure at 140A18B68!
//decompilation failure at 140A1D398!
//decompilation failure at 140A14B60!
//decompilation failure at 140A1B368!
//decompilation failure at 14073D900!
//decompilation failure at 1407400C8!
//decompilation failure at 140A0EDC0!
//decompilation failure at 14073F8C8!
//decompilation failure at 140A216F0!
//decompilation failure at 140A1EEF0!
//decompilation failure at 14073E4E8!
//decompilation failure at 14073F358!
//decompilation failure at 14073DFB8!
//decompilation failure at 14073ECE8!
//decompilation failure at 140A1B390!
//decompilation failure at 140A14BD0!
//decompilation failure at 14073D908!
//decompilation failure at 140A1D3C0!
//decompilation failure at 140A18B90!
//decompilation failure at 1407400D0!
//decompilation failure at 140A0EE30!
//decompilation failure at 14073F8D0!
//decompilation failure at 140A21718!
//decompilation failure at 140A1EF18!
//decompilation failure at 14073ECF0!
//decompilation failure at 14073DFC0!
//decompilation failure at 14073F360!
//decompilation failure at 14073E4F0!
//decompilation failure at 140A18BB8!
//decompilation failure at 140A14C40!
//decompilation failure at 14073D910!
//decompilation failure at 140A1D3E8!
//decompilation failure at 140A1B3B8!
//decompilation failure at 140A0EEA0!
//decompilation failure at 1407400D8!
//decompilation failure at 14073F8D8!
//decompilation failure at 140A21740!
//decompilation failure at 140A1EF40!
//decompilation failure at 14073E4F8!
//decompilation failure at 14073DFC8!
//decompilation failure at 14073F368!
//decompilation failure at 14073ECF8!
//decompilation failure at 140A18BE0!
//decompilation failure at 140A1D410!
//decompilation failure at 14073D918!
//decompilation failure at 140A1B3E0!
//decompilation failure at 140A14CB0!
//decompilation failure at 1407400E0!
//decompilation failure at 14073F8E0!
//decompilation failure at 140A0EF10!
//decompilation failure at 140A21768!
//decompilation failure at 140A1EF68!
//decompilation failure at 14073E500!
//decompilation failure at 14073F370!
//decompilation failure at 14073ED00!
//decompilation failure at 14073DFD0!
//decompilation failure at 140A1B408!
//decompilation failure at 140A14D20!
//decompilation failure at 140A1D438!
//decompilation failure at 140A18C08!
//decompilation failure at 14073D920!
//decompilation failure at 1407400E8!
//decompilation failure at 14073F8E8!
//decompilation failure at 140A0EF80!
//decompilation failure at 140A21790!
//decompilation failure at 140A1EF90!
//decompilation failure at 14073ED08!
//decompilation failure at 14073DFD8!
//decompilation failure at 14073F378!
//decompilation failure at 14073E508!
//decompilation failure at 140A18C30!
//decompilation failure at 140A14D90!
//decompilation failure at 140A1D460!
//decompilation failure at 140A1B430!
//decompilation failure at 14073D928!
//decompilation failure at 1407400F0!
//decompilation failure at 140A0EFF0!
//decompilation failure at 14073F8F0!
//decompilation failure at 140A217B8!
//decompilation failure at 140A1EFB8!
//decompilation failure at 14073E510!
//decompilation failure at 14073DFE0!
//decompilation failure at 14073F380!
//decompilation failure at 14073ED10!
//decompilation failure at 140A18C58!
//decompilation failure at 14073D930!
//decompilation failure at 140A1D488!
//decompilation failure at 140A1B458!
//decompilation failure at 140A14E00!
//decompilation failure at 140A0F060!
//decompilation failure at 1407400F8!
//decompilation failure at 14073F8F8!
//decompilation failure at 140A1EFE0!
//decompilation failure at 140A217E0!
//decompilation failure at 14073E518!
//decompilation failure at 14073F388!
//decompilation failure at 14073ED18!
//decompilation failure at 14073DFE8!
//decompilation failure at 140A1D4B0!
//decompilation failure at 14073D938!
//decompilation failure at 140A1B480!
//decompilation failure at 140A18C80!
//decompilation failure at 140A14E70!
//decompilation failure at 14073F900!
//decompilation failure at 140740100!
//decompilation failure at 140A0F0D0!
//decompilation failure at 140A21808!
//decompilation failure at 140A1F008!
//decompilation failure at 14073F390!
//decompilation failure at 14073ED20!
//decompilation failure at 14073E520!
//decompilation failure at 14073DFF0!
//decompilation failure at 140A18CA8!
//decompilation failure at 140A1D4D8!
//decompilation failure at 140A14EE0!
//decompilation failure at 14073D940!
//decompilation failure at 140A1B4A8!
//decompilation failure at 140740108!
//decompilation failure at 14073F908!
//decompilation failure at 140A0F140!
//decompilation failure at 140A1F030!
//decompilation failure at 140A21830!
//decompilation failure at 14073F398!
//decompilation failure at 14073E528!
//decompilation failure at 14073DFF8!
//decompilation failure at 14073ED28!
//decompilation failure at 140A1B4D0!
//decompilation failure at 14073D948!
//decompilation failure at 140A18CD0!
//decompilation failure at 140A14F50!
//decompilation failure at 140A1D500!
//decompilation failure at 14073F910!
//decompilation failure at 140A0F1B0!
//decompilation failure at 140740110!
//decompilation failure at 140A1F058!
//decompilation failure at 140A21858!
//decompilation failure at 14073ED30!
//decompilation failure at 14073E530!
//decompilation failure at 14073E000!
//decompilation failure at 14073F3A0!
//decompilation failure at 140A1B4F8!
//decompilation failure at 14073D950!
//decompilation failure at 140A18CF8!
//decompilation failure at 140A14FC0!
//decompilation failure at 140A1D528!
//decompilation failure at 14073F918!
//decompilation failure at 140A0F220!
//decompilation failure at 140740118!
//decompilation failure at 140A1F080!
//decompilation failure at 140A21880!
//decompilation failure at 14073ED38!
//decompilation failure at 14073E538!
//decompilation failure at 14073E008!
//decompilation failure at 14073F3A8!
//decompilation failure at 140A1B520!
//decompilation failure at 140A18D20!
//decompilation failure at 140A15030!
//decompilation failure at 140A1D550!
//decompilation failure at 14073D958!
//decompilation failure at 140A0F290!
//decompilation failure at 14073F920!
//decompilation failure at 140740120!
//decompilation failure at 140A218A8!
//decompilation failure at 140A1F0A8!
//decompilation failure at 14073E540!
//decompilation failure at 14073E010!
//decompilation failure at 14073ED40!
//decompilation failure at 14073F3B0!
//decompilation failure at 140A18D48!
//decompilation failure at 140A150A0!
//decompilation failure at 140A1B548!
//decompilation failure at 140A1D578!
//decompilation failure at 140740128!
//decompilation failure at 14073D960!
//decompilation failure at 14073F928!
//decompilation failure at 140A1F0D0!
//decompilation failure at 140A0F300!
//decompilation failure at 140A218D0!
//decompilation failure at 14073E548!
//decompilation failure at 14073E018!
//decompilation failure at 14073ED48!
//decompilation failure at 14073F3B8!
//decompilation failure at 140A15110!
//decompilation failure at 140A18D70!
//decompilation failure at 140A1D5A0!
//decompilation failure at 140A1B570!
//decompilation failure at 14073F930!
//decompilation failure at 14073D968!
//decompilation failure at 140740130!
//decompilation failure at 140A1F0F8!
//decompilation failure at 140A218F8!
//decompilation failure at 140A0F370!
//decompilation failure at 14073E020!
//decompilation failure at 14073E550!
//decompilation failure at 14073F3C0!
//decompilation failure at 14073ED50!
//decompilation failure at 140A15180!
//decompilation failure at 140A18D98!
//decompilation failure at 140A1D5C8!
//decompilation failure at 140A1B598!
//decompilation failure at 14073F938!
//decompilation failure at 140740138!
//decompilation failure at 14073D970!
//decompilation failure at 140A1F120!
//decompilation failure at 140A21920!
//decompilation failure at 140A0F3E0!
//decompilation failure at 14073E028!
//decompilation failure at 14073E558!
//decompilation failure at 14073F3C8!
//decompilation failure at 14073ED58!
//decompilation failure at 140A1D5F0!
//decompilation failure at 140A18DC0!
//decompilation failure at 140A151F0!
//decompilation failure at 140A1B5C0!
//decompilation failure at 14073F940!
//decompilation failure at 140740140!
//decompilation failure at 14073D978!
//decompilation failure at 140A1F148!
//decompilation failure at 140A21948!
//decompilation failure at 140A0F450!
//decompilation failure at 14073F3D0!
//decompilation failure at 14073E560!
//decompilation failure at 14073E030!
//decompilation failure at 14073ED60!
//decompilation failure at 140A1D618!
//decompilation failure at 140A18DE8!
//decompilation failure at 140A15260!
//decompilation failure at 140A1B5E8!
//decompilation failure at 14073F948!
//decompilation failure at 140740148!
//decompilation failure at 14073D980!
//decompilation failure at 140A21970!
//decompilation failure at 140A0F4C0!
//decompilation failure at 140A1F170!
//decompilation failure at 14073F3D8!
//decompilation failure at 14073E568!
//decompilation failure at 14073E038!
//decompilation failure at 14073ED68!
//decompilation failure at 140A1B610!
//decompilation failure at 140A1D640!
//decompilation failure at 140A18E10!
//decompilation failure at 140A152D0!
//decompilation failure at 140740150!
//decompilation failure at 14073D988!
//decompilation failure at 14073F950!
//decompilation failure at 140A0F530!
//decompilation failure at 140A1F198!
//decompilation failure at 140A21998!
//decompilation failure at 14073F3E0!
//decompilation failure at 14073ED70!
//decompilation failure at 14073E570!
//decompilation failure at 14073E040!
//decompilation failure at 140A1D668!
//decompilation failure at 140A18E38!
//decompilation failure at 140A15340!
//decompilation failure at 140A1B638!
//decompilation failure at 14073D990!
//decompilation failure at 14073F958!
//decompilation failure at 140740158!
//decompilation failure at 140A0F5A0!
//decompilation failure at 140A219C0!
//decompilation failure at 140A1F1C0!
//decompilation failure at 14073F3E8!
//decompilation failure at 14073E578!
//decompilation failure at 14073E048!
//decompilation failure at 14073ED78!
//decompilation failure at 140A153B0!
//decompilation failure at 140A18E60!
//decompilation failure at 140A1B660!
//decompilation failure at 140A1D690!
//decompilation failure at 14073D998!
//decompilation failure at 140740160!
//decompilation failure at 14073F960!
//decompilation failure at 140A219E8!
//decompilation failure at 140A0F610!
//decompilation failure at 140A1F1E8!
//decompilation failure at 14073E050!
//decompilation failure at 14073E580!
//decompilation failure at 14073ED80!
//decompilation failure at 14073F3F0!
//decompilation failure at 140A1D6B8!
//decompilation failure at 140A18E88!
//decompilation failure at 140A15420!
//decompilation failure at 140A1B688!
//decompilation failure at 140740168!
//decompilation failure at 14073D9A0!
//decompilation failure at 14073F968!
//decompilation failure at 140A21A10!
//decompilation failure at 140A0F680!
//decompilation failure at 140A1F210!
//decompilation failure at 14073F3F8!
//decompilation failure at 14073E588!
//decompilation failure at 14073E058!
//decompilation failure at 14073ED88!
//decompilation failure at 140A1B6B0!
//decompilation failure at 140A15490!
//decompilation failure at 140A1D6E0!
//decompilation failure at 140A18EB0!
//decompilation failure at 140740170!
//decompilation failure at 14073D9A8!
//decompilation failure at 14073F970!
//decompilation failure at 140A0F6F0!
//decompilation failure at 140A21A38!
//decompilation failure at 140A1F238!
//decompilation failure at 14073ED90!
//decompilation failure at 14073E060!
//decompilation failure at 14073F400!
//decompilation failure at 14073E590!
//decompilation failure at 140A18ED8!
//decompilation failure at 140A1B6D8!
//decompilation failure at 140A1D708!
//decompilation failure at 140A15500!
//decompilation failure at 140740178!
//decompilation failure at 14073D9B0!
//decompilation failure at 14073F978!
//decompilation failure at 140A0F760!
//decompilation failure at 140A1F260!
//decompilation failure at 140A21A60!
//decompilation failure at 14073E598!
//decompilation failure at 14073ED98!
//decompilation failure at 14073F408!
//decompilation failure at 14073E068!
//decompilation failure at 140A1B700!
//decompilation failure at 140A15570!
//decompilation failure at 140A1D730!
//decompilation failure at 140A18F00!
//decompilation failure at 14073F980!
//decompilation failure at 14073D9B8!
//decompilation failure at 140740180!
//decompilation failure at 140A1F288!
//decompilation failure at 140A0F7D0!
//decompilation failure at 140A21A88!
//decompilation failure at 14073E070!
//decompilation failure at 14073EDA0!
//decompilation failure at 14073F410!
//decompilation failure at 14073E5A0!
//decompilation failure at 140A1B728!
//decompilation failure at 140A1D758!
//decompilation failure at 140A155E0!
//decompilation failure at 140A18F28!
//decompilation failure at 14073F988!
//decompilation failure at 14073D9C0!
//decompilation failure at 140740188!
//decompilation failure at 140A1F2B0!
//decompilation failure at 140A21AB0!
//decompilation failure at 140A0F840!
//decompilation failure at 14073EDA8!
//decompilation failure at 14073F418!
//decompilation failure at 14073E078!
//decompilation failure at 14073E5A8!
//decompilation failure at 140A15650!
//decompilation failure at 140A18F50!
//decompilation failure at 140A1D780!
//decompilation failure at 140A1B750!
//decompilation failure at 140740190!
//decompilation failure at 14073F990!
//decompilation failure at 14073D9C8!
//decompilation failure at 140A0F8B0!
//decompilation failure at 140A21AD8!
//decompilation failure at 140A1F2D8!
//decompilation failure at 14073E080!
//decompilation failure at 14073E5B0!
//decompilation failure at 14073F420!
//decompilation failure at 14073EDB0!
//decompilation failure at 140A1B778!
//decompilation failure at 140A18F78!
//decompilation failure at 140A1D7A8!
//decompilation failure at 140A156C0!
//decompilation failure at 14073D9D0!
//decompilation failure at 140740198!
//decompilation failure at 14073F998!
//decompilation failure at 140A1F300!
//decompilation failure at 140A0F920!
//decompilation failure at 140A21B00!
//decompilation failure at 14073E5B8!
//decompilation failure at 14073EDB8!
//decompilation failure at 14073F428!
//decompilation failure at 14073E088!
//decompilation failure at 140A1D7D0!
//decompilation failure at 140A15730!
//decompilation failure at 140A18FA0!
//decompilation failure at 140A1B7A0!
//decompilation failure at 14073F9A0!
//decompilation failure at 14073D9D8!
//decompilation failure at 1407401A0!
//decompilation failure at 140A21B28!
//decompilation failure at 140A1F328!
//decompilation failure at 140A0F990!
//decompilation failure at 14073F430!
//decompilation failure at 14073E090!
//decompilation failure at 14073E5C0!
//decompilation failure at 14073EDC0!
//decompilation failure at 140A1D7F8!
//decompilation failure at 140A18FC8!
//decompilation failure at 140A157A0!
//decompilation failure at 140A1B7C8!
//decompilation failure at 1407401A8!
//decompilation failure at 14073F9A8!
//decompilation failure at 14073D9E0!
//decompilation failure at 140A1F350!
//decompilation failure at 140A21B50!
//decompilation failure at 140A0FA00!
//decompilation failure at 14073F438!
//decompilation failure at 14073E5C8!
//decompilation failure at 14073E098!
//decompilation failure at 14073EDC8!
//decompilation failure at 140A18FF0!
//decompilation failure at 140A1D820!
//decompilation failure at 140A15810!
//decompilation failure at 140A1B7F0!
//decompilation failure at 14073F9B0!
//decompilation failure at 1407401B0!
//decompilation failure at 14073D9E8!
//decompilation failure at 140A0FA70!
//decompilation failure at 140A1F378!
//decompilation failure at 140A21B78!
//decompilation failure at 14073E5D0!
//decompilation failure at 14073F440!
//decompilation failure at 14073E0A0!
//decompilation failure at 14073EDD0!
//decompilation failure at 140A19018!
//decompilation failure at 140A1D848!
//decompilation failure at 140A1B818!
//decompilation failure at 140A15880!
//decompilation failure at 14073D9F0!
//decompilation failure at 14073F9B8!
//decompilation failure at 1407401B8!
//decompilation failure at 140A21BA0!
//decompilation failure at 140A1F3A0!
//decompilation failure at 140A0FAE0!
//decompilation failure at 14073E5D8!
//decompilation failure at 14073F448!
//decompilation failure at 14073EDD8!
//decompilation failure at 14073E0A8!
//decompilation failure at 140A1D870!
//decompilation failure at 140A1B840!
//decompilation failure at 140A19040!
//decompilation failure at 140A158F0!
//decompilation failure at 1407401C0!
//decompilation failure at 14073F9C0!
//decompilation failure at 14073D9F8!
//decompilation failure at 140A1F3C8!
//decompilation failure at 140A21BC8!
//decompilation failure at 140A0FB50!
//decompilation failure at 14073F450!
//decompilation failure at 14073EDE0!
//decompilation failure at 14073E5E0!
//decompilation failure at 14073E0B0!
//decompilation failure at 140A1B868!
//decompilation failure at 140A1D898!
//decompilation failure at 140A19068!
//decompilation failure at 140A15960!
//decompilation failure at 14073F9C8!
//decompilation failure at 1407401C8!
//decompilation failure at 14073DA00!
//decompilation failure at 140A21BF0!
//decompilation failure at 140A1F3F0!
//decompilation failure at 140A0FBC0!
//decompilation failure at 14073F458!
//decompilation failure at 14073E5E8!
//decompilation failure at 14073EDE8!
//decompilation failure at 14073E0B8!
//decompilation failure at 140A19090!
//decompilation failure at 140A1D8C0!
//decompilation failure at 140A159D0!
//decompilation failure at 140A1B890!
//decompilation failure at 1407401D0!
//decompilation failure at 14073F9D0!
//decompilation failure at 14073DA08!
//decompilation failure at 140A0FC30!
//decompilation failure at 140A21C18!
//decompilation failure at 140A1F418!
//decompilation failure at 14073E5F0!
//decompilation failure at 14073F460!
//decompilation failure at 14073E0C0!
//decompilation failure at 14073EDF0!
//decompilation failure at 140A1B8B8!
//decompilation failure at 140A15A40!
//decompilation failure at 140A1D8E8!
//decompilation failure at 140A190B8!
//decompilation failure at 14073DA10!
//decompilation failure at 1407401D8!
//decompilation failure at 14073F9D8!
//decompilation failure at 140A21C40!
//decompilation failure at 140A0FCA0!
//decompilation failure at 140A1F440!
//decompilation failure at 14073EDF8!
//decompilation failure at 14073E0C8!
//decompilation failure at 14073F468!
//decompilation failure at 14073E5F8!
//decompilation failure at 140A190E0!
//decompilation failure at 140A15AB0!
//decompilation failure at 140A1D910!
//decompilation failure at 140A1B8E0!
//decompilation failure at 1407401E0!
//decompilation failure at 14073DA18!
//decompilation failure at 14073F9E0!
//decompilation failure at 140A1F468!
//decompilation failure at 140A21C68!
//decompilation failure at 140A0FD10!
//decompilation failure at 14073E600!
//decompilation failure at 14073E0D0!
//decompilation failure at 14073F470!
//decompilation failure at 14073EE00!
//decompilation failure at 140A1B908!
//decompilation failure at 140A19108!
//decompilation failure at 140A1D938!
//decompilation failure at 140A15B20!
//decompilation failure at 14073F9E8!
//decompilation failure at 1407401E8!
//decompilation failure at 14073DA20!
//decompilation failure at 140A0FD80!
//decompilation failure at 140A1F490!
//decompilation failure at 140A21C90!
//decompilation failure at 14073EE08!
//decompilation failure at 14073E608!
//decompilation failure at 14073F478!
//decompilation failure at 14073E0D8!
//decompilation failure at 140A15B90!
//decompilation failure at 140A1B930!
//decompilation failure at 140A19130!
//decompilation failure at 140A1D960!
//decompilation failure at 14073F9F0!
//decompilation failure at 14073DA28!
//decompilation failure at 1407401F0!
//decompilation failure at 140A21CB8!
//decompilation failure at 140A0FDF0!
//decompilation failure at 140A1F4B8!
//decompilation failure at 14073EE10!
//decompilation failure at 14073E610!
//decompilation failure at 14073E0E0!
//decompilation failure at 14073F480!
//decompilation failure at 140A1B958!
//decompilation failure at 140A19158!
//decompilation failure at 140A1D988!
//decompilation failure at 140A15C00!
//decompilation failure at 14073DA30!
//decompilation failure at 14073F9F8!
//decompilation failure at 1407401F8!
//decompilation failure at 140A21CE0!
//decompilation failure at 140A1F4E0!
//decompilation failure at 140A0FE60!
//decompilation failure at 14073EE18!
//decompilation failure at 14073E618!
//decompilation failure at 14073F488!
//decompilation failure at 14073E0E8!
//decompilation failure at 140A19180!
//decompilation failure at 140A1B980!
//decompilation failure at 140A15C70!
//decompilation failure at 140A1D9B0!
//decompilation failure at 140740200!
//decompilation failure at 14073FA00!
//decompilation failure at 14073DA38!
//decompilation failure at 140A21D08!
//decompilation failure at 140A1F508!
//decompilation failure at 140A0FED0!
//decompilation failure at 14073E620!
//decompilation failure at 14073EE20!
//decompilation failure at 14073E0F0!
//decompilation failure at 14073F490!
//decompilation failure at 140A15CE0!
//decompilation failure at 140A1D9D8!
//decompilation failure at 140A191A8!
//decompilation failure at 140740208!
//decompilation failure at 14073FA08!
//decompilation failure at 14073DA40!
//decompilation failure at 140A1F530!
//decompilation failure at 140A0FF40!
//decompilation failure at 140A21D30!
//decompilation failure at 14073E0F8!
//decompilation failure at 14073F498!
//decompilation failure at 14073E628!
//decompilation failure at 140A15D50!
//decompilation failure at 140A191D0!
//decompilation failure at 140A1DA00!
//decompilation failure at 14073FA10!
//decompilation failure at 14073DA48!
//decompilation failure at 140740210!
//decompilation failure at 140A1F558!
//decompilation failure at 140A21D58!
//decompilation failure at 140A0FFB0!
//decompilation failure at 14073E100!
//decompilation failure at 14073E630!
//decompilation failure at 14073F4A0!
//decompilation failure at 140A1DA28!
//decompilation failure at 140A191F8!
//decompilation failure at 140A15DC0!
//decompilation failure at 14073FA18!
//decompilation failure at 140740218!
//decompilation failure at 14073DA50!
//decompilation failure at 140A1F580!
//decompilation failure at 140A21D80!
//decompilation failure at 140A10020!
//decompilation failure at 14073F4A8!
//decompilation failure at 14073E638!
//decompilation failure at 14073E108!
//decompilation failure at 140A15E30!
//decompilation failure at 140A19220!
//decompilation failure at 140A1DA50!
//decompilation failure at 14073FA20!
//decompilation failure at 140740220!
//decompilation failure at 14073DA58!
//decompilation failure at 140A10090!
//decompilation failure at 140A1F5A8!
//decompilation failure at 140A21DA8!
//decompilation failure at 14073E640!
//decompilation failure at 14073E110!
//decompilation failure at 14073F4B0!
//decompilation failure at 140A1DA78!
//decompilation failure at 140A15EA0!
//decompilation failure at 140A19248!
//decompilation failure at 14073DA60!
//decompilation failure at 14073FA28!
//decompilation failure at 140740228!
//decompilation failure at 140A21DD0!
//decompilation failure at 140A10100!
//decompilation failure at 140A1F5D0!
//decompilation failure at 14073F4B8!
//decompilation failure at 14073E118!
//decompilation failure at 14073E648!
//decompilation failure at 140A1DAA0!
//decompilation failure at 140A19270!
//decompilation failure at 140A15F10!
//decompilation failure at 140740230!
//decompilation failure at 14073DA68!
//decompilation failure at 14073FA30!
//decompilation failure at 140A10170!
//decompilation failure at 140A1F5F8!
//decompilation failure at 140A21DF8!
//decompilation failure at 14073F4C0!
//decompilation failure at 14073E650!
//decompilation failure at 14073E120!
//decompilation failure at 140A19298!
//decompilation failure at 140A15F80!
//decompilation failure at 140A1DAC8!
//decompilation failure at 14073DA70!
//decompilation failure at 14073FA38!
//decompilation failure at 140740238!
//decompilation failure at 140A101E0!
//decompilation failure at 140A21E20!
//decompilation failure at 140A1F620!
//decompilation failure at 14073E658!
//decompilation failure at 14073E128!
//decompilation failure at 14073F4C8!
//decompilation failure at 140A15FF0!
//decompilation failure at 140A192C0!
//decompilation failure at 140A1DAF0!
//decompilation failure at 14073DA78!
//decompilation failure at 140740240!
//decompilation failure at 14073FA40!
//decompilation failure at 140A10250!
//decompilation failure at 140A1F648!
//decompilation failure at 140A21E48!
//decompilation failure at 14073E130!
//decompilation failure at 14073E660!
//decompilation failure at 14073F4D0!
//decompilation failure at 140A192E8!
//decompilation failure at 140A1DB18!
//decompilation failure at 140A16060!
//decompilation failure at 14073DA80!
//decompilation failure at 14073FA48!
//decompilation failure at 140740248!
//decompilation failure at 140A21E70!
//decompilation failure at 140A102C0!
//decompilation failure at 140A1F670!
//decompilation failure at 14073E668!
//decompilation failure at 14073F4D8!
//decompilation failure at 14073E138!
//decompilation failure at 140A1DB40!
//decompilation failure at 140A19310!
//decompilation failure at 140A160D0!
//decompilation failure at 140740250!
//decompilation failure at 14073DA88!
//decompilation failure at 14073FA50!
//decompilation failure at 140A1F698!
//decompilation failure at 140A10330!
//decompilation failure at 140A21E98!
//decompilation failure at 14073F4E0!
//decompilation failure at 14073E670!
//decompilation failure at 14073E140!
//decompilation failure at 140A16140!
//decompilation failure at 140A19338!
//decompilation failure at 140A1DB68!
//decompilation failure at 14073FA58!
//decompilation failure at 14073DA90!
//decompilation failure at 140740258!
//decompilation failure at 140A1F6C0!
//decompilation failure at 140A21EC0!
//decompilation failure at 140A103A0!
//decompilation failure at 14073E148!
//decompilation failure at 14073E678!
//decompilation failure at 14073F4E8!
//decompilation failure at 140A161B0!
//decompilation failure at 140A1DB90!
//decompilation failure at 140A19360!
//decompilation failure at 14073FA60!
//decompilation failure at 140740260!
//decompilation failure at 14073DA98!
//decompilation failure at 140A21EE8!
//decompilation failure at 140A10410!
//decompilation failure at 140A1F6E8!
//decompilation failure at 14073E150!
//decompilation failure at 14073F4F0!
//decompilation failure at 14073E680!
//decompilation failure at 140A1DBB8!
//decompilation failure at 140A16220!
//decompilation failure at 140A19388!
//decompilation failure at 140740268!
//decompilation failure at 14073DAA0!
//decompilation failure at 14073FA68!
//decompilation failure at 140A10480!
//decompilation failure at 140A21F10!
//decompilation failure at 140A1F710!
//decompilation failure at 14073F4F8!
//decompilation failure at 14073E158!
//decompilation failure at 14073E688!
//decompilation failure at 140A193B0!
//decompilation failure at 140A1DBE0!
//decompilation failure at 140A16290!
//decompilation failure at 14073DAA8!
//decompilation failure at 140740270!
//decompilation failure at 14073FA70!
//decompilation failure at 140A1F738!
//decompilation failure at 140A21F38!
//decompilation failure at 140A104F0!
//decompilation failure at 14073E690!
//decompilation failure at 14073F500!
//decompilation failure at 14073E160!
//decompilation failure at 140A16300!
//decompilation failure at 140A1DC08!
//decompilation failure at 140A193D8!
//decompilation failure at 14073FA78!
//decompilation failure at 140740278!
//decompilation failure at 14073DAB0!
//decompilation failure at 140A10560!
//decompilation failure at 140A21F60!
//decompilation failure at 140A1F760!
//decompilation failure at 14073F508!
//decompilation failure at 14073E168!
//decompilation failure at 14073E698!
//decompilation failure at 140A1DC30!
//decompilation failure at 140A16370!
//decompilation failure at 140A19400!
//decompilation failure at 14073DAB8!
//decompilation failure at 140740280!
//decompilation failure at 14073FA80!
//decompilation failure at 140A105D0!
//decompilation failure at 140A21F88!
//decompilation failure at 140A1F788!
//decompilation failure at 14073F510!
//decompilation failure at 14073E170!
//decompilation failure at 14073E6A0!
//decompilation failure at 140A1DC58!
//decompilation failure at 140A163E0!
//decompilation failure at 140A19428!
//decompilation failure at 14073DAC0!
//decompilation failure at 140740288!
//decompilation failure at 14073FA88!
//decompilation failure at 140A21FB0!
//decompilation failure at 140A10640!
//decompilation failure at 140A1F7B0!
//decompilation failure at 14073F518!
//decompilation failure at 14073E178!
//decompilation failure at 14073E6A8!
//decompilation failure at 140A19450!
//decompilation failure at 140A16450!
//decompilation failure at 140A1DC80!
//decompilation failure at 140740290!
//decompilation failure at 14073DAC8!
//decompilation failure at 14073FA90!
//decompilation failure at 140A1F7D8!
//decompilation failure at 140A21FD8!
//decompilation failure at 140A106B0!
//decompilation failure at 14073E6B0!
//decompilation failure at 14073E180!
//decompilation failure at 14073F520!
//decompilation failure at 140A164C0!
//decompilation failure at 140A19478!
//decompilation failure at 140A1DCA8!
//decompilation failure at 14073FA98!
//decompilation failure at 140740298!
//decompilation failure at 14073DAD0!
//decompilation failure at 140A22000!
//decompilation failure at 140A10720!
//decompilation failure at 140A1F800!
//decompilation failure at 14073E188!
//decompilation failure at 14073E6B8!
//decompilation failure at 14073F528!
//decompilation failure at 140A16530!
//decompilation failure at 140A194A0!
//decompilation failure at 140A1DCD0!
//decompilation failure at 14073DAD8!
//decompilation failure at 14073FAA0!
//decompilation failure at 1407402A0!
//decompilation failure at 140A1F828!
//decompilation failure at 140A22028!
//decompilation failure at 140A10790!
//decompilation failure at 14073E190!
//decompilation failure at 14073E6C0!
//decompilation failure at 14073F530!
//decompilation failure at 140A194C8!
//decompilation failure at 140A165A0!
//decompilation failure at 140A1DCF8!
//decompilation failure at 1407402A8!
//decompilation failure at 14073FAA8!
//decompilation failure at 14073DAE0!
//decompilation failure at 140A22050!
//decompilation failure at 140A1F850!
//decompilation failure at 140A10800!
//decompilation failure at 14073E6C8!
//decompilation failure at 14073E198!
//decompilation failure at 14073F538!
//decompilation failure at 140A16610!
//decompilation failure at 140A1DD20!
//decompilation failure at 140A194F0!
//decompilation failure at 14073FAB0!
//decompilation failure at 1407402B0!
//decompilation failure at 14073DAE8!
//decompilation failure at 140A22078!
//decompilation failure at 140A10870!
//decompilation failure at 140A1F878!
//decompilation failure at 14073E1A0!
//decompilation failure at 14073F540!
//decompilation failure at 14073E6D0!
//decompilation failure at 140A16680!
//decompilation failure at 140A19518!
//decompilation failure at 140A1DD48!
//decompilation failure at 1407402B8!
//decompilation failure at 14073DAF0!
//decompilation failure at 14073FAB8!
//decompilation failure at 140A220A0!
//decompilation failure at 140A1F8A0!
//decompilation failure at 14073E1A8!
//decompilation failure at 14073E6D8!
//decompilation failure at 14073F548!
//decompilation failure at 140A1DD70!
//decompilation failure at 140A19540!
//decompilation failure at 140A166F0!
//decompilation failure at 1407402C0!
//decompilation failure at 14073FAC0!
//decompilation failure at 140A220C8!
//decompilation failure at 140A1F8C8!
//decompilation failure at 14073F550!
//decompilation failure at 14073E6E0!
//decompilation failure at 14073E1B0!
//decompilation failure at 140A16760!
//decompilation failure at 140A19568!
//decompilation failure at 140A1DD98!
//decompilation failure at 1407402C8!
//decompilation failure at 14073FAC8!
//decompilation failure at 140A1F8F0!
//decompilation failure at 140A220F0!
//decompilation failure at 14073E1B8!
//decompilation failure at 14073E6E8!
//decompilation failure at 14073F558!
//decompilation failure at 140A1DDC0!
//decompilation failure at 140A167D0!
//decompilation failure at 140A19590!
//decompilation failure at 14073FAD0!
//decompilation failure at 1407402D0!
//decompilation failure at 140A22118!
//decompilation failure at 140A1F918!
//decompilation failure at 14073E6F0!
//decompilation failure at 14073F560!
//decompilation failure at 14073E1C0!
//decompilation failure at 140A16840!
//decompilation failure at 140A195B8!
//decompilation failure at 140A1DDE8!
//decompilation failure at 1407402D8!
//decompilation failure at 14073FAD8!
//decompilation failure at 140A1F940!
//decompilation failure at 140A22140!
//decompilation failure at 14073E1C8!
//decompilation failure at 14073E6F8!
//decompilation failure at 14073F568!
//decompilation failure at 140A1DE10!
//decompilation failure at 140A195E0!
//decompilation failure at 140A168B0!
//decompilation failure at 14073FAE0!
//decompilation failure at 1407402E0!
//decompilation failure at 140A22168!
//decompilation failure at 140A1F968!
//decompilation failure at 14073F570!
//decompilation failure at 14073E700!
//decompilation failure at 14073E1D0!
//decompilation failure at 140A1DE38!
//decompilation failure at 140A19608!
//decompilation failure at 140A16920!
//decompilation failure at 1407402E8!
//decompilation failure at 14073FAE8!
//decompilation failure at 140A1F990!
//decompilation failure at 140A22190!
//decompilation failure at 14073F578!
//decompilation failure at 14073E708!
//decompilation failure at 14073E1D8!
//decompilation failure at 140A19630!
//decompilation failure at 140A1DE60!
//decompilation failure at 140A16990!
//decompilation failure at 14073FAF0!
//decompilation failure at 1407402F0!
//decompilation failure at 140A221B8!
//decompilation failure at 140A1F9B8!
//decompilation failure at 14073E710!
//decompilation failure at 14073F580!
//decompilation failure at 14073E1E0!
//decompilation failure at 140A1DE88!
//decompilation failure at 140A16A00!
//decompilation failure at 140A19658!
//decompilation failure at 1407402F8!
//decompilation failure at 14073FAF8!
//decompilation failure at 140A221E0!
//decompilation failure at 140A1F9E0!
//decompilation failure at 14073F588!
//decompilation failure at 14073E1E8!
//decompilation failure at 14073E718!
//decompilation failure at 140A1DEB0!
//decompilation failure at 140A19680!
//decompilation failure at 140A16A70!
//decompilation failure at 140740300!
//decompilation failure at 14073FB00!
//decompilation failure at 140A22208!
//decompilation failure at 140A1FA08!
//decompilation failure at 14073E720!
//decompilation failure at 14073F590!
//decompilation failure at 14073E1F0!
//decompilation failure at 140A196A8!
//decompilation failure at 140A1DED8!
//decompilation failure at 140A16AE0!
//decompilation failure at 140740308!
//decompilation failure at 14073FB08!
//decompilation failure at 140A22230!
//decompilation failure at 140A1FA30!
//decompilation failure at 14073E728!
//decompilation failure at 14073F598!
//decompilation failure at 14073E1F8!
//decompilation failure at 140A16B50!
//decompilation failure at 140A1DF00!
//decompilation failure at 140A196D0!
//decompilation failure at 140740310!
//decompilation failure at 14073FB10!
//decompilation failure at 140A1FA58!
//decompilation failure at 140A22258!
//decompilation failure at 14073E200!
//decompilation failure at 14073F5A0!
//decompilation failure at 14073E730!
//decompilation failure at 140A1DF28!
//decompilation failure at 140A16BC0!
//decompilation failure at 140A196F8!
//decompilation failure at 14073FB18!
//decompilation failure at 140740318!
//decompilation failure at 140A22280!
//decompilation failure at 140A1FA80!
//decompilation failure at 14073F5A8!
//decompilation failure at 14073E208!
//decompilation failure at 14073E738!
//decompilation failure at 140A19720!
//decompilation failure at 140A16C30!
//decompilation failure at 140A1DF50!
//decompilation failure at 140740320!
//decompilation failure at 14073FB20!
//decompilation failure at 140A222A8!
//decompilation failure at 140A1FAA8!
//decompilation failure at 14073E740!
//decompilation failure at 14073E210!
//decompilation failure at 14073F5B0!
//decompilation failure at 140A16CA0!
//decompilation failure at 140A19748!
//decompilation failure at 140A1DF78!
//decompilation failure at 140740328!
//decompilation failure at 14073FB28!
//decompilation failure at 140A222D0!
//decompilation failure at 140A1FAD0!
//decompilation failure at 14073E218!
//decompilation failure at 14073E748!
//decompilation failure at 14073F5B8!
//decompilation failure at 140A1DFA0!
//decompilation failure at 140A16D10!
//decompilation failure at 140A19770!
//decompilation failure at 14073FB30!
//decompilation failure at 140740330!
//decompilation failure at 140A222F8!
//decompilation failure at 140A1FAF8!
//decompilation failure at 14073F5C0!
//decompilation failure at 14073E220!
//decompilation failure at 14073E750!
//decompilation failure at 140A16D80!
//decompilation failure at 140A1DFC8!
//decompilation failure at 140A19798!
//decompilation failure at 140740338!
//decompilation failure at 14073FB38!
//decompilation failure at 140A1FB20!
//decompilation failure at 140A22320!
//decompilation failure at 14073E228!
//decompilation failure at 14073F5C8!
//decompilation failure at 14073E758!
//decompilation failure at 140A197C0!
//decompilation failure at 140A16DF0!
//decompilation failure at 140A1DFF0!
//decompilation failure at 14073FB40!
//decompilation failure at 140A108E0!
//decompilation failure at 140740340!
//decompilation failure at 140A1FB48!
//decompilation failure at 140A22348!
//decompilation failure at 14073E760!
//decompilation failure at 14073E230!
//decompilation failure at 14073F5D0!
//decompilation failure at 140A16E60!
//decompilation failure at 140A197E8!
//decompilation failure at 140A1E018!
//decompilation failure at 14073DAF8!
//decompilation failure at 14073FB48!
//decompilation failure at 140740348!
//decompilation failure at 140A10950!
//decompilation failure at 140A1FB70!
//decompilation failure at 140A22370!
//decompilation failure at 14073E238!
//decompilation failure at 14073E768!
//decompilation failure at 14073F5D8!
//decompilation failure at 140A19810!
//decompilation failure at 14073DB00!
//decompilation failure at 140A1E040!
//decompilation failure at 140A16ED0!
//decompilation failure at 14073FB50!
//decompilation failure at 140A109C0!
//decompilation failure at 140740350!
//decompilation failure at 140A1FB98!
//decompilation failure at 140A22398!
//decompilation failure at 14073E770!
//decompilation failure at 14073F5E0!
//decompilation failure at 14073E240!
//decompilation failure at 140A19838!
//decompilation failure at 140A16F40!
//decompilation failure at 14073DB08!
//decompilation failure at 140A1E068!
//decompilation failure at 14073FB58!
//decompilation failure at 140A10A30!
//decompilation failure at 140740358!
//decompilation failure at 140A223C0!
//decompilation failure at 140A1FBC0!
//decompilation failure at 14073E778!
//decompilation failure at 14073E248!
//decompilation failure at 14073F5E8!
//decompilation failure at 140A16FB0!
//decompilation failure at 140A1E090!
//decompilation failure at 14073DB10!
//decompilation failure at 140A19860!
//decompilation failure at 140740360!
//decompilation failure at 140A10AA0!
//decompilation failure at 14073FB60!
//decompilation failure at 140A1FBE8!
//decompilation failure at 140A223E8!
//decompilation failure at 14073E250!
//decompilation failure at 14073F5F0!
//decompilation failure at 14073E780!
//decompilation failure at 14073DB18!
//decompilation failure at 140A1E0B8!
//decompilation failure at 140A17020!
//decompilation failure at 140A19888!
//decompilation failure at 140A10B10!
//decompilation failure at 14073FB68!
//decompilation failure at 140740368!
//decompilation failure at 140A22410!
//decompilation failure at 140A1FC10!
//decompilation failure at 14073F5F8!
//decompilation failure at 14073E258!
//decompilation failure at 14073E788!
//decompilation failure at 14073DB20!
//decompilation failure at 140A17090!
//decompilation failure at 140A198B0!
//decompilation failure at 140A1E0E0!
//decompilation failure at 140A10B80!
//decompilation failure at 140740370!
//decompilation failure at 14073FB70!
//decompilation failure at 140A1FC38!
//decompilation failure at 140A22438!
//decompilation failure at 14073E260!
//decompilation failure at 14073E790!
//decompilation failure at 14073F600!
//decompilation failure at 14073DB28!
//decompilation failure at 140A198D8!
//decompilation failure at 140A17100!
//decompilation failure at 140A1E108!
//decompilation failure at 14073FB78!
//decompilation failure at 140A10BF0!
//decompilation failure at 140740378!
//decompilation failure at 140A22460!
//decompilation failure at 140A1FC60!
//decompilation failure at 14073E798!
//decompilation failure at 14073E268!
//decompilation failure at 14073F608!
//decompilation failure at 14073DB30!
//decompilation failure at 140A19900!
//decompilation failure at 140A17170!
//decompilation failure at 140A1E130!
//decompilation failure at 140740380!
//decompilation failure at 14073FB80!
//decompilation failure at 140A10C60!
//decompilation failure at 140A1FC88!
//decompilation failure at 140A22488!
//decompilation failure at 14073E7A0!
//decompilation failure at 14073E270!
//decompilation failure at 14073F610!
//decompilation failure at 140A171E0!
//decompilation failure at 14073DB38!
//decompilation failure at 140A19928!
//decompilation failure at 140A1E158!
//decompilation failure at 14073FB88!
//decompilation failure at 140A10CD0!
//decompilation failure at 140740388!
//decompilation failure at 140A1FCB0!
//decompilation failure at 140A224B0!
//decompilation failure at 14073E278!
//decompilation failure at 14073E7A8!
//decompilation failure at 14073F618!
//decompilation failure at 14073DB40!
//decompilation failure at 140A1E180!
//decompilation failure at 140A19950!
//decompilation failure at 140A17250!
//decompilation failure at 14073FB90!
//decompilation failure at 140A10D40!
//decompilation failure at 140740390!
//decompilation failure at 140A1FCD8!
//decompilation failure at 140A224D8!
//decompilation failure at 14073F620!
//decompilation failure at 14073E7B0!
//decompilation failure at 14073E280!
//decompilation failure at 14073DB48!
//decompilation failure at 140A1B9A8!
//decompilation failure at 140A1E1A8!
//decompilation failure at 140A19978!
//decompilation failure at 140A172C0!
//decompilation failure at 14073FB98!
//decompilation failure at 140740398!
//decompilation failure at 140A10DB0!
//decompilation failure at 140A1FD00!
//decompilation failure at 140A22500!
//decompilation failure at 14073EE28!
//decompilation failure at 14073F628!
//decompilation failure at 14073E7B8!
//decompilation failure at 14073E288!
//decompilation failure at 140A17330!
//decompilation failure at 140A1B9D0!
//decompilation failure at 14073DB50!
//decompilation failure at 140A199A0!
//decompilation failure at 140A1E1D0!
//decompilation failure at 1407403A0!
//decompilation failure at 14073FBA0!
//decompilation failure at 140A10E20!
//decompilation failure at 140A22528!
//decompilation failure at 140A1FD28!
//decompilation failure at 14073E290!
//decompilation failure at 14073EE30!
//decompilation failure at 14073E7C0!
//decompilation failure at 14073F630!
//decompilation failure at 140A199C8!
//decompilation failure at 140A173A0!
//decompilation failure at 140A1E1F8!
//decompilation failure at 14073DB58!
//decompilation failure at 140A1B9F8!
//decompilation failure at 1407403A8!
//decompilation failure at 140A10E90!
//decompilation failure at 14073FBA8!
//decompilation failure at 140A1FD50!
//decompilation failure at 140A22550!
//decompilation failure at 14073E7C8!
//decompilation failure at 14073F638!
//decompilation failure at 14073E298!
//decompilation failure at 14073EE38!
//decompilation failure at 140A1E220!
//decompilation failure at 140A199F0!
//decompilation failure at 140A17410!
//decompilation failure at 14073DB60!
//decompilation failure at 140A1BA20!
//decompilation failure at 14073FBB0!
//decompilation failure at 1407403B0!
//decompilation failure at 140A10F00!
//decompilation failure at 140A1FD78!
//decompilation failure at 140A22578!
//decompilation failure at 14073F640!
//decompilation failure at 14073E7D0!
//decompilation failure at 14073E2A0!
//decompilation failure at 14073EE40!
//decompilation failure at 140A1E248!
//decompilation failure at 140A19A18!
//decompilation failure at 140A1BA48!
//decompilation failure at 140A17480!
//decompilation failure at 14073DB68!
//decompilation failure at 14073FBB8!
//decompilation failure at 1407403B8!
//decompilation failure at 140A10F70!
//decompilation failure at 140A225A0!
//decompilation failure at 140A1FDA0!
//decompilation failure at 14073E7D8!
//decompilation failure at 14073F648!
//decompilation failure at 14073EE48!
//decompilation failure at 14073E2A8!
//decompilation failure at 140A174F0!
//decompilation failure at 140A1E270!
//decompilation failure at 140A1BA70!
//decompilation failure at 140A19A40!
//decompilation failure at 14073DB70!
//decompilation failure at 1407403C0!
//decompilation failure at 140A10FE0!
//decompilation failure at 14073FBC0!
//decompilation failure at 140A225C8!
//decompilation failure at 140A1FDC8!
//decompilation failure at 14073F650!
//decompilation failure at 14073EE50!
//decompilation failure at 14073E2B0!
//decompilation failure at 14073E7E0!
//decompilation failure at 14073DB78!
//decompilation failure at 140A1BA98!
//decompilation failure at 140A19A68!
//decompilation failure at 140A17560!
//decompilation failure at 140A1E298!
//decompilation failure at 1407403C8!
//decompilation failure at 140A11050!
//decompilation failure at 14073FBC8!
//decompilation failure at 140A1FDF0!
//decompilation failure at 140A225F0!
//decompilation failure at 14073EE58!
//decompilation failure at 14073E7E8!
//decompilation failure at 14073E2B8!
//decompilation failure at 14073F658!
//decompilation failure at 140A1E2C0!
//decompilation failure at 14073DB80!
//decompilation failure at 140A1BAC0!
//decompilation failure at 140A19A90!
//decompilation failure at 140A175D0!
//decompilation failure at 140A110C0!
//decompilation failure at 14073FBD0!
//decompilation failure at 1407403D0!
//decompilation failure at 140A1FE18!
//decompilation failure at 140A22618!
//decompilation failure at 14073F660!
//decompilation failure at 14073EE60!
//decompilation failure at 14073E7F0!
//decompilation failure at 14073E2C0!
//decompilation failure at 14073DB88!
//decompilation failure at 140A17640!
//decompilation failure at 140A1BAE8!
//decompilation failure at 140A1E2E8!
//decompilation failure at 140A19AB8!
//decompilation failure at 140A11130!
//decompilation failure at 14073FBD8!
//decompilation failure at 1407403D8!
//decompilation failure at 140A22640!
//decompilation failure at 140A1FE40!
//decompilation failure at 14073EE68!
//decompilation failure at 14073E2C8!
//decompilation failure at 14073F668!
//decompilation failure at 14073E7F8!
//decompilation failure at 140A176B0!
//decompilation failure at 140A19AE0!
//decompilation failure at 14073DB90!
//decompilation failure at 140A1E310!
//decompilation failure at 140A1BB10!
//decompilation failure at 140A111A0!
//decompilation failure at 1407403E0!
//decompilation failure at 14073FBE0!
//decompilation failure at 140A22668!
//decompilation failure at 140A1FE68!
//decompilation failure at 14073E2D0!
//decompilation failure at 14073E800!
//decompilation failure at 14073F670!
//decompilation failure at 14073EE70!
//decompilation failure at 140A17720!
//decompilation failure at 14073DB98!
//decompilation failure at 140A1E338!
//decompilation failure at 140A1BB38!
//decompilation failure at 140A19B08!
//decompilation failure at 1407403E8!
//decompilation failure at 140A11210!
//decompilation failure at 14073FBE8!
//decompilation failure at 140A1FE90!
//decompilation failure at 140A22690!
//decompilation failure at 14073E2D8!
//decompilation failure at 14073F678!
//decompilation failure at 14073EE78!
//decompilation failure at 14073E808!
//decompilation failure at 140A1E360!
//decompilation failure at 140A1BB60!
//decompilation failure at 14073DBA0!
//decompilation failure at 140A19B30!
//decompilation failure at 140A17790!
//decompilation failure at 140A11280!
//decompilation failure at 14073FBF0!
//decompilation failure at 1407403F0!
//decompilation failure at 140A1FEB8!
//decompilation failure at 140A226B8!
//decompilation failure at 14073EE80!
//decompilation failure at 14073F680!
//decompilation failure at 14073E810!
//decompilation failure at 14073E2E0!
//decompilation failure at 14073DBA8!
//decompilation failure at 140A19B58!
//decompilation failure at 140A17800!
//decompilation failure at 140A1E388!
//decompilation failure at 140A1BB88!
//decompilation failure at 140A112F0!
//decompilation failure at 14073FBF8!
//decompilation failure at 1407403F8!
//decompilation failure at 140A1FEE0!
//decompilation failure at 140A226E0!
//decompilation failure at 14073E818!
//decompilation failure at 14073E2E8!
//decompilation failure at 14073F688!
//decompilation failure at 14073EE88!
//decompilation failure at 140A17870!
//decompilation failure at 14073DBB0!
//decompilation failure at 140A1E3B0!
//decompilation failure at 140A1BBB0!
//decompilation failure at 140A19B80!
//decompilation failure at 14073FC00!
//decompilation failure at 140A11360!
//decompilation failure at 140740400!
//decompilation failure at 140A1FF08!
//decompilation failure at 140A22708!
//decompilation failure at 14073E2F0!
//decompilation failure at 14073F690!
//decompilation failure at 14073EE90!
//decompilation failure at 14073E820!
//decompilation failure at 140A178E0!
//decompilation failure at 140A19BA8!
//decompilation failure at 14073DBB8!
//decompilation failure at 140A1E3D8!
//decompilation failure at 140A1BBD8!
//decompilation failure at 140A113D0!
//decompilation failure at 14073FC08!
//decompilation failure at 140740408!
//decompilation failure at 140A1FF30!
//decompilation failure at 140A22730!
//decompilation failure at 14073E2F8!
//decompilation failure at 14073E828!
//decompilation failure at 14073F698!
//decompilation failure at 14073EE98!
//decompilation failure at 14073DBC0!
//decompilation failure at 140A1BC00!
//decompilation failure at 140A1E400!
//decompilation failure at 140A17950!
//decompilation failure at 140A19BD0!
//decompilation failure at 14073FC10!
//decompilation failure at 140A11440!
//decompilation failure at 140740410!
//decompilation failure at 140A22758!
//decompilation failure at 140A1FF58!
//decompilation failure at 14073EEA0!
//decompilation failure at 14073F6A0!
//decompilation failure at 14073E300!
//decompilation failure at 14073E830!
//decompilation failure at 14073DBC8!
//decompilation failure at 140A1BC28!
//decompilation failure at 140A19BF8!
//decompilation failure at 140A1E428!
//decompilation failure at 140A179C0!
//decompilation failure at 140740418!
//decompilation failure at 140A114B0!
//decompilation failure at 14073FC18!
//decompilation failure at 140A1FF80!
//decompilation failure at 140A22780!
//decompilation failure at 14073EEA8!
//decompilation failure at 14073E838!
//decompilation failure at 14073F6A8!
//decompilation failure at 14073E308!
//decompilation failure at 140A17A30!
//decompilation failure at 140A19C20!
//decompilation failure at 14073DBD0!
//decompilation failure at 140A1E450!
//decompilation failure at 140A1BC50!
//decompilation failure at 14073FC20!
//decompilation failure at 140A11520!
//decompilation failure at 140740420!
//decompilation failure at 140A227A8!
//decompilation failure at 140A1FFA8!
const Scaleform::Render::GL::FragShaderDesc *__fastcall Scaleform::Render::GL::FragShaderDesc::GetDesc(
        Scaleform::Render::GL::ShaderDesc::ShaderType shader,
        Scaleform::Render::GL::ShaderDesc::ShaderVersion ver)
{
  __int64 v2; // rbx
  Scaleform::Render::GL::ShaderDesc::ShaderIndex ShaderIndex; // eax
  int v4; // edx

  v2 = ver;
  ShaderIndex = Scaleform::Render::GL::ShaderDesc::GetShaderIndex(shader);
  v4 = Scaleform::Render::GL::ShaderVersionIndex[v2];
  if ( v4 < 0 )
    v4 = 0;
  return Scaleform::Render::GL::FragShaderDesc::Descs[Scaleform::Render::GL::ShaderIndexingData[ShaderIndex][v4].FragIndex];
}

const Scaleform::Render::GL::VertexShaderDesc *__fastcall Scaleform::Render::GL::VertexShaderDesc::GetDesc(
        Scaleform::Render::GL::ShaderDesc::ShaderType shader,
        Scaleform::Render::GL::ShaderDesc::ShaderVersion ver)
{
  __int64 v2; // rbx
  Scaleform::Render::GL::ShaderDesc::ShaderIndex ShaderIndex; // eax
  int v4; // edx

  v2 = ver;
  ShaderIndex = Scaleform::Render::GL::ShaderDesc::GetShaderIndex(shader);
  v4 = Scaleform::Render::GL::ShaderVersionIndex[v2];
  if ( v4 < 0 )
    v4 = 0;
  return Scaleform::Render::GL::VertexShaderDesc::Descs[Scaleform::Render::GL::ShaderIndexingData[ShaderIndex][v4].VertexIndex];
}

__int64 __fastcall Scaleform::Render::GL::FragShaderDesc::GetShaderComboIndex(
        Scaleform::Render::GL::ShaderDesc::ShaderType shader,
        Scaleform::Render::GL::ShaderDesc::ShaderVersion ver)
{
  __int32 v2; // edx
  __int64 result; // rax
  __int32 v4; // ecx
  __int32 v5; // ecx
  __int32 v6; // ecx
  __int32 v7; // ecx
  __int32 v8; // ecx
  __int32 v9; // ecx
  __int32 v10; // ecx
  __int32 v11; // ecx
  __int32 v12; // ecx
  __int32 v13; // ecx
  __int32 v14; // ecx
  __int32 v15; // ecx
  __int32 v16; // ecx
  __int32 v17; // ecx
  __int32 v18; // ecx
  __int32 v19; // ecx
  __int32 v20; // ecx
  __int32 v21; // ecx
  __int32 v22; // ecx
  __int32 v23; // ecx
  __int32 v24; // ecx
  __int32 v25; // ecx
  __int32 v26; // ecx
  __int32 v27; // ecx
  __int32 v28; // ecx
  __int32 v29; // ecx
  __int32 v30; // ecx
  __int32 v31; // ecx
  __int32 v32; // ecx
  __int32 v33; // ecx
  __int32 v34; // ecx
  __int32 v35; // ecx
  __int32 v36; // ecx
  __int32 v37; // ecx
  __int32 v38; // ecx
  __int32 v39; // ecx
  __int32 v40; // ecx
  __int32 v41; // ecx
  __int32 v42; // ecx
  __int32 v43; // ecx
  __int32 v44; // ecx
  __int32 v45; // ecx
  bool v46; // zf
  __int32 v47; // ecx
  __int32 v48; // ecx
  __int32 v49; // ecx
  bool v50; // zf
  __int32 v51; // ecx
  __int32 v52; // ecx
  __int32 v53; // ecx
  bool v54; // zf
  __int32 v55; // ecx
  __int32 v56; // ecx
  __int32 v57; // ecx
  bool v58; // zf
  __int32 v59; // ecx
  __int32 v60; // ecx
  __int32 v61; // ecx
  __int32 v62; // ecx
  __int32 v63; // ecx
  __int32 v64; // ecx
  __int32 v65; // ecx
  __int32 v66; // ecx
  __int32 v67; // ecx
  __int32 v68; // ecx
  __int32 v69; // ecx
  __int32 v70; // ecx
  __int32 v71; // ecx
  __int32 v72; // ecx
  __int32 v73; // ecx
  __int32 v74; // ecx
  __int32 v75; // ecx
  __int32 v76; // ecx
  __int32 v77; // ecx
  __int32 v78; // ecx
  __int32 v79; // ecx
  __int32 v80; // ecx
  __int32 v81; // ecx
  __int32 v82; // ecx
  __int32 v83; // ecx
  __int32 v84; // ecx
  __int32 v85; // ecx
  __int32 v86; // ecx
  __int32 v87; // ecx
  __int32 v88; // ecx
  __int32 v89; // ecx
  __int32 v90; // ecx
  __int32 v91; // ecx

  if ( ver )
  {
    v2 = ver - 1;
    if ( v2 )
    {
      if ( v2 == 1 )
      {
        if ( shader <= ST_TexTGCxformAc )
        {
          if ( shader != ST_TexTGCxformAc )
          {
            switch ( shader )
            {
              case ST_base_Batch:
                goto $LN620_0;
              case ST_BatchTexTG:
                goto $LN13_142;
              case ST_base_Instanced:
                goto $LN14_120;
              case ST_InstancedTexTG:
                return 313i64;
              case ST_InstancedTexTGMul:
                goto $LN331_1;
              case ST_Position3dTexTG:
                goto $LN15_129;
              case ST_Position3dTexTGMul:
                goto $LN16_106;
              case ST_BatchPosition3dTexTG:
                goto $LN17_93;
              case ST_BatchPosition3dTexTGMul:
                goto $LN18_90;
              case ST_InstancedPosition3dTexTG:
                goto $LN406_1;
              case ST_InstancedPosition3dTexTGMul:
                goto $LN398_0;
              case ST_TexTGCxform:
                goto $LN19_141;
              case ST_TexTGCxformMul:
                goto $LN20_75;
              case ST_BatchTexTGCxform:
                goto $LN21_66;
              case ST_BatchTexTGCxformMul:
                goto $LN22_58;
              case ST_InstancedTexTGCxform:
                goto $LN375_1;
              case ST_InstancedTexTGCxformMul:
                goto $LN352_0;
              case ST_Position3dTexTGCxform:
                goto $LN23_67;
              case ST_Position3dTexTGCxformMul:
                goto $LN24_64;
              case ST_BatchPosition3dTexTGCxform:
                goto $LN25_48;
              case ST_BatchPosition3dTexTGCxformMul:
                goto $LN26_52;
              case ST_InstancedPosition3dTexTGCxform:
                goto $LN408_1;
              case ST_InstancedPosition3dTexTGCxformMul:
                goto $LN423;
              case ST_TexTGEAlpha:
                goto $LN27_52;
              case ST_TexTGEAlphaMul:
                goto $LN28_44;
              case ST_BatchTexTGEAlpha:
                goto $LN29_42;
              case ST_BatchTexTGEAlphaMul:
                goto $LN30_46;
              case ST_InstancedTexTGEAlpha:
                goto $LN347_2;
              case ST_InstancedTexTGEAlphaMul:
                goto $LN343_5;
              case ST_Position3dTexTGEAlpha:
                goto $LN31_29;
              case ST_Position3dTexTGEAlphaMul:
                goto $LN32_31;
              case ST_BatchPosition3dTexTGEAlpha:
                goto $LN33_26;
              case ST_BatchPosition3dTexTGEAlphaMul:
                goto $LN34_23;
              case ST_InstancedPosition3dTexTGEAlpha:
                goto $LN394_0;
              case ST_InstancedPosition3dTexTGEAlphaMul:
                return 397i64;
              case ST_TexTGCxformEAlpha:
                goto $LN35_21;
              case ST_TexTGCxformEAlphaMul:
                goto $LN36_26;
              case ST_BatchTexTGCxformEAlpha:
                goto $LN37_32;
              case ST_BatchTexTGCxformEAlphaMul:
                goto $LN38_26;
              case ST_InstancedTexTGCxformEAlpha:
                goto $LN359_1;
              case ST_InstancedTexTGCxformEAlphaMul:
                goto $LN360_1;
              case ST_Position3dTexTGCxformEAlpha:
                goto $LN39_25;
              case ST_Position3dTexTGCxformEAlphaMul:
                goto $LN40_24;
              case ST_BatchPosition3dTexTGCxformEAlpha:
                goto $LN41_20;
              case ST_BatchPosition3dTexTGCxformEAlphaMul:
                goto $LN42_23;
              case ST_InstancedPosition3dTexTGCxformEAlpha:
                goto $LN424;
              case ST_InstancedPosition3dTexTGCxformEAlphaMul:
                goto $LN415_1;
              case ST_TexTGInv:
                goto $LN43_20;
              case ST_BatchTexTGInv:
                goto $LN44_22;
              case ST_InstancedTexTGInv:
                return 316i64;
              case ST_Position3dTexTGInv:
                goto $LN45_25;
              case ST_BatchPosition3dTexTGInv:
                goto $LN46_17;
              case ST_InstancedPosition3dTexTGInv:
                goto $LN393_1;
              case ST_TexTGCxformInv:
                goto $LN47_16;
              case ST_BatchTexTGCxformInv:
                goto $LN48_14;
              case ST_InstancedTexTGCxformInv:
                goto $LN367_3;
              case ST_Position3dTexTGCxformInv:
                goto $LN49_16;
              case ST_BatchPosition3dTexTGCxformInv:
                goto $LN50_14;
              case ST_InstancedPosition3dTexTGCxformInv:
                goto $LN443_0;
              case ST_TexTGEAlphaInv:
                goto $LN51_13;
              case ST_BatchTexTGEAlphaInv:
                goto $LN52_14;
              case ST_InstancedTexTGEAlphaInv:
                return 320i64;
              case ST_Position3dTexTGEAlphaInv:
                goto $LN53_21;
              case ST_BatchPosition3dTexTGEAlphaInv:
                goto $LN54_17;
              case ST_InstancedPosition3dTexTGEAlphaInv:
                goto $LN439_1;
              case ST_TexTGCxformEAlphaInv:
                goto $LN55_12;
              case ST_BatchTexTGCxformEAlphaInv:
                goto $LN56_12;
              case ST_InstancedTexTGCxformEAlphaInv:
                goto $LN371_1;
              case ST_Position3dTexTGCxformEAlphaInv:
                goto $LN57_12;
              case ST_BatchPosition3dTexTGCxformEAlphaInv:
                goto $LN58_14;
              case ST_InstancedPosition3dTexTGCxformEAlphaInv:
                goto $LN416_1;
              case ST_TexTGTexDensity:
                goto $LN59_12;
              case ST_BatchTexTGTexDensity:
                goto $LN60_9;
              case ST_InstancedTexTGTexDensity:
                goto $LN324_2;
              case ST_Position3dTexTGTexDensity:
                goto $LN61_9;
              case ST_BatchPosition3dTexTGTexDensity:
                goto $LN62_13;
              case ST_InstancedPosition3dTexTGTexDensity:
                goto $LN386_2;
              case ST_TexTGEAlphaTexDensity:
                goto $LN63_14;
              case ST_BatchTexTGEAlphaTexDensity:
                goto $LN64_19;
              case ST_InstancedTexTGEAlphaTexDensity:
                goto $LN336_0;
              case ST_Position3dTexTGEAlphaTexDensity:
                goto $LN65_17;
              case ST_BatchPosition3dTexTGEAlphaTexDensity:
                goto $LN66_14;
              case ST_InstancedPosition3dTexTGEAlphaTexDensity:
                goto $LN402_1;
              default:
                return 0i64;
            }
          }
          return 14i64;
        }
        if ( shader <= ST_Vertex )
        {
          if ( shader != ST_Vertex )
          {
            switch ( shader )
            {
              case ST_TexTGCxformAcMul:
                goto $LN68_14;
              case ST_BatchTexTGCxformAc:
                goto $LN677_0;
              case ST_BatchTexTGCxformAcMul:
                goto $LN70_8;
              case ST_InstancedTexTGCxformAc:
                return 327i64;
              case ST_InstancedTexTGCxformAcMul:
                goto $LN403_2;
              case ST_Position3dTexTGCxformAc:
                goto $LN71_16;
              case ST_Position3dTexTGCxformAcMul:
                goto $LN72_12;
              case ST_BatchPosition3dTexTGCxformAc:
                goto $LN73_8;
              case ST_BatchPosition3dTexTGCxformAcMul:
                goto $LN74_13;
              case ST_InstancedPosition3dTexTGCxformAc:
                goto $LN431_0;
              case ST_InstancedPosition3dTexTGCxformAcMul:
                goto $LN432_0;
              case ST_TexTGCxformAcEAlpha:
                goto $LN75_16;
              case ST_TexTGCxformAcEAlphaMul:
                goto $LN76_15;
              case ST_BatchTexTGCxformAcEAlpha:
                goto $LN77_17;
              case ST_BatchTexTGCxformAcEAlphaMul:
                goto $LN78_11;
              case ST_InstancedTexTGCxformAcEAlpha:
                goto $LN395_1;
              case ST_InstancedTexTGCxformAcEAlphaMul:
                goto $LN387_2;
              case ST_Position3dTexTGCxformAcEAlpha:
                goto $LN79_13;
              case ST_Position3dTexTGCxformAcEAlphaMul:
                goto $LN80_11;
              case ST_BatchPosition3dTexTGCxformAcEAlpha:
                goto $LN81_14;
              case ST_BatchPosition3dTexTGCxformAcEAlphaMul:
                goto $LN82_12;
              case ST_InstancedPosition3dTexTGCxformAcEAlpha:
                goto $LN448_0;
              case ST_InstancedPosition3dTexTGCxformAcEAlphaMul:
                goto $LN455_1;
              case ST_TexTGCxformAcInv:
                goto $LN83_8;
              case ST_BatchTexTGCxformAcInv:
                goto $LN84_14;
              case ST_InstancedTexTGCxformAcInv:
                goto $LN380_1;
              case ST_Position3dTexTGCxformAcInv:
                goto $LN85_12;
              case ST_BatchPosition3dTexTGCxformAcInv:
                goto $LN86_13;
              case ST_InstancedPosition3dTexTGCxformAcInv:
                return 407i64;
              case ST_TexTGCxformAcEAlphaInv:
                goto $LN87_10;
              case ST_BatchTexTGCxformAcEAlphaInv:
                goto $LN88_10;
              case ST_InstancedTexTGCxformAcEAlphaInv:
                goto $LN388_0;
              case ST_Position3dTexTGCxformAcEAlphaInv:
                goto $LN89_15;
              case ST_BatchPosition3dTexTGCxformAcEAlphaInv:
                goto $LN90_11;
              case ST_InstancedPosition3dTexTGCxformAcEAlphaInv:
                goto $LN456_0;
              default:
                return 0i64;
            }
          }
          return 21i64;
        }
        if ( shader <= ST_VertexCxformAc )
        {
          if ( shader != ST_VertexCxformAc )
          {
            switch ( shader )
            {
              case ST_VertexMul:
                goto $LN92_8;
              case ST_BatchVertex:
                goto $LN701;
              case ST_BatchVertexMul:
                goto $LN94_7;
              case ST_InstancedVertex:
                goto $LN399_2;
              case ST_InstancedVertexMul:
                goto $LN327_4;
              case ST_Position3dVertex:
                goto $LN95_7;
              case ST_Position3dVertexMul:
                goto $LN96_6;
              case ST_BatchPosition3dVertex:
                goto $LN97_7;
              case ST_BatchPosition3dVertexMul:
                goto $LN98_9;
              case ST_InstancedPosition3dVertex:
                return 411i64;
              case ST_InstancedPosition3dVertexMul:
                goto $LN511_0;
              case ST_VertexCxform:
                goto $LN99_8;
              case ST_VertexCxformMul:
                goto $LN100_6;
              case ST_BatchVertexCxform:
                goto $LN101_7;
              case ST_BatchVertexCxformMul:
                goto $LN102_10;
              case ST_InstancedVertexCxform:
                goto $LN340_1;
              case ST_InstancedVertexCxformMul:
                goto $LN345_1;
              case ST_Position3dVertexCxform:
                goto $LN103_6;
              case ST_Position3dVertexCxformMul:
                goto $LN104_7;
              case ST_BatchPosition3dVertexCxform:
                goto $LN105_8;
              case ST_BatchPosition3dVertexCxformMul:
                goto $LN106_9;
              case ST_InstancedPosition3dVertexCxform:
                goto $LN480_0;
              case ST_InstancedPosition3dVertexCxformMul:
                goto $LN503_0;
              case ST_VertexEAlpha:
                goto $LN107_8;
              case ST_VertexEAlphaMul:
                goto $LN108_7;
              case ST_BatchVertexEAlpha:
                goto $LN109_10;
              case ST_BatchVertexEAlphaMul:
                goto $LN110_7;
              case ST_InstancedVertexEAlpha:
                goto $LN333_1;
              case ST_InstancedVertexEAlphaMul:
                goto $LN339_0;
              case ST_Position3dVertexEAlpha:
                goto $LN111_7;
              case ST_Position3dVertexEAlphaMul:
                goto $LN112_8;
              case ST_BatchPosition3dVertexEAlpha:
                goto $LN113_10;
              case ST_BatchPosition3dVertexEAlphaMul:
                goto $LN114_7;
              case ST_InstancedPosition3dVertexEAlpha:
                goto $LN495_0;
              case ST_InstancedPosition3dVertexEAlphaMul:
                goto $LN479_1;
              case ST_VertexCxformEAlpha:
                goto $LN115_13;
              case ST_VertexCxformEAlphaMul:
                goto $LN116_7;
              case ST_BatchVertexCxformEAlpha:
                goto $LN117_8;
              case ST_BatchVertexCxformEAlphaMul:
                goto $LN118_8;
              case ST_InstancedVertexCxformEAlpha:
                goto $LN377_0;
              case ST_InstancedVertexCxformEAlphaMul:
                goto $LN356_1;
              case ST_Position3dVertexCxformEAlpha:
                goto $LN119_9;
              case ST_Position3dVertexCxformEAlphaMul:
                goto $LN120_7;
              case ST_BatchPosition3dVertexCxformEAlpha:
                goto $LN121_6;
              case ST_BatchPosition3dVertexCxformEAlphaMul:
                goto $LN122_6;
              case ST_InstancedPosition3dVertexCxformEAlpha:
                goto $LN472_0;
              case ST_InstancedPosition3dVertexCxformEAlphaMul:
                goto $LN499_1;
              case ST_VertexInv:
                goto $LN123_7;
              case ST_BatchVertexInv:
                goto $LN124_7;
              case ST_InstancedVertexInv:
                goto $LN328_1;
              case ST_Position3dVertexInv:
                goto $LN125_7;
              case ST_BatchPosition3dVertexInv:
                goto $LN126_6;
              case ST_InstancedPosition3dVertexInv:
                goto $LN464_1;
              case ST_VertexCxformInv:
                goto $LN127_5;
              case ST_BatchVertexCxformInv:
                goto $LN128_4;
              case ST_InstancedVertexCxformInv:
                goto $LN355_1;
              case ST_Position3dVertexCxformInv:
                goto $LN129_5;
              case ST_BatchPosition3dVertexCxformInv:
                goto $LN130_9;
              case ST_InstancedPosition3dVertexCxformInv:
                goto $LN471_1;
              case ST_VertexEAlphaInv:
                goto $LN131_6;
              case ST_BatchVertexEAlphaInv:
                goto $LN132_6;
              case ST_InstancedVertexEAlphaInv:
                goto $LN349_0;
              case ST_Position3dVertexEAlphaInv:
                goto $LN133_39;
              case ST_BatchPosition3dVertexEAlphaInv:
                goto $LN134_8;
              case ST_InstancedPosition3dVertexEAlphaInv:
                goto $LN515_0;
              case ST_VertexCxformEAlphaInv:
                goto $LN135_1;
              case ST_BatchVertexCxformEAlphaInv:
                goto $LN136_7;
              case ST_InstancedVertexCxformEAlphaInv:
                goto $LN369_0;
              case ST_Position3dVertexCxformEAlphaInv:
                goto $LN137_3;
              case ST_BatchPosition3dVertexCxformEAlphaInv:
                goto $LN138_5;
              case ST_InstancedPosition3dVertexCxformEAlphaInv:
                goto $LN487_0;
              default:
                return 0i64;
            }
          }
          return 33i64;
        }
        if ( shader <= ST_TexTGTexTG )
        {
          if ( shader != ST_TexTGTexTG )
          {
            switch ( shader )
            {
              case ST_VertexCxformAcMul:
                goto $LN140_4;
              case ST_BatchVertexCxformAc:
                goto $LN749;
              case ST_BatchVertexCxformAcMul:
                goto $LN142_2;
              case ST_InstancedVertexCxformAc:
                goto $LN363_0;
              case ST_InstancedVertexCxformAcMul:
                goto $LN364_1;
              case ST_Position3dVertexCxformAc:
                goto $LN143_6;
              case ST_Position3dVertexCxformAcMul:
                goto $LN144_1;
              case ST_BatchPosition3dVertexCxformAc:
                goto $LN145_4;
              case ST_BatchPosition3dVertexCxformAcMul:
                goto $LN146_2;
              case ST_InstancedPosition3dVertexCxformAc:
                goto $LN488_2;
              case ST_InstancedPosition3dVertexCxformAcMul:
                goto $LN507_0;
              case ST_VertexCxformAcEAlpha:
                goto $LN147_1;
              case ST_VertexCxformAcEAlphaMul:
                goto $LN148_3;
              case ST_BatchVertexCxformAcEAlpha:
                goto $LN149_5;
              case ST_BatchVertexCxformAcEAlphaMul:
                goto $LN150_8;
              case ST_InstancedVertexCxformAcEAlpha:
                goto $LN383_0;
              case ST_InstancedVertexCxformAcEAlphaMul:
                goto $LN405_2;
              case ST_Position3dVertexCxformAcEAlpha:
                goto $LN151_5;
              case ST_Position3dVertexCxformAcEAlphaMul:
                goto $LN152_4;
              case ST_BatchPosition3dVertexCxformAcEAlpha:
                goto $LN153_1;
              case ST_BatchPosition3dVertexCxformAcEAlphaMul:
                goto $LN154_7;
              case ST_InstancedPosition3dVertexCxformAcEAlpha:
                goto $LN520_0;
              case ST_InstancedPosition3dVertexCxformAcEAlphaMul:
                goto $LN535_0;
              case ST_VertexCxformAcInv:
                goto $LN155_3;
              case ST_BatchVertexCxformAcInv:
                goto $LN156_10;
              case ST_InstancedVertexCxformAcInv:
                goto $LN373_3;
              case ST_Position3dVertexCxformAcInv:
                goto $LN157_3;
              case ST_BatchPosition3dVertexCxformAcInv:
                goto $LN158_3;
              case ST_InstancedPosition3dVertexCxformAcInv:
                return 425i64;
              case ST_VertexCxformAcEAlphaInv:
                goto $LN159_4;
              case ST_BatchVertexCxformAcEAlphaInv:
                goto $LN160_4;
              case ST_InstancedVertexCxformAcEAlphaInv:
                goto $LN384_2;
              case ST_Position3dVertexCxformAcEAlphaInv:
                goto $LN161_4;
              case ST_BatchPosition3dVertexCxformAcEAlphaInv:
                goto $LN162_1;
              case ST_InstancedPosition3dVertexCxformAcEAlphaInv:
                goto $LN527_1;
              default:
                return 0i64;
            }
          }
          return 39i64;
        }
        if ( shader <= ST_TexTGTexTGCxformAc )
        {
          if ( shader != ST_TexTGTexTGCxformAc )
          {
            switch ( shader )
            {
              case ST_TexTGTexTGMul:
                goto $LN164_4;
              case ST_BatchTexTGTexTG:
                goto $LN773;
              case ST_BatchTexTGTexTGMul:
                goto $LN166_5;
              case ST_InstancedTexTGTexTG:
                goto $LN397_2;
              case ST_InstancedTexTGTexTGMul:
                goto $LN392_1;
              case ST_Position3dTexTGTexTG:
                goto $LN167_3;
              case ST_Position3dTexTGTexTGMul:
                goto $LN168_4;
              case ST_BatchPosition3dTexTGTexTG:
                goto $LN169_11;
              case ST_BatchPosition3dTexTGTexTGMul:
                goto $LN170_4;
              case ST_InstancedPosition3dTexTGTexTG:
                goto $LN528_0;
              case ST_InstancedPosition3dTexTGTexTGMul:
                goto $LN411_1;
              case ST_TexTGTexTGCxform:
                goto $LN171_5;
              case ST_TexTGTexTGCxformMul:
                goto $LN172_7;
              case ST_BatchTexTGTexTGCxform:
                goto $LN173_5;
              case ST_BatchTexTGTexTGCxformMul:
                goto $LN174_2;
              case ST_InstancedTexTGTexTGCxform:
                goto $LN348_0;
              case ST_InstancedTexTGTexTGCxformMul:
                goto $LN338_0;
              case ST_Position3dTexTGTexTGCxform:
                goto $LN175_5;
              case ST_Position3dTexTGTexTGCxformMul:
                goto $LN176_4;
              case ST_BatchPosition3dTexTGTexTGCxform:
                goto $LN177_2;
              case ST_BatchPosition3dTexTGTexTGCxformMul:
                goto $LN178_2;
              case ST_InstancedPosition3dTexTGTexTGCxform:
                goto $LN419_0;
              case ST_InstancedPosition3dTexTGTexTGCxformMul:
                goto $LN420_0;
              case ST_TexTGTexTGEAlpha:
                goto $LN179_2;
              case ST_TexTGTexTGEAlphaMul:
                goto $LN180_1;
              case ST_BatchTexTGTexTGEAlpha:
                goto $LN181_0;
              case ST_BatchTexTGTexTGEAlphaMul:
                goto $LN182_5;
              case ST_InstancedTexTGTexTGEAlpha:
                goto $LN933_0;
              case ST_InstancedTexTGTexTGEAlphaMul:
                goto $LN332_0;
              case ST_Position3dTexTGTexTGEAlpha:
                goto $LN183_2;
              case ST_Position3dTexTGTexTGEAlphaMul:
                goto $LN184_3;
              case ST_BatchPosition3dTexTGTexTGEAlpha:
                goto $LN185_3;
              case ST_BatchPosition3dTexTGTexTGEAlphaMul:
                goto $LN186_1;
              case ST_InstancedPosition3dTexTGTexTGEAlpha:
                goto $LN412_1;
              case ST_InstancedPosition3dTexTGTexTGEAlphaMul:
                goto $LN445_0;
              case ST_TexTGTexTGCxformEAlpha:
                goto $LN187_2;
              case ST_TexTGTexTGCxformEAlphaMul:
                goto $LN188_8;
              case ST_BatchTexTGTexTGCxformEAlpha:
                goto $LN189_5;
              case ST_BatchTexTGTexTGCxformEAlphaMul:
                goto $LN190_6;
              case ST_InstancedTexTGTexTGCxformEAlpha:
                goto $LN961;
              case ST_InstancedTexTGTexTGCxformEAlphaMul:
                goto $LN376_1;
              case ST_Position3dTexTGTexTGCxformEAlpha:
                goto $LN191_4;
              case ST_Position3dTexTGTexTGCxformEAlphaMul:
                goto $LN192_2;
              case ST_BatchPosition3dTexTGTexTGCxformEAlpha:
                goto $LN193_3;
              case ST_BatchPosition3dTexTGTexTGCxformEAlphaMul:
                goto $LN194_2;
              case ST_InstancedPosition3dTexTGTexTGCxformEAlpha:
                goto $LN436_0;
              case ST_InstancedPosition3dTexTGTexTGCxformEAlphaMul:
                goto $LN451_2;
              case ST_TexTGTexTGInv:
                goto $LN195_7;
              case ST_BatchTexTGTexTGInv:
                goto $LN196_4;
              case ST_InstancedTexTGTexTGInv:
                goto $LN401_0;
              case ST_Position3dTexTGTexTGInv:
                goto $LN197_8;
              case ST_BatchPosition3dTexTGTexTGInv:
                goto $LN198_8;
              case ST_InstancedPosition3dTexTGTexTGInv:
                goto $LN441_0;
              case ST_TexTGTexTGCxformInv:
                goto $LN199_3;
              case ST_BatchTexTGTexTGCxformInv:
                goto $LN200_3;
              case ST_InstancedTexTGTexTGCxformInv:
                goto $LN344_2;
              case ST_Position3dTexTGTexTGCxformInv:
                goto $LN201_3;
              case ST_BatchPosition3dTexTGTexTGCxformInv:
                goto $LN202_6;
              case ST_InstancedPosition3dTexTGTexTGCxformInv:
                goto $LN435_0;
              case ST_TexTGTexTGEAlphaInv:
                goto $LN203_4;
              case ST_BatchTexTGTexTGEAlphaInv:
                goto $LN204_4;
              case ST_InstancedTexTGTexTGEAlphaInv:
                goto $LN945;
              case ST_Position3dTexTGTexTGEAlphaInv:
                goto $LN205_3;
              case ST_BatchPosition3dTexTGTexTGEAlphaInv:
                goto $LN206_4;
              case ST_InstancedPosition3dTexTGTexTGEAlphaInv:
                goto $LN428_0;
              case ST_TexTGTexTGCxformEAlphaInv:
                goto $LN207_1;
              case ST_BatchTexTGTexTGCxformEAlphaInv:
                goto $LN208_1;
              case ST_InstancedTexTGTexTGCxformEAlphaInv:
                goto $LN354_1;
              case ST_Position3dTexTGTexTGCxformEAlphaInv:
                goto $LN209_1;
              case ST_BatchPosition3dTexTGTexTGCxformEAlphaInv:
                goto $LN210_1;
              case ST_InstancedPosition3dTexTGTexTGCxformEAlphaInv:
                goto $LN452_0;
              case ST_TexTGTexTGTexDensity:
                goto $LN211_0;
              case ST_BatchTexTGTexTGTexDensity:
                goto $LN212_0;
              case ST_InstancedTexTGTexTGTexDensity:
                goto $LN391_0;
              case ST_Position3dTexTGTexTGTexDensity:
                goto $LN213_1;
              case ST_BatchPosition3dTexTGTexTGTexDensity:
                goto $LN214_1;
              case ST_InstancedPosition3dTexTGTexTGTexDensity:
                goto $LN539_0;
              case ST_TexTGTexTGEAlphaTexDensity:
                goto $LN215_3;
              case ST_BatchTexTGTexTGEAlphaTexDensity:
                goto $LN216_1;
              case ST_InstancedTexTGTexTGEAlphaTexDensity:
                goto $LN326_0;
              case ST_Position3dTexTGTexTGEAlphaTexDensity:
                goto $LN217_1;
              case ST_BatchPosition3dTexTGTexTGEAlphaTexDensity:
                goto $LN218_0;
              case ST_InstancedPosition3dTexTGTexTGEAlphaTexDensity:
                goto $LN427_1;
              default:
                return 0i64;
            }
          }
          return 53i64;
        }
        if ( shader <= ST_TexTGVertex )
        {
          if ( shader != ST_TexTGVertex )
          {
            switch ( shader )
            {
              case ST_TexTGTexTGCxformAcMul:
                goto $LN220_1;
              case ST_BatchTexTGTexTGCxformAc:
                goto $LN829;
              case ST_BatchTexTGTexTGCxformAcMul:
                goto $LN222_2;
              case ST_InstancedTexTGTexTGCxformAc:
                goto $LN368_2;
              case ST_InstancedTexTGTexTGCxformAcMul:
                goto $LN361_0;
              case ST_Position3dTexTGTexTGCxformAc:
                goto $LN223_4;
              case ST_Position3dTexTGTexTGCxformAcMul:
                goto $LN224_0;
              case ST_BatchPosition3dTexTGTexTGCxformAc:
                goto $LN225_2;
              case ST_BatchPosition3dTexTGTexTGCxformAcMul:
                goto $LN226_0;
              case ST_InstancedPosition3dTexTGTexTGCxformAc:
                goto $LN459_1;
              case ST_InstancedPosition3dTexTGTexTGCxformAcMul:
                goto $LN460_1;
              case ST_TexTGTexTGCxformAcEAlpha:
                goto $LN227_1;
              case ST_TexTGTexTGCxformAcEAlphaMul:
                goto $LN228_1;
              case ST_BatchTexTGTexTGCxformAcEAlpha:
                goto $LN229_0;
              case ST_BatchTexTGTexTGCxformAcEAlphaMul:
                goto $LN230_0;
              case ST_InstancedTexTGTexTGCxformAcEAlpha:
                goto $LN372_2;
              case ST_InstancedTexTGTexTGCxformAcEAlphaMul:
                goto $LN989;
              case ST_Position3dTexTGTexTGCxformAcEAlpha:
                goto $LN231_1;
              case ST_Position3dTexTGTexTGCxformAcEAlphaMul:
                goto $LN232_0;
              case ST_BatchPosition3dTexTGTexTGCxformAcEAlpha:
                goto $LN233_3;
              case ST_BatchPosition3dTexTGTexTGCxformAcEAlphaMul:
                goto $LN234_1;
              case ST_InstancedPosition3dTexTGTexTGCxformAcEAlpha:
                goto $LN513_1;
              case ST_InstancedPosition3dTexTGTexTGCxformAcEAlphaMul:
                goto $LN468_1;
              case ST_TexTGTexTGCxformAcInv:
                goto $LN235_0;
              case ST_BatchTexTGTexTGCxformAcInv:
                goto $LN236_0;
              case ST_InstancedTexTGTexTGCxformAcInv:
                goto $LN362_1;
              case ST_Position3dTexTGTexTGCxformAcInv:
                goto $LN237_1;
              case ST_BatchPosition3dTexTGTexTGCxformAcInv:
                goto $LN238_1;
              case ST_InstancedPosition3dTexTGTexTGCxformAcInv:
                goto $LN467_0;
              case ST_TexTGTexTGCxformAcEAlphaInv:
                goto $LN239_1;
              case ST_BatchTexTGTexTGCxformAcEAlphaInv:
                goto $LN240_1;
              case ST_InstancedTexTGTexTGCxformAcEAlphaInv:
                goto $LN404_1;
              case ST_Position3dTexTGTexTGCxformAcEAlphaInv:
                goto $LN241_0;
              case ST_BatchPosition3dTexTGTexTGCxformAcEAlphaInv:
                goto $LN242_0;
              case ST_InstancedPosition3dTexTGTexTGCxformAcEAlphaInv:
                goto $LN497_0;
              default:
                return 0i64;
            }
          }
          return 59i64;
        }
        if ( shader <= ST_TexTGVertexCxformAc )
        {
          if ( shader != ST_TexTGVertexCxformAc )
          {
            switch ( shader )
            {
              case ST_TexTGVertexMul:
                goto $LN244_2;
              case ST_BatchTexTGVertex:
                goto $LN853;
              case ST_BatchTexTGVertexMul:
                goto $LN246_2;
              case ST_InstancedTexTGVertex:
                goto $LN382_0;
              case ST_InstancedTexTGVertexMul:
                goto $LN389_1;
              case ST_Position3dTexTGVertex:
                goto $LN247_2;
              case ST_Position3dTexTGVertexMul:
                goto $LN248_1;
              case ST_BatchPosition3dTexTGVertex:
                goto $LN249_1;
              case ST_BatchPosition3dTexTGVertexMul:
                goto $LN250_1;
              case ST_InstancedPosition3dTexTGVertex:
                goto $LN483;
              case ST_InstancedPosition3dTexTGVertexMul:
                goto $LN484_3;
              case ST_TexTGVertexCxform:
                goto $LN251_5;
              case ST_TexTGVertexCxformMul:
                goto $LN252_1;
              case ST_BatchTexTGVertexCxform:
                goto $LN253_1;
              case ST_BatchTexTGVertexCxformMul:
                goto $LN254_4;
              case ST_InstancedTexTGVertexCxform:
                goto $LN341_0;
              case ST_InstancedTexTGVertexCxformMul:
                goto $LN350_1;
              case ST_Position3dTexTGVertexCxform:
                goto $LN255_1;
              case ST_Position3dTexTGVertexCxformMul:
                goto $LN256_2;
              case ST_BatchPosition3dTexTGVertexCxform:
                goto $LN257_1;
              case ST_BatchPosition3dTexTGVertexCxformMul:
                goto $LN258_0;
              case ST_InstancedPosition3dTexTGVertexCxform:
                goto $LN492_0;
              case ST_InstancedPosition3dTexTGVertexCxformMul:
                goto $LN509_1;
              case ST_TexTGVertexEAlpha:
                goto $LN259_2;
              case ST_TexTGVertexEAlphaMul:
                goto $LN260_1;
              case ST_BatchTexTGVertexEAlpha:
                goto $LN261_0;
              case ST_BatchTexTGVertexEAlphaMul:
                goto $LN262_3;
              case ST_InstancedTexTGVertexEAlpha:
                goto $LN400_0;
              case ST_InstancedTexTGVertexEAlphaMul:
                goto $LN330_1;
              case ST_Position3dTexTGVertexEAlpha:
                goto $LN263_1;
              case ST_Position3dTexTGVertexEAlphaMul:
                goto $LN264_2;
              case ST_BatchPosition3dTexTGVertexEAlpha:
                goto $LN265_1;
              case ST_BatchPosition3dTexTGVertexEAlphaMul:
                goto $LN266_1;
              case ST_InstancedPosition3dTexTGVertexEAlpha:
                goto $LN475_0;
              case ST_InstancedPosition3dTexTGVertexEAlphaMul:
                goto $LN501_0;
              case ST_TexTGVertexCxformEAlpha:
                goto $LN267_1;
              case ST_TexTGVertexCxformEAlphaMul:
                goto $LN268_0;
              case ST_BatchTexTGVertexCxformEAlpha:
                goto $LN269_2;
              case ST_BatchTexTGVertexCxformEAlphaMul:
                goto $LN270_1;
              case ST_InstancedTexTGVertexCxformEAlpha:
                goto $LN346_1;
              case ST_InstancedTexTGVertexCxformEAlphaMul:
                goto $LN357_1;
              case ST_Position3dTexTGVertexCxformEAlpha:
                goto $LN271_1;
              case ST_Position3dTexTGVertexCxformEAlphaMul:
                goto $LN272_1;
              case ST_BatchPosition3dTexTGVertexCxformEAlpha:
                goto $LN273_2;
              case ST_BatchPosition3dTexTGVertexCxformEAlphaMul:
                goto $LN274_0;
              case ST_InstancedPosition3dTexTGVertexCxformEAlpha:
                goto $LN524_2;
              case ST_InstancedPosition3dTexTGVertexCxformEAlphaMul:
                goto $LN537_0;
              case ST_TexTGVertexInv:
                goto $LN275_2;
              case ST_BatchTexTGVertexInv:
                goto $LN276_0;
              case ST_InstancedTexTGVertexInv:
                goto $LN390_2;
              case ST_Position3dTexTGVertexInv:
                goto $LN277_0;
              case ST_BatchPosition3dTexTGVertexInv:
                goto $LN278_1;
              case ST_InstancedPosition3dTexTGVertexInv:
                goto $LN505_0;
              case ST_TexTGVertexCxformInv:
                goto $LN279_4;
              case ST_BatchTexTGVertexCxformInv:
                goto $LN280_2;
              case ST_InstancedTexTGVertexCxformInv:
                goto $LN342_0;
              case ST_Position3dTexTGVertexCxformInv:
                goto $LN281_1;
              case ST_BatchPosition3dTexTGVertexCxformInv:
                goto $LN282_2;
              case ST_InstancedPosition3dTexTGVertexCxformInv:
                goto $LN523_2;
              case ST_TexTGVertexEAlphaInv:
                goto $LN283_2;
              case ST_BatchTexTGVertexEAlphaInv:
                goto $LN284_1;
              case ST_InstancedTexTGVertexEAlphaInv:
                goto $LN334_1;
              case ST_Position3dTexTGVertexEAlphaInv:
                goto $LN285_2;
              case ST_BatchPosition3dTexTGVertexEAlphaInv:
                goto $LN286_2;
              case ST_InstancedPosition3dTexTGVertexEAlphaInv:
                goto $LN491_2;
              case ST_TexTGVertexCxformEAlphaInv:
                goto $LN287_2;
              case ST_BatchTexTGVertexCxformEAlphaInv:
                goto $LN288_0;
              case ST_InstancedTexTGVertexCxformEAlphaInv:
                goto $LN378_1;
              case ST_Position3dTexTGVertexCxformEAlphaInv:
                goto $LN289_1;
              case ST_BatchPosition3dTexTGVertexCxformEAlphaInv:
                goto $LN290_1;
              case ST_InstancedPosition3dTexTGVertexCxformEAlphaInv:
                goto $LN531_0;
              case ST_TexTGVertexTexDensity:
                goto $LN291_3;
              case ST_BatchTexTGVertexTexDensity:
                goto $LN292_2;
              case ST_InstancedTexTGVertexTexDensity:
                goto $LN396_1;
              case ST_Position3dTexTGVertexTexDensity:
                goto $LN293_1;
              case ST_BatchPosition3dTexTGVertexTexDensity:
                goto $LN294_2;
              case ST_InstancedPosition3dTexTGVertexTexDensity:
                goto $LN517_0;
              case ST_TexTGVertexEAlphaTexDensity:
                goto $LN295_1;
              case ST_BatchTexTGVertexEAlphaTexDensity:
                goto $LN296_7;
              case ST_InstancedTexTGVertexEAlphaTexDensity:
                goto $LN329_0;
              case ST_Position3dTexTGVertexEAlphaTexDensity:
                goto $LN297_1;
              case ST_BatchPosition3dTexTGVertexEAlphaTexDensity:
                goto $LN298_2;
              case ST_InstancedPosition3dTexTGVertexEAlphaTexDensity:
                goto $LN476_0;
              default:
                return 0i64;
            }
          }
          return 73i64;
        }
        if ( shader <= ST_start_base_text )
        {
          if ( shader != ST_start_base_text )
          {
            switch ( shader )
            {
              case ST_TexTGVertexCxformAcMul:
                goto $LN300_2;
              case ST_BatchTexTGVertexCxformAc:
                goto $LN909;
              case ST_BatchTexTGVertexCxformAcMul:
                goto $LN302_0;
              case ST_InstancedTexTGVertexCxformAc:
                goto $LN358_1;
              case ST_InstancedTexTGVertexCxformAcMul:
                goto $LN370_0;
              case ST_Position3dTexTGVertexCxformAc:
                goto $LN303_1;
              case ST_Position3dTexTGVertexCxformAcMul:
                goto $LN304_1;
              case ST_BatchPosition3dTexTGVertexCxformAc:
                goto $LN305_2;
              case ST_BatchPosition3dTexTGVertexCxformAcMul:
                goto $LN306_1;
              case ST_InstancedPosition3dTexTGVertexCxformAc:
                goto $LN532_1;
              case ST_InstancedPosition3dTexTGVertexCxformAcMul:
                goto $LN541_8;
              case ST_TexTGVertexCxformAcEAlpha:
                goto $LN307_2;
              case ST_TexTGVertexCxformAcEAlphaMul:
                goto $LN308_2;
              case ST_BatchTexTGVertexCxformAcEAlpha:
                goto $LN309_2;
              case ST_BatchTexTGVertexCxformAcEAlphaMul:
                goto $LN310_0;
              case ST_InstancedTexTGVertexCxformAcEAlpha:
                goto $LN366_0;
              case ST_InstancedTexTGVertexCxformAcEAlphaMul:
                goto $LN374_0;
              case ST_Position3dTexTGVertexCxformAcEAlpha:
                goto $LN311_0;
              case ST_Position3dTexTGVertexCxformAcEAlphaMul:
                goto $LN312_1;
              case ST_BatchPosition3dTexTGVertexCxformAcEAlpha:
                goto $LN313_1;
              case ST_BatchPosition3dTexTGVertexCxformAcEAlphaMul:
                goto $LN314_2;
              case ST_InstancedPosition3dTexTGVertexCxformAcEAlpha:
                goto $LN440_0;
              case ST_InstancedPosition3dTexTGVertexCxformAcEAlphaMul:
                goto $LN410_1;
              case ST_TexTGVertexCxformAcInv:
                goto $LN315_1;
              case ST_BatchTexTGVertexCxformAcInv:
                goto $LN316_1;
              case ST_InstancedTexTGVertexCxformAcInv:
                goto $LN365_0;
              case ST_Position3dTexTGVertexCxformAcInv:
                goto $LN317_0;
              case ST_BatchPosition3dTexTGVertexCxformAcInv:
                goto $LN318_2;
              case ST_InstancedPosition3dTexTGVertexCxformAcInv:
                goto $LN1017;
              case ST_TexTGVertexCxformAcEAlphaInv:
                goto $LN319_2;
              case ST_BatchTexTGVertexCxformAcEAlphaInv:
                goto $LN320_2;
              case ST_InstancedTexTGVertexCxformAcEAlphaInv:
                goto $LN385_1;
              case ST_Position3dTexTGVertexCxformAcEAlphaInv:
                goto $LN321_3;
              case ST_BatchPosition3dTexTGVertexCxformAcEAlphaInv:
                goto $LN322_0;
              case ST_InstancedPosition3dTexTGVertexCxformAcEAlphaInv:
                goto $LN425_1;
              default:
                return 0i64;
            }
          }
          return 469i64;
        }
        if ( shader <= ST_Text )
        {
          if ( shader != ST_Text )
          {
            switch ( shader )
            {
              case ST_SolidMul:
                goto $LN1696;
              case ST_BatchSolid:
                goto $LN461_0;
              case ST_BatchSolidMul:
                goto $LN462_1;
              case ST_InstancedSolid:
                return 553i64;
              case ST_InstancedSolidMul:
                return 554i64;
              case ST_Position3dSolid:
                goto $LN489_0;
              case ST_Position3dSolidMul:
                goto $LN490_1;
              case ST_BatchPosition3dSolid:
                goto $LN542_8;
              case ST_BatchPosition3dSolidMul:
                return 533i64;
              case ST_InstancedPosition3dSolid:
                return 574i64;
              case ST_InstancedPosition3dSolidMul:
                return 575i64;
              case ST_SolidInv:
                goto $LN417_1;
              case ST_BatchSolidInv:
                goto $LN469_2;
              case ST_InstancedSolidInv:
                return 555i64;
              case ST_Position3dSolidInv:
                goto $LN508_1;
              case ST_BatchPosition3dSolidInv:
                return 534i64;
              case ST_InstancedPosition3dSolidInv:
                return 576i64;
              default:
                return 0i64;
            }
          }
          return 472i64;
        }
        if ( shader <= ST_TexUV )
        {
          if ( shader != ST_TexUV )
          {
            switch ( shader )
            {
              case ST_TextMul:
                goto $LN1714;
              case ST_BatchText:
                goto $LN514_1;
              case ST_BatchTextMul:
                goto $LN498_0;
              case ST_InstancedText:
                return 556i64;
              case ST_InstancedTextMul:
                return 558i64;
              case ST_Position3dText:
                goto $LN1129;
              case ST_Position3dTextMul:
                goto $LN536_2;
              case ST_BatchPosition3dText:
                return 535i64;
              case ST_BatchPosition3dTextMul:
                return 537i64;
              case ST_InstancedPosition3dText:
                return 577i64;
              case ST_InstancedPosition3dTextMul:
                return 579i64;
              case ST_TextInv:
                goto $LN1057;
              case ST_BatchTextInv:
                goto $LN485_0;
              case ST_InstancedTextInv:
                return 559i64;
              case ST_Position3dTextInv:
                goto $LN529_0;
              case ST_BatchPosition3dTextInv:
                return 538i64;
              case ST_InstancedPosition3dTextInv:
                return 580i64;
              case ST_TextTexDensity:
                goto $LN433_0;
              case ST_BatchTextTexDensity:
                goto $LN470_1;
              case ST_InstancedTextTexDensity:
                return 557i64;
              case ST_Position3dTextTexDensity:
                goto $LN522_0;
              case ST_BatchPosition3dTextTexDensity:
                return 536i64;
              case ST_InstancedPosition3dTextTexDensity:
                return 578i64;
              default:
                return 0i64;
            }
          }
          return 476i64;
        }
        if ( shader <= ST_ATexUV )
        {
          if ( shader != ST_ATexUV )
          {
            switch ( shader )
            {
              case ST_TexUVMul:
                goto $LN1738;
              case ST_BatchTexUV:
                goto $LN518_1;
              case ST_BatchTexUVMul:
                goto $LN506_0;
              case ST_InstancedTexUV:
                return 560i64;
              case ST_InstancedTexUVMul:
                return 562i64;
              case ST_Position3dTexUV:
                goto $LN530_0;
              case ST_Position3dTexUVMul:
                goto $LN413_0;
              case ST_BatchPosition3dTexUV:
                return 539i64;
              case ST_BatchPosition3dTexUVMul:
                return 541i64;
              case ST_InstancedPosition3dTexUV:
                return 581i64;
              case ST_InstancedPosition3dTexUVMul:
                return 583i64;
              case ST_TexUVCxform:
                goto $LN512_0;
              case ST_TexUVCxformMul:
                goto $LN466_0;
              case ST_BatchTexUVCxform:
                goto $LN478_0;
              case ST_BatchTexUVCxformMul:
                goto $LN502_0;
              case ST_InstancedTexUVCxform:
                return 564i64;
              case ST_InstancedTexUVCxformMul:
                return 565i64;
              case ST_Position3dTexUVCxform:
                goto $LN414_0;
              case ST_Position3dTexUVCxformMul:
                goto $LN429_0;
              case ST_BatchPosition3dTexUVCxform:
                return 543i64;
              case ST_BatchPosition3dTexUVCxformMul:
                return 544i64;
              case ST_InstancedPosition3dTexUVCxform:
                return 585i64;
              case ST_InstancedPosition3dTexUVCxformMul:
                return 586i64;
              case ST_TexUVInv:
                goto $LN1073_0;
              case ST_BatchTexUVInv:
                goto $LN477_1;
              case ST_InstancedTexUVInv:
                return 563i64;
              case ST_Position3dTexUVInv:
                goto $LN442_0;
              case ST_BatchPosition3dTexUVInv:
                return 542i64;
              case ST_InstancedPosition3dTexUVInv:
                return 584i64;
              case ST_TexUVCxformInv:
                goto $LN496_0;
              case ST_BatchTexUVCxformInv:
                goto $LN493_0;
              case ST_InstancedTexUVCxformInv:
                return 566i64;
              case ST_Position3dTexUVCxformInv:
                goto $LN446_0;
              case ST_BatchPosition3dTexUVCxformInv:
                return 545i64;
              case ST_InstancedPosition3dTexUVCxformInv:
                return 587i64;
              case ST_TexUVTexDensity:
                goto $LN457_2;
              case ST_BatchTexUVTexDensity:
                goto $LN486_3;
              case ST_InstancedTexUVTexDensity:
                return 561i64;
              case ST_Position3dTexUVTexDensity:
                goto $LN540_1;
              case ST_BatchPosition3dTexUVTexDensity:
                return 540i64;
              case ST_InstancedPosition3dTexUVTexDensity:
                return 582i64;
              default:
                return 0i64;
            }
          }
          return 483i64;
        }
        if ( shader <= ST_start_base_video )
        {
          if ( shader != ST_start_base_video )
          {
            switch ( shader )
            {
              case ST_ATexUVMul:
                goto $LN1780;
              case ST_BatchATexUV:
                goto $LN494_1;
              case ST_BatchATexUVMul:
                goto $LN525_0;
              case ST_InstancedATexUV:
                return 567i64;
              case ST_InstancedATexUVMul:
                return 569i64;
              case ST_Position3dATexUV:
                goto $LN430_0;
              case ST_Position3dATexUVMul:
                goto $LN422_1;
              case ST_BatchPosition3dATexUV:
                return 546i64;
              case ST_BatchPosition3dATexUVMul:
                return 548i64;
              case ST_InstancedPosition3dATexUV:
                return 588i64;
              case ST_InstancedPosition3dATexUVMul:
                return 590i64;
              case ST_ATexUVCxform:
                goto $LN473_0;
              case ST_ATexUVCxformMul:
                goto $LN474_0;
              case ST_BatchATexUVCxform:
                goto $LN538_0;
              case ST_BatchATexUVCxformMul:
                goto $LN533_0;
              case ST_InstancedATexUVCxform:
                return 571i64;
              case ST_InstancedATexUVCxformMul:
                return 572i64;
              case ST_Position3dATexUVCxform:
                goto $LN438_0;
              case ST_Position3dATexUVCxformMul:
                goto $LN453_1;
              case ST_BatchPosition3dATexUVCxform:
                return 550i64;
              case ST_BatchPosition3dATexUVCxformMul:
                return 551i64;
              case ST_InstancedPosition3dATexUVCxform:
                return 592i64;
              case ST_InstancedPosition3dATexUVCxformMul:
                return 593i64;
              case ST_ATexUVInv:
                goto $LN504_2;
              case ST_BatchATexUVInv:
                goto $LN526_0;
              case ST_InstancedATexUVInv:
                return 570i64;
              case ST_Position3dATexUVInv:
                goto $LN437_2;
              case ST_BatchPosition3dATexUVInv:
                return 549i64;
              case ST_InstancedPosition3dATexUVInv:
                return 591i64;
              case ST_ATexUVCxformInv:
                goto $LN500_1;
              case ST_BatchATexUVCxformInv:
                goto $LN534_1;
              case ST_InstancedATexUVCxformInv:
                return 573i64;
              case ST_Position3dATexUVCxformInv:
                goto $LN454_1;
              case ST_BatchPosition3dATexUVCxformInv:
                return 552i64;
              case ST_InstancedPosition3dATexUVCxformInv:
                return 594i64;
              case ST_ATexUVTexDensity:
                goto $LN516_1;
              case ST_BatchATexUVTexDensity:
                goto $LN510_0;
              case ST_InstancedATexUVTexDensity:
                return 568i64;
              case ST_Position3dATexUVTexDensity:
                goto $LN421_1;
              case ST_BatchPosition3dATexUVTexDensity:
                return 547i64;
              case ST_InstancedPosition3dATexUVTexDensity:
                return 589i64;
              default:
                return 0i64;
            }
          }
          return 595i64;
        }
        if ( shader <= ST_YUVCxformAc )
        {
          if ( shader != ST_YUVCxformAc )
          {
            switch ( shader )
            {
              case ST_YUVMul:
                return 597i64;
              case ST_BatchYUV:
                result = 663i64;
                break;
              case ST_BatchYUVMul:
                result = 665i64;
                break;
              case ST_InstancedYUV:
                result = 731i64;
                break;
              case ST_InstancedYUVMul:
                result = 733i64;
                break;
              case ST_Position3dYUV:
                result = 629i64;
                break;
              case ST_Position3dYUVMul:
                result = 631i64;
                break;
              case ST_BatchPosition3dYUV:
                result = 697i64;
                break;
              case ST_BatchPosition3dYUVMul:
                result = 699i64;
                break;
              case ST_InstancedPosition3dYUV:
                result = 765i64;
                break;
              case ST_InstancedPosition3dYUVMul:
                result = 767i64;
                break;
              case ST_YUVCxform:
                return 601i64;
              case ST_YUVCxformMul:
                return 602i64;
              case ST_BatchYUVCxform:
                result = 669i64;
                break;
              case ST_BatchYUVCxformMul:
                result = 670i64;
                break;
              case ST_InstancedYUVCxform:
                result = 737i64;
                break;
              case ST_InstancedYUVCxformMul:
                result = 738i64;
                break;
              case ST_Position3dYUVCxform:
                result = 635i64;
                break;
              case ST_Position3dYUVCxformMul:
                result = 636i64;
                break;
              case ST_BatchPosition3dYUVCxform:
                result = 703i64;
                break;
              case ST_BatchPosition3dYUVCxformMul:
                result = 704i64;
                break;
              case ST_InstancedPosition3dYUVCxform:
                result = 771i64;
                break;
              case ST_InstancedPosition3dYUVCxformMul:
                result = 772i64;
                break;
              case ST_YUVEAlpha:
                return 598i64;
              case ST_YUVEAlphaMul:
                return 600i64;
              case ST_BatchYUVEAlpha:
                result = 666i64;
                break;
              case ST_BatchYUVEAlphaMul:
                result = 668i64;
                break;
              case ST_InstancedYUVEAlpha:
                result = 734i64;
                break;
              case ST_InstancedYUVEAlphaMul:
                result = 736i64;
                break;
              case ST_Position3dYUVEAlpha:
                result = 632i64;
                break;
              case ST_Position3dYUVEAlphaMul:
                result = 634i64;
                break;
              case ST_BatchPosition3dYUVEAlpha:
                result = 700i64;
                break;
              case ST_BatchPosition3dYUVEAlphaMul:
                result = 702i64;
                break;
              case ST_InstancedPosition3dYUVEAlpha:
                result = 768i64;
                break;
              case ST_InstancedPosition3dYUVEAlphaMul:
                result = 770i64;
                break;
              case ST_YUVCxformEAlpha:
                return 603i64;
              case ST_YUVCxformEAlphaMul:
                return 604i64;
              case ST_BatchYUVCxformEAlpha:
                result = 671i64;
                break;
              case ST_BatchYUVCxformEAlphaMul:
                result = 672i64;
                break;
              case ST_InstancedYUVCxformEAlpha:
                result = 739i64;
                break;
              case ST_InstancedYUVCxformEAlphaMul:
                result = 740i64;
                break;
              case ST_Position3dYUVCxformEAlpha:
                result = 637i64;
                break;
              case ST_Position3dYUVCxformEAlphaMul:
                result = 638i64;
                break;
              case ST_BatchPosition3dYUVCxformEAlpha:
                result = 705i64;
                break;
              case ST_BatchPosition3dYUVCxformEAlphaMul:
                result = 706i64;
                break;
              case ST_InstancedPosition3dYUVCxformEAlpha:
                result = 773i64;
                break;
              case ST_InstancedPosition3dYUVCxformEAlphaMul:
                result = 774i64;
                break;
              case ST_YUVTexDensity:
                return 596i64;
              case ST_BatchYUVTexDensity:
                result = 664i64;
                break;
              case ST_InstancedYUVTexDensity:
                result = 732i64;
                break;
              case ST_Position3dYUVTexDensity:
                result = 630i64;
                break;
              case ST_BatchPosition3dYUVTexDensity:
                result = 698i64;
                break;
              case ST_InstancedPosition3dYUVTexDensity:
                result = 766i64;
                break;
              case ST_YUVEAlphaTexDensity:
                return 599i64;
              case ST_BatchYUVEAlphaTexDensity:
                result = 667i64;
                break;
              case ST_InstancedYUVEAlphaTexDensity:
                result = 735i64;
                break;
              case ST_Position3dYUVEAlphaTexDensity:
                result = 633i64;
                break;
              case ST_BatchPosition3dYUVEAlphaTexDensity:
                result = 701i64;
                break;
              case ST_InstancedPosition3dYUVEAlphaTexDensity:
                result = 769i64;
                break;
              default:
                return 0i64;
            }
            return result;
          }
          return 605i64;
        }
        if ( shader <= ST_YUVA )
        {
          if ( shader == ST_YUVA )
            return 609i64;
          switch ( shader )
          {
            case ST_YUVCxformAcMul:
              return 606i64;
            case ST_BatchYUVCxformAc:
              result = 673i64;
              break;
            case ST_BatchYUVCxformAcMul:
              result = 674i64;
              break;
            case ST_InstancedYUVCxformAc:
              result = 741i64;
              break;
            case ST_InstancedYUVCxformAcMul:
              result = 742i64;
              break;
            case ST_Position3dYUVCxformAc:
              result = 639i64;
              break;
            case ST_Position3dYUVCxformAcMul:
              result = 640i64;
              break;
            case ST_BatchPosition3dYUVCxformAc:
              result = 707i64;
              break;
            case ST_BatchPosition3dYUVCxformAcMul:
              result = 708i64;
              break;
            case ST_InstancedPosition3dYUVCxformAc:
              result = 775i64;
              break;
            case ST_InstancedPosition3dYUVCxformAcMul:
              result = 776i64;
              break;
            case ST_YUVCxformAcEAlpha:
              result = 607i64;
              break;
            case ST_YUVCxformAcEAlphaMul:
              result = 608i64;
              break;
            case ST_BatchYUVCxformAcEAlpha:
              result = 675i64;
              break;
            case ST_BatchYUVCxformAcEAlphaMul:
              result = 676i64;
              break;
            case ST_InstancedYUVCxformAcEAlpha:
              result = 743i64;
              break;
            case ST_InstancedYUVCxformAcEAlphaMul:
              result = 744i64;
              break;
            case ST_Position3dYUVCxformAcEAlpha:
              result = 641i64;
              break;
            case ST_Position3dYUVCxformAcEAlphaMul:
              result = 642i64;
              break;
            case ST_BatchPosition3dYUVCxformAcEAlpha:
              result = 709i64;
              break;
            case ST_BatchPosition3dYUVCxformAcEAlphaMul:
              result = 710i64;
              break;
            case ST_InstancedPosition3dYUVCxformAcEAlpha:
              result = 777i64;
              break;
            case ST_InstancedPosition3dYUVCxformAcEAlphaMul:
              result = 778i64;
              break;
            default:
              return 0i64;
          }
          return result;
        }
        if ( shader <= ST_YUVACxformAc )
        {
          if ( shader == ST_YUVACxformAc )
            return 623i64;
          switch ( shader )
          {
            case ST_YUVAMul:
              result = 611i64;
              break;
            case ST_BatchYUVA:
              result = 677i64;
              break;
            case ST_BatchYUVAMul:
              result = 679i64;
              break;
            case ST_InstancedYUVA:
              result = 745i64;
              break;
            case ST_InstancedYUVAMul:
              result = 747i64;
              break;
            case ST_Position3dYUVA:
              result = 643i64;
              break;
            case ST_Position3dYUVAMul:
              result = 645i64;
              break;
            case ST_BatchPosition3dYUVA:
              result = 711i64;
              break;
            case ST_BatchPosition3dYUVAMul:
              result = 713i64;
              break;
            case ST_InstancedPosition3dYUVA:
              result = 779i64;
              break;
            case ST_InstancedPosition3dYUVAMul:
              result = 781i64;
              break;
            case ST_YUVACxform:
              result = 617i64;
              break;
            case ST_YUVACxformMul:
              result = 618i64;
              break;
            case ST_BatchYUVACxform:
              result = 685i64;
              break;
            case ST_BatchYUVACxformMul:
              result = 686i64;
              break;
            case ST_InstancedYUVACxform:
              result = 753i64;
              break;
            case ST_InstancedYUVACxformMul:
              result = 754i64;
              break;
            case ST_Position3dYUVACxform:
              result = 651i64;
              break;
            case ST_Position3dYUVACxformMul:
              result = 652i64;
              break;
            case ST_BatchPosition3dYUVACxform:
              result = 719i64;
              break;
            case ST_BatchPosition3dYUVACxformMul:
              result = 720i64;
              break;
            case ST_InstancedPosition3dYUVACxform:
              result = 787i64;
              break;
            case ST_InstancedPosition3dYUVACxformMul:
              result = 788i64;
              break;
            case ST_YUVAEAlpha:
              result = 613i64;
              break;
            case ST_YUVAEAlphaMul:
              result = 615i64;
              break;
            case ST_BatchYUVAEAlpha:
              result = 681i64;
              break;
            case ST_BatchYUVAEAlphaMul:
              result = 683i64;
              break;
            case ST_InstancedYUVAEAlpha:
              result = 749i64;
              break;
            case ST_InstancedYUVAEAlphaMul:
              result = 751i64;
              break;
            case ST_Position3dYUVAEAlpha:
              result = 647i64;
              break;
            case ST_Position3dYUVAEAlphaMul:
              result = 649i64;
              break;
            case ST_BatchPosition3dYUVAEAlpha:
              result = 715i64;
              break;
            case ST_BatchPosition3dYUVAEAlphaMul:
              result = 717i64;
              break;
            case ST_InstancedPosition3dYUVAEAlpha:
              result = 783i64;
              break;
            case ST_InstancedPosition3dYUVAEAlphaMul:
              result = 785i64;
              break;
            case ST_YUVACxformEAlpha:
              result = 620i64;
              break;
            case ST_YUVACxformEAlphaMul:
              result = 621i64;
              break;
            case ST_BatchYUVACxformEAlpha:
              result = 688i64;
              break;
            case ST_BatchYUVACxformEAlphaMul:
              result = 689i64;
              break;
            case ST_InstancedYUVACxformEAlpha:
              result = 756i64;
              break;
            case ST_InstancedYUVACxformEAlphaMul:
              result = 757i64;
              break;
            case ST_Position3dYUVACxformEAlpha:
              result = 654i64;
              break;
            case ST_Position3dYUVACxformEAlphaMul:
              result = 655i64;
              break;
            case ST_BatchPosition3dYUVACxformEAlpha:
              result = 722i64;
              break;
            case ST_BatchPosition3dYUVACxformEAlphaMul:
              result = 723i64;
              break;
            case ST_InstancedPosition3dYUVACxformEAlpha:
              result = 790i64;
              break;
            case ST_InstancedPosition3dYUVACxformEAlphaMul:
              result = 791i64;
              break;
            case ST_YUVAInv:
              result = 612i64;
              break;
            case ST_BatchYUVAInv:
              result = 680i64;
              break;
            case ST_InstancedYUVAInv:
              result = 748i64;
              break;
            case ST_Position3dYUVAInv:
              result = 646i64;
              break;
            case ST_BatchPosition3dYUVAInv:
              result = 714i64;
              break;
            case ST_InstancedPosition3dYUVAInv:
              result = 782i64;
              break;
            case ST_YUVACxformInv:
              result = 619i64;
              break;
            case ST_BatchYUVACxformInv:
              result = 687i64;
              break;
            case ST_InstancedYUVACxformInv:
              result = 755i64;
              break;
            case ST_Position3dYUVACxformInv:
              result = 653i64;
              break;
            case ST_BatchPosition3dYUVACxformInv:
              result = 721i64;
              break;
            case ST_InstancedPosition3dYUVACxformInv:
              result = 789i64;
              break;
            case ST_YUVAEAlphaInv:
              result = 616i64;
              break;
            case ST_BatchYUVAEAlphaInv:
              result = 684i64;
              break;
            case ST_InstancedYUVAEAlphaInv:
              result = 752i64;
              break;
            case ST_Position3dYUVAEAlphaInv:
              result = 650i64;
              break;
            case ST_BatchPosition3dYUVAEAlphaInv:
              result = 718i64;
              break;
            case ST_InstancedPosition3dYUVAEAlphaInv:
              result = 786i64;
              break;
            case ST_YUVACxformEAlphaInv:
              result = 622i64;
              break;
            case ST_BatchYUVACxformEAlphaInv:
              result = 690i64;
              break;
            case ST_InstancedYUVACxformEAlphaInv:
              result = 758i64;
              break;
            case ST_Position3dYUVACxformEAlphaInv:
              result = 656i64;
              break;
            case ST_BatchPosition3dYUVACxformEAlphaInv:
              result = 724i64;
              break;
            case ST_InstancedPosition3dYUVACxformEAlphaInv:
              result = 792i64;
              break;
            case ST_YUVATexDensity:
              result = 610i64;
              break;
            case ST_BatchYUVATexDensity:
              result = 678i64;
              break;
            case ST_InstancedYUVATexDensity:
              result = 746i64;
              break;
            case ST_Position3dYUVATexDensity:
              result = 644i64;
              break;
            case ST_BatchPosition3dYUVATexDensity:
              result = 712i64;
              break;
            case ST_InstancedPosition3dYUVATexDensity:
              result = 780i64;
              break;
            case ST_YUVAEAlphaTexDensity:
              result = 614i64;
              break;
            case ST_BatchYUVAEAlphaTexDensity:
              result = 682i64;
              break;
            case ST_InstancedYUVAEAlphaTexDensity:
              result = 750i64;
              break;
            case ST_Position3dYUVAEAlphaTexDensity:
              result = 648i64;
              break;
            case ST_BatchPosition3dYUVAEAlphaTexDensity:
              result = 716i64;
              break;
            case ST_InstancedPosition3dYUVAEAlphaTexDensity:
              result = 784i64;
              break;
            default:
              return 0i64;
          }
          return result;
        }
        if ( shader <= ST_start_cmatrix )
        {
          if ( shader == ST_start_cmatrix )
            return 799i64;
          switch ( shader )
          {
            case ST_YUVACxformAcMul:
              result = 624i64;
              break;
            case ST_BatchYUVACxformAc:
              result = 691i64;
              break;
            case ST_BatchYUVACxformAcMul:
              result = 692i64;
              break;
            case ST_InstancedYUVACxformAc:
              result = 759i64;
              break;
            case ST_InstancedYUVACxformAcMul:
              result = 760i64;
              break;
            case ST_Position3dYUVACxformAc:
              result = 657i64;
              break;
            case ST_Position3dYUVACxformAcMul:
              result = 658i64;
              break;
            case ST_BatchPosition3dYUVACxformAc:
              result = 725i64;
              break;
            case ST_BatchPosition3dYUVACxformAcMul:
              result = 726i64;
              break;
            case ST_InstancedPosition3dYUVACxformAc:
              result = 793i64;
              break;
            case ST_InstancedPosition3dYUVACxformAcMul:
              result = 794i64;
              break;
            case ST_YUVACxformAcEAlpha:
              result = 626i64;
              break;
            case ST_YUVACxformAcEAlphaMul:
              result = 627i64;
              break;
            case ST_BatchYUVACxformAcEAlpha:
              result = 694i64;
              break;
            case ST_BatchYUVACxformAcEAlphaMul:
              result = 695i64;
              break;
            case ST_InstancedYUVACxformAcEAlpha:
              result = 762i64;
              break;
            case ST_InstancedYUVACxformAcEAlphaMul:
              result = 763i64;
              break;
            case ST_Position3dYUVACxformAcEAlpha:
              result = 660i64;
              break;
            case ST_Position3dYUVACxformAcEAlphaMul:
              result = 661i64;
              break;
            case ST_BatchPosition3dYUVACxformAcEAlpha:
              result = 728i64;
              break;
            case ST_BatchPosition3dYUVACxformAcEAlphaMul:
              result = 729i64;
              break;
            case ST_InstancedPosition3dYUVACxformAcEAlpha:
              result = 796i64;
              break;
            case ST_InstancedPosition3dYUVACxformAcEAlphaMul:
              result = 797i64;
              break;
            case ST_YUVACxformAcInv:
              result = 625i64;
              break;
            case ST_BatchYUVACxformAcInv:
              result = 693i64;
              break;
            case ST_InstancedYUVACxformAcInv:
              result = 761i64;
              break;
            case ST_Position3dYUVACxformAcInv:
              result = 659i64;
              break;
            case ST_BatchPosition3dYUVACxformAcInv:
              result = 727i64;
              break;
            case ST_InstancedPosition3dYUVACxformAcInv:
              result = 795i64;
              break;
            case ST_YUVACxformAcEAlphaInv:
              result = 628i64;
              break;
            case ST_BatchYUVACxformAcEAlphaInv:
              result = 696i64;
              break;
            case ST_InstancedYUVACxformAcEAlphaInv:
              result = 764i64;
              break;
            case ST_Position3dYUVACxformAcEAlphaInv:
              result = 662i64;
              break;
            case ST_BatchPosition3dYUVACxformAcEAlphaInv:
              result = 730i64;
              break;
            case ST_InstancedPosition3dYUVACxformAcEAlphaInv:
              result = 798i64;
              break;
            default:
              return 0i64;
          }
          return result;
        }
        if ( shader > ST_SGrad2InnerBevelMul )
        {
          if ( shader > ST_start_DisplacementMap )
          {
            if ( shader > ST_start_DrawableMerge )
            {
              if ( shader > ST_BlendDifference )
              {
                v44 = shader - 5767172;
                if ( !v44 )
                  return 870i64;
                v45 = v44 - 4;
                if ( !v45 )
                  return 869i64;
                if ( v45 == 8 )
                  return 868i64;
              }
              else
              {
                if ( shader == ST_BlendDifference )
                  return 871i64;
                v41 = shader - 4718592;
                if ( !v41 )
                  return 865i64;
                v42 = v41 - 0x80000;
                if ( !v42 )
                  return 866i64;
                v43 = v42 - 0x80000;
                if ( !v43 )
                  return 867i64;
                if ( v43 == 1 )
                  return 872i64;
              }
            }
            else
            {
              if ( shader == ST_start_DrawableMerge )
                return 864i64;
              if ( shader > ST_DrawableCopyPixelsMergeAlpha )
              {
                v39 = shader - 3670144;
                if ( !v39 )
                  return 861i64;
                v40 = v39 - 32;
                if ( !v40 )
                  return 863i64;
                if ( v40 == 32 )
                  return 862i64;
              }
              else
              {
                if ( shader == ST_DrawableCopyPixelsMergeAlpha )
                  return 859i64;
                v36 = shader - 3145984;
                if ( !v36 )
                  return 857i64;
                v37 = v36 - 256;
                if ( !v37 )
                  return 856i64;
                v38 = v37 - 523776;
                if ( !v38 )
                  return 858i64;
                if ( v38 == 32 )
                  return 860i64;
              }
            }
          }
          else
          {
            if ( shader == ST_start_DisplacementMap )
              return 855i64;
            if ( shader > ST_SColor2FullBevelMul )
            {
              if ( shader > ST_SColor2HideBaseFullBevel )
              {
                v34 = shader - 2958337;
                if ( !v34 )
                  return 842i64;
                v35 = v34 - 3071;
                if ( !v35 )
                  return 839i64;
                if ( v35 == 1 )
                  return 840i64;
              }
              else
              {
                if ( shader == ST_SColor2HideBaseFullBevel )
                  return 841i64;
                v31 = shader - 2953216;
                if ( !v31 )
                  return 833i64;
                v32 = v31 - 1;
                if ( !v32 )
                  return 834i64;
                v33 = v32 - 4095;
                if ( !v33 )
                  return 837i64;
                if ( v33 == 1 )
                  return 838i64;
              }
            }
            else
            {
              if ( shader == ST_SColor2FullBevelMul )
                return 836i64;
              if ( shader > ST_SGrad2HideBaseInnerBevel )
              {
                v28 = shader - 2912257;
                if ( !v28 )
                  return 852i64;
                v29 = v28 - 36863;
                if ( !v29 )
                  return 831i64;
                v30 = v29 - 1;
                if ( !v30 )
                  return 832i64;
                if ( v30 == 1023 )
                  return 835i64;
              }
              else
              {
                if ( shader == ST_SGrad2HideBaseInnerBevel )
                  return 851i64;
                v25 = shader - 2908160;
                if ( !v25 )
                  return 849i64;
                v26 = v25 - 1;
                if ( !v26 )
                  return 850i64;
                v27 = v26 - 1023;
                if ( !v27 )
                  return 853i64;
                if ( v27 == 1 )
                  return 854i64;
              }
            }
          }
        }
        else
        {
          if ( shader == ST_SGrad2InnerBevelMul )
            return 846i64;
          if ( shader > ST_SColorHideBaseInnerShadowMul )
          {
            if ( shader > ST_SGradHideBaseFullBevel )
            {
              if ( shader > ST_SGrad2OuterBevelMul )
              {
                v23 = shader - 2900992;
                if ( !v23 )
                  return 847i64;
                v24 = v23 - 1;
                if ( !v24 )
                  return 848i64;
                if ( v24 == 3071 )
                  return 845i64;
              }
              else
              {
                if ( shader == ST_SGrad2OuterBevelMul )
                  return 844i64;
                v20 = shader - 2663425;
                if ( !v20 )
                  return 830i64;
                v21 = v20 - 3071;
                if ( !v21 )
                  return 827i64;
                v22 = v21 - 1;
                if ( !v22 )
                  return 828i64;
                if ( v22 == 233471 )
                  return 843i64;
              }
            }
            else
            {
              if ( shader == ST_SGradHideBaseFullBevel )
                return 829i64;
              if ( shader > ST_SGradInnerBevel )
              {
                v18 = shader - 2658305;
                if ( !v18 )
                  return 822i64;
                v19 = v18 - 4095;
                if ( !v19 )
                  return 825i64;
                if ( v19 == 1 )
                  return 826i64;
              }
              else
              {
                if ( shader == ST_SGradInnerBevel )
                  return 821i64;
                v15 = shader - 2654208;
                if ( !v15 )
                  return 819i64;
                v16 = v15 - 1;
                if ( !v16 )
                  return 820i64;
                v17 = v16 - 1023;
                if ( !v17 )
                  return 823i64;
                if ( v17 == 1 )
                  return 824i64;
              }
            }
          }
          else
          {
            if ( shader == ST_SColorHideBaseInnerShadowMul )
              return 816i64;
            if ( shader > ST_SColorFullBevel )
            {
              if ( shader > ST_SColorHideBaseOuterBevelMul )
              {
                v13 = shader - 2630656;
                if ( !v13 )
                  return 817i64;
                v14 = v13 - 1;
                if ( !v14 )
                  return 818i64;
                if ( v14 == 1023 )
                  return 815i64;
              }
              else
              {
                if ( shader == ST_SColorHideBaseOuterBevelMul )
                  return 814i64;
                v10 = shader - 2622465;
                if ( !v10 )
                  return 812i64;
                v11 = v10 - 1023;
                if ( !v11 )
                  return 809i64;
                v12 = v11 - 1;
                if ( !v12 )
                  return 810i64;
                if ( v12 == 6143 )
                  return 813i64;
              }
            }
            else
            {
              if ( shader == ST_SColorFullBevel )
                return 811i64;
              if ( shader > ST_Box1BlurMul )
              {
                v7 = shader - 2228224;
                if ( !v7 )
                  return 805i64;
                v8 = v7 - 1;
                if ( !v8 )
                  return 806i64;
                v9 = v8 - 393215;
                if ( !v9 )
                  return 807i64;
                if ( v9 == 1 )
                  return 808i64;
              }
              else
              {
                if ( shader == ST_Box1BlurMul )
                  return 804i64;
                v4 = shader - 1572865;
                if ( !v4 )
                  return 800i64;
                v5 = v4 - 31;
                if ( !v5 )
                  return 801i64;
                v6 = v5 - 1;
                if ( !v6 )
                  return 802i64;
                if ( v6 == 524255 )
                  return 803i64;
              }
            }
          }
        }
      }
      return 0i64;
    }
    if ( shader <= ST_TexTGCxformAc )
    {
      if ( shader != ST_TexTGCxformAc )
      {
        switch ( shader )
        {
          case ST_base_Batch:
            goto $LN620_0;
          case ST_BatchTexTG:
            goto $LN13_142;
          case ST_base_Instanced:
            goto $LN14_120;
          case ST_Position3dTexTG:
            goto $LN15_129;
          case ST_Position3dTexTGMul:
            goto $LN16_106;
          case ST_BatchPosition3dTexTG:
            goto $LN17_93;
          case ST_BatchPosition3dTexTGMul:
            goto $LN18_90;
          case ST_TexTGCxform:
            goto $LN19_141;
          case ST_TexTGCxformMul:
            goto $LN20_75;
          case ST_BatchTexTGCxform:
            goto $LN21_66;
          case ST_BatchTexTGCxformMul:
            goto $LN22_58;
          case ST_Position3dTexTGCxform:
            goto $LN23_67;
          case ST_Position3dTexTGCxformMul:
            goto $LN24_64;
          case ST_BatchPosition3dTexTGCxform:
            goto $LN25_48;
          case ST_BatchPosition3dTexTGCxformMul:
            goto $LN26_52;
          case ST_TexTGEAlpha:
            goto $LN27_52;
          case ST_TexTGEAlphaMul:
            goto $LN28_44;
          case ST_BatchTexTGEAlpha:
            goto $LN29_42;
          case ST_BatchTexTGEAlphaMul:
            goto $LN30_46;
          case ST_Position3dTexTGEAlpha:
            goto $LN31_29;
          case ST_Position3dTexTGEAlphaMul:
            goto $LN32_31;
          case ST_BatchPosition3dTexTGEAlpha:
            goto $LN33_26;
          case ST_BatchPosition3dTexTGEAlphaMul:
            goto $LN34_23;
          case ST_TexTGCxformEAlpha:
            goto $LN35_21;
          case ST_TexTGCxformEAlphaMul:
            goto $LN36_26;
          case ST_BatchTexTGCxformEAlpha:
            goto $LN37_32;
          case ST_BatchTexTGCxformEAlphaMul:
            goto $LN38_26;
          case ST_Position3dTexTGCxformEAlpha:
            goto $LN39_25;
          case ST_Position3dTexTGCxformEAlphaMul:
            goto $LN40_24;
          case ST_BatchPosition3dTexTGCxformEAlpha:
            goto $LN41_20;
          case ST_BatchPosition3dTexTGCxformEAlphaMul:
            goto $LN42_23;
          case ST_TexTGInv:
            goto $LN43_20;
          case ST_BatchTexTGInv:
            goto $LN44_22;
          case ST_Position3dTexTGInv:
            goto $LN45_25;
          case ST_BatchPosition3dTexTGInv:
            goto $LN46_17;
          case ST_TexTGCxformInv:
            goto $LN47_16;
          case ST_BatchTexTGCxformInv:
            goto $LN48_14;
          case ST_Position3dTexTGCxformInv:
            goto $LN49_16;
          case ST_BatchPosition3dTexTGCxformInv:
            goto $LN50_14;
          case ST_TexTGEAlphaInv:
            goto $LN51_13;
          case ST_BatchTexTGEAlphaInv:
            goto $LN52_14;
          case ST_Position3dTexTGEAlphaInv:
            goto $LN53_21;
          case ST_BatchPosition3dTexTGEAlphaInv:
            goto $LN54_17;
          case ST_TexTGCxformEAlphaInv:
            goto $LN55_12;
          case ST_BatchTexTGCxformEAlphaInv:
            goto $LN56_12;
          case ST_Position3dTexTGCxformEAlphaInv:
            goto $LN57_12;
          case ST_BatchPosition3dTexTGCxformEAlphaInv:
            goto $LN58_14;
          case ST_TexTGTexDensity:
            goto $LN59_12;
          case ST_BatchTexTGTexDensity:
            goto $LN60_9;
          case ST_Position3dTexTGTexDensity:
            goto $LN61_9;
          case ST_BatchPosition3dTexTGTexDensity:
            goto $LN62_13;
          case ST_TexTGEAlphaTexDensity:
            goto $LN63_14;
          case ST_BatchTexTGEAlphaTexDensity:
            goto $LN64_19;
          case ST_Position3dTexTGEAlphaTexDensity:
            goto $LN65_17;
          case ST_BatchPosition3dTexTGEAlphaTexDensity:
            goto $LN66_14;
          default:
            return 0i64;
        }
      }
      return 14i64;
    }
    if ( shader <= ST_Vertex )
    {
      if ( shader != ST_Vertex )
      {
        switch ( shader )
        {
          case ST_TexTGCxformAcMul:
            goto $LN68_14;
          case ST_BatchTexTGCxformAc:
            goto $LN677_0;
          case ST_BatchTexTGCxformAcMul:
            goto $LN70_8;
          case ST_Position3dTexTGCxformAc:
            goto $LN71_16;
          case ST_Position3dTexTGCxformAcMul:
            goto $LN72_12;
          case ST_BatchPosition3dTexTGCxformAc:
            goto $LN73_8;
          case ST_BatchPosition3dTexTGCxformAcMul:
            goto $LN74_13;
          case ST_TexTGCxformAcEAlpha:
            goto $LN75_16;
          case ST_TexTGCxformAcEAlphaMul:
            goto $LN76_15;
          case ST_BatchTexTGCxformAcEAlpha:
            goto $LN77_17;
          case ST_BatchTexTGCxformAcEAlphaMul:
            goto $LN78_11;
          case ST_Position3dTexTGCxformAcEAlpha:
            goto $LN79_13;
          case ST_Position3dTexTGCxformAcEAlphaMul:
            goto $LN80_11;
          case ST_BatchPosition3dTexTGCxformAcEAlpha:
            goto $LN81_14;
          case ST_BatchPosition3dTexTGCxformAcEAlphaMul:
            goto $LN82_12;
          case ST_TexTGCxformAcInv:
            goto $LN83_8;
          case ST_BatchTexTGCxformAcInv:
            goto $LN84_14;
          case ST_Position3dTexTGCxformAcInv:
            goto $LN85_12;
          case ST_BatchPosition3dTexTGCxformAcInv:
            goto $LN86_13;
          case ST_TexTGCxformAcEAlphaInv:
            goto $LN87_10;
          case ST_BatchTexTGCxformAcEAlphaInv:
            goto $LN88_10;
          case ST_Position3dTexTGCxformAcEAlphaInv:
            goto $LN89_15;
          case ST_BatchPosition3dTexTGCxformAcEAlphaInv:
            goto $LN90_11;
          default:
            return 0i64;
        }
      }
      return 21i64;
    }
    if ( shader <= ST_VertexCxformAc )
    {
      if ( shader != ST_VertexCxformAc )
      {
        switch ( shader )
        {
          case ST_VertexMul:
            goto $LN92_8;
          case ST_BatchVertex:
            goto $LN701;
          case ST_BatchVertexMul:
            goto $LN94_7;
          case ST_Position3dVertex:
            goto $LN95_7;
          case ST_Position3dVertexMul:
            goto $LN96_6;
          case ST_BatchPosition3dVertex:
            goto $LN97_7;
          case ST_BatchPosition3dVertexMul:
            goto $LN98_9;
          case ST_VertexCxform:
            goto $LN99_8;
          case ST_VertexCxformMul:
            goto $LN100_6;
          case ST_BatchVertexCxform:
            goto $LN101_7;
          case ST_BatchVertexCxformMul:
            goto $LN102_10;
          case ST_Position3dVertexCxform:
            goto $LN103_6;
          case ST_Position3dVertexCxformMul:
            goto $LN104_7;
          case ST_BatchPosition3dVertexCxform:
            goto $LN105_8;
          case ST_BatchPosition3dVertexCxformMul:
            goto $LN106_9;
          case ST_VertexEAlpha:
            goto $LN107_8;
          case ST_VertexEAlphaMul:
            goto $LN108_7;
          case ST_BatchVertexEAlpha:
            goto $LN109_10;
          case ST_BatchVertexEAlphaMul:
            goto $LN110_7;
          case ST_Position3dVertexEAlpha:
            goto $LN111_7;
          case ST_Position3dVertexEAlphaMul:
            goto $LN112_8;
          case ST_BatchPosition3dVertexEAlpha:
            goto $LN113_10;
          case ST_BatchPosition3dVertexEAlphaMul:
            goto $LN114_7;
          case ST_VertexCxformEAlpha:
            goto $LN115_13;
          case ST_VertexCxformEAlphaMul:
            goto $LN116_7;
          case ST_BatchVertexCxformEAlpha:
            goto $LN117_8;
          case ST_BatchVertexCxformEAlphaMul:
            goto $LN118_8;
          case ST_Position3dVertexCxformEAlpha:
            goto $LN119_9;
          case ST_Position3dVertexCxformEAlphaMul:
            goto $LN120_7;
          case ST_BatchPosition3dVertexCxformEAlpha:
            goto $LN121_6;
          case ST_BatchPosition3dVertexCxformEAlphaMul:
            goto $LN122_6;
          case ST_VertexInv:
            goto $LN123_7;
          case ST_BatchVertexInv:
            goto $LN124_7;
          case ST_Position3dVertexInv:
            goto $LN125_7;
          case ST_BatchPosition3dVertexInv:
            goto $LN126_6;
          case ST_VertexCxformInv:
            goto $LN127_5;
          case ST_BatchVertexCxformInv:
            goto $LN128_4;
          case ST_Position3dVertexCxformInv:
            goto $LN129_5;
          case ST_BatchPosition3dVertexCxformInv:
            goto $LN130_9;
          case ST_VertexEAlphaInv:
            goto $LN131_6;
          case ST_BatchVertexEAlphaInv:
            goto $LN132_6;
          case ST_Position3dVertexEAlphaInv:
            goto $LN133_39;
          case ST_BatchPosition3dVertexEAlphaInv:
            goto $LN134_8;
          case ST_VertexCxformEAlphaInv:
            goto $LN135_1;
          case ST_BatchVertexCxformEAlphaInv:
            goto $LN136_7;
          case ST_Position3dVertexCxformEAlphaInv:
            goto $LN137_3;
          case ST_BatchPosition3dVertexCxformEAlphaInv:
            goto $LN138_5;
          default:
            return 0i64;
        }
      }
      return 33i64;
    }
    if ( shader <= ST_TexTGTexTG )
    {
      if ( shader != ST_TexTGTexTG )
      {
        switch ( shader )
        {
          case ST_VertexCxformAcMul:
            goto $LN140_4;
          case ST_BatchVertexCxformAc:
            goto $LN749;
          case ST_BatchVertexCxformAcMul:
            goto $LN142_2;
          case ST_Position3dVertexCxformAc:
            goto $LN143_6;
          case ST_Position3dVertexCxformAcMul:
            goto $LN144_1;
          case ST_BatchPosition3dVertexCxformAc:
            goto $LN145_4;
          case ST_BatchPosition3dVertexCxformAcMul:
            goto $LN146_2;
          case ST_VertexCxformAcEAlpha:
            goto $LN147_1;
          case ST_VertexCxformAcEAlphaMul:
            goto $LN148_3;
          case ST_BatchVertexCxformAcEAlpha:
            goto $LN149_5;
          case ST_BatchVertexCxformAcEAlphaMul:
            goto $LN150_8;
          case ST_Position3dVertexCxformAcEAlpha:
            goto $LN151_5;
          case ST_Position3dVertexCxformAcEAlphaMul:
            goto $LN152_4;
          case ST_BatchPosition3dVertexCxformAcEAlpha:
            goto $LN153_1;
          case ST_BatchPosition3dVertexCxformAcEAlphaMul:
            goto $LN154_7;
          case ST_VertexCxformAcInv:
            goto $LN155_3;
          case ST_BatchVertexCxformAcInv:
            goto $LN156_10;
          case ST_Position3dVertexCxformAcInv:
            goto $LN157_3;
          case ST_BatchPosition3dVertexCxformAcInv:
            goto $LN158_3;
          case ST_VertexCxformAcEAlphaInv:
            goto $LN159_4;
          case ST_BatchVertexCxformAcEAlphaInv:
            goto $LN160_4;
          case ST_Position3dVertexCxformAcEAlphaInv:
            goto $LN161_4;
          case ST_BatchPosition3dVertexCxformAcEAlphaInv:
            goto $LN162_1;
          default:
            return 0i64;
        }
      }
      return 39i64;
    }
    if ( shader <= ST_TexTGTexTGCxformAc )
    {
      if ( shader != ST_TexTGTexTGCxformAc )
      {
        switch ( shader )
        {
          case ST_TexTGTexTGMul:
            goto $LN164_4;
          case ST_BatchTexTGTexTG:
            goto $LN773;
          case ST_BatchTexTGTexTGMul:
            goto $LN166_5;
          case ST_Position3dTexTGTexTG:
            goto $LN167_3;
          case ST_Position3dTexTGTexTGMul:
            goto $LN168_4;
          case ST_BatchPosition3dTexTGTexTG:
            goto $LN169_11;
          case ST_BatchPosition3dTexTGTexTGMul:
            goto $LN170_4;
          case ST_TexTGTexTGCxform:
            goto $LN171_5;
          case ST_TexTGTexTGCxformMul:
            goto $LN172_7;
          case ST_BatchTexTGTexTGCxform:
            goto $LN173_5;
          case ST_BatchTexTGTexTGCxformMul:
            goto $LN174_2;
          case ST_Position3dTexTGTexTGCxform:
            goto $LN175_5;
          case ST_Position3dTexTGTexTGCxformMul:
            goto $LN176_4;
          case ST_BatchPosition3dTexTGTexTGCxform:
            goto $LN177_2;
          case ST_BatchPosition3dTexTGTexTGCxformMul:
            goto $LN178_2;
          case ST_TexTGTexTGEAlpha:
            goto $LN179_2;
          case ST_TexTGTexTGEAlphaMul:
            goto $LN180_1;
          case ST_BatchTexTGTexTGEAlpha:
            goto $LN181_0;
          case ST_BatchTexTGTexTGEAlphaMul:
            goto $LN182_5;
          case ST_Position3dTexTGTexTGEAlpha:
            goto $LN183_2;
          case ST_Position3dTexTGTexTGEAlphaMul:
            goto $LN184_3;
          case ST_BatchPosition3dTexTGTexTGEAlpha:
            goto $LN185_3;
          case ST_BatchPosition3dTexTGTexTGEAlphaMul:
            goto $LN186_1;
          case ST_TexTGTexTGCxformEAlpha:
            goto $LN187_2;
          case ST_TexTGTexTGCxformEAlphaMul:
            goto $LN188_8;
          case ST_BatchTexTGTexTGCxformEAlpha:
            goto $LN189_5;
          case ST_BatchTexTGTexTGCxformEAlphaMul:
            goto $LN190_6;
          case ST_Position3dTexTGTexTGCxformEAlpha:
            goto $LN191_4;
          case ST_Position3dTexTGTexTGCxformEAlphaMul:
            goto $LN192_2;
          case ST_BatchPosition3dTexTGTexTGCxformEAlpha:
            goto $LN193_3;
          case ST_BatchPosition3dTexTGTexTGCxformEAlphaMul:
            goto $LN194_2;
          case ST_TexTGTexTGInv:
            goto $LN195_7;
          case ST_BatchTexTGTexTGInv:
            goto $LN196_4;
          case ST_Position3dTexTGTexTGInv:
            goto $LN197_8;
          case ST_BatchPosition3dTexTGTexTGInv:
            goto $LN198_8;
          case ST_TexTGTexTGCxformInv:
            goto $LN199_3;
          case ST_BatchTexTGTexTGCxformInv:
            goto $LN200_3;
          case ST_Position3dTexTGTexTGCxformInv:
            goto $LN201_3;
          case ST_BatchPosition3dTexTGTexTGCxformInv:
            goto $LN202_6;
          case ST_TexTGTexTGEAlphaInv:
            goto $LN203_4;
          case ST_BatchTexTGTexTGEAlphaInv:
            goto $LN204_4;
          case ST_Position3dTexTGTexTGEAlphaInv:
            goto $LN205_3;
          case ST_BatchPosition3dTexTGTexTGEAlphaInv:
            goto $LN206_4;
          case ST_TexTGTexTGCxformEAlphaInv:
            goto $LN207_1;
          case ST_BatchTexTGTexTGCxformEAlphaInv:
            goto $LN208_1;
          case ST_Position3dTexTGTexTGCxformEAlphaInv:
            goto $LN209_1;
          case ST_BatchPosition3dTexTGTexTGCxformEAlphaInv:
            goto $LN210_1;
          case ST_TexTGTexTGTexDensity:
            goto $LN211_0;
          case ST_BatchTexTGTexTGTexDensity:
            goto $LN212_0;
          case ST_Position3dTexTGTexTGTexDensity:
            goto $LN213_1;
          case ST_BatchPosition3dTexTGTexTGTexDensity:
            goto $LN214_1;
          case ST_TexTGTexTGEAlphaTexDensity:
            goto $LN215_3;
          case ST_BatchTexTGTexTGEAlphaTexDensity:
            goto $LN216_1;
          case ST_Position3dTexTGTexTGEAlphaTexDensity:
            goto $LN217_1;
          case ST_BatchPosition3dTexTGTexTGEAlphaTexDensity:
            goto $LN218_0;
          default:
            return 0i64;
        }
      }
      return 53i64;
    }
    if ( shader <= ST_TexTGVertex )
    {
      if ( shader != ST_TexTGVertex )
      {
        switch ( shader )
        {
          case ST_TexTGTexTGCxformAcMul:
            goto $LN220_1;
          case ST_BatchTexTGTexTGCxformAc:
            goto $LN829;
          case ST_BatchTexTGTexTGCxformAcMul:
            goto $LN222_2;
          case ST_Position3dTexTGTexTGCxformAc:
            goto $LN223_4;
          case ST_Position3dTexTGTexTGCxformAcMul:
            goto $LN224_0;
          case ST_BatchPosition3dTexTGTexTGCxformAc:
            goto $LN225_2;
          case ST_BatchPosition3dTexTGTexTGCxformAcMul:
            goto $LN226_0;
          case ST_TexTGTexTGCxformAcEAlpha:
            goto $LN227_1;
          case ST_TexTGTexTGCxformAcEAlphaMul:
            goto $LN228_1;
          case ST_BatchTexTGTexTGCxformAcEAlpha:
            goto $LN229_0;
          case ST_BatchTexTGTexTGCxformAcEAlphaMul:
            goto $LN230_0;
          case ST_Position3dTexTGTexTGCxformAcEAlpha:
            goto $LN231_1;
          case ST_Position3dTexTGTexTGCxformAcEAlphaMul:
            goto $LN232_0;
          case ST_BatchPosition3dTexTGTexTGCxformAcEAlpha:
            goto $LN233_3;
          case ST_BatchPosition3dTexTGTexTGCxformAcEAlphaMul:
            goto $LN234_1;
          case ST_TexTGTexTGCxformAcInv:
            goto $LN235_0;
          case ST_BatchTexTGTexTGCxformAcInv:
            goto $LN236_0;
          case ST_Position3dTexTGTexTGCxformAcInv:
            goto $LN237_1;
          case ST_BatchPosition3dTexTGTexTGCxformAcInv:
            goto $LN238_1;
          case ST_TexTGTexTGCxformAcEAlphaInv:
            goto $LN239_1;
          case ST_BatchTexTGTexTGCxformAcEAlphaInv:
            goto $LN240_1;
          case ST_Position3dTexTGTexTGCxformAcEAlphaInv:
            goto $LN241_0;
          case ST_BatchPosition3dTexTGTexTGCxformAcEAlphaInv:
            goto $LN242_0;
          default:
            return 0i64;
        }
      }
      return 59i64;
    }
    if ( shader <= ST_TexTGVertexCxformAc )
    {
      if ( shader != ST_TexTGVertexCxformAc )
      {
        switch ( shader )
        {
          case ST_TexTGVertexMul:
            goto $LN244_2;
          case ST_BatchTexTGVertex:
            goto $LN853;
          case ST_BatchTexTGVertexMul:
            goto $LN246_2;
          case ST_Position3dTexTGVertex:
            goto $LN247_2;
          case ST_Position3dTexTGVertexMul:
            goto $LN248_1;
          case ST_BatchPosition3dTexTGVertex:
            goto $LN249_1;
          case ST_BatchPosition3dTexTGVertexMul:
            goto $LN250_1;
          case ST_TexTGVertexCxform:
            goto $LN251_5;
          case ST_TexTGVertexCxformMul:
            goto $LN252_1;
          case ST_BatchTexTGVertexCxform:
            goto $LN253_1;
          case ST_BatchTexTGVertexCxformMul:
            goto $LN254_4;
          case ST_Position3dTexTGVertexCxform:
            goto $LN255_1;
          case ST_Position3dTexTGVertexCxformMul:
            goto $LN256_2;
          case ST_BatchPosition3dTexTGVertexCxform:
            goto $LN257_1;
          case ST_BatchPosition3dTexTGVertexCxformMul:
            goto $LN258_0;
          case ST_TexTGVertexEAlpha:
            goto $LN259_2;
          case ST_TexTGVertexEAlphaMul:
            goto $LN260_1;
          case ST_BatchTexTGVertexEAlpha:
            goto $LN261_0;
          case ST_BatchTexTGVertexEAlphaMul:
            goto $LN262_3;
          case ST_Position3dTexTGVertexEAlpha:
            goto $LN263_1;
          case ST_Position3dTexTGVertexEAlphaMul:
            goto $LN264_2;
          case ST_BatchPosition3dTexTGVertexEAlpha:
            goto $LN265_1;
          case ST_BatchPosition3dTexTGVertexEAlphaMul:
            goto $LN266_1;
          case ST_TexTGVertexCxformEAlpha:
            goto $LN267_1;
          case ST_TexTGVertexCxformEAlphaMul:
            goto $LN268_0;
          case ST_BatchTexTGVertexCxformEAlpha:
            goto $LN269_2;
          case ST_BatchTexTGVertexCxformEAlphaMul:
            goto $LN270_1;
          case ST_Position3dTexTGVertexCxformEAlpha:
            goto $LN271_1;
          case ST_Position3dTexTGVertexCxformEAlphaMul:
            goto $LN272_1;
          case ST_BatchPosition3dTexTGVertexCxformEAlpha:
            goto $LN273_2;
          case ST_BatchPosition3dTexTGVertexCxformEAlphaMul:
            goto $LN274_0;
          case ST_TexTGVertexInv:
            goto $LN275_2;
          case ST_BatchTexTGVertexInv:
            goto $LN276_0;
          case ST_Position3dTexTGVertexInv:
            goto $LN277_0;
          case ST_BatchPosition3dTexTGVertexInv:
            goto $LN278_1;
          case ST_TexTGVertexCxformInv:
            goto $LN279_4;
          case ST_BatchTexTGVertexCxformInv:
            goto $LN280_2;
          case ST_Position3dTexTGVertexCxformInv:
            goto $LN281_1;
          case ST_BatchPosition3dTexTGVertexCxformInv:
            goto $LN282_2;
          case ST_TexTGVertexEAlphaInv:
            goto $LN283_2;
          case ST_BatchTexTGVertexEAlphaInv:
            goto $LN284_1;
          case ST_Position3dTexTGVertexEAlphaInv:
            goto $LN285_2;
          case ST_BatchPosition3dTexTGVertexEAlphaInv:
            goto $LN286_2;
          case ST_TexTGVertexCxformEAlphaInv:
            goto $LN287_2;
          case ST_BatchTexTGVertexCxformEAlphaInv:
            goto $LN288_0;
          case ST_Position3dTexTGVertexCxformEAlphaInv:
            goto $LN289_1;
          case ST_BatchPosition3dTexTGVertexCxformEAlphaInv:
            goto $LN290_1;
          case ST_TexTGVertexTexDensity:
            goto $LN291_3;
          case ST_BatchTexTGVertexTexDensity:
            goto $LN292_2;
          case ST_Position3dTexTGVertexTexDensity:
            goto $LN293_1;
          case ST_BatchPosition3dTexTGVertexTexDensity:
            goto $LN294_2;
          case ST_TexTGVertexEAlphaTexDensity:
            goto $LN295_1;
          case ST_BatchTexTGVertexEAlphaTexDensity:
            goto $LN296_7;
          case ST_Position3dTexTGVertexEAlphaTexDensity:
            goto $LN297_1;
          case ST_BatchPosition3dTexTGVertexEAlphaTexDensity:
            goto $LN298_2;
          default:
            return 0i64;
        }
      }
      return 73i64;
    }
    if ( shader <= ST_start_base_text )
    {
      if ( shader != ST_start_base_text )
      {
        switch ( shader )
        {
          case ST_TexTGVertexCxformAcMul:
            goto $LN300_2;
          case ST_BatchTexTGVertexCxformAc:
            goto $LN909;
          case ST_BatchTexTGVertexCxformAcMul:
            goto $LN302_0;
          case ST_Position3dTexTGVertexCxformAc:
            goto $LN303_1;
          case ST_Position3dTexTGVertexCxformAcMul:
            goto $LN304_1;
          case ST_BatchPosition3dTexTGVertexCxformAc:
            goto $LN305_2;
          case ST_BatchPosition3dTexTGVertexCxformAcMul:
            goto $LN306_1;
          case ST_TexTGVertexCxformAcEAlpha:
            goto $LN307_2;
          case ST_TexTGVertexCxformAcEAlphaMul:
            goto $LN308_2;
          case ST_BatchTexTGVertexCxformAcEAlpha:
            goto $LN309_2;
          case ST_BatchTexTGVertexCxformAcEAlphaMul:
            goto $LN310_0;
          case ST_Position3dTexTGVertexCxformAcEAlpha:
            goto $LN311_0;
          case ST_Position3dTexTGVertexCxformAcEAlphaMul:
            goto $LN312_1;
          case ST_BatchPosition3dTexTGVertexCxformAcEAlpha:
            goto $LN313_1;
          case ST_BatchPosition3dTexTGVertexCxformAcEAlphaMul:
            goto $LN314_2;
          case ST_TexTGVertexCxformAcInv:
            goto $LN315_1;
          case ST_BatchTexTGVertexCxformAcInv:
            goto $LN316_1;
          case ST_Position3dTexTGVertexCxformAcInv:
            goto $LN317_0;
          case ST_BatchPosition3dTexTGVertexCxformAcInv:
            goto $LN318_2;
          case ST_TexTGVertexCxformAcEAlphaInv:
            goto $LN319_2;
          case ST_BatchTexTGVertexCxformAcEAlphaInv:
            goto $LN320_2;
          case ST_Position3dTexTGVertexCxformAcEAlphaInv:
            goto $LN321_3;
          case ST_BatchPosition3dTexTGVertexCxformAcEAlphaInv:
            goto $LN322_0;
          default:
            return 0i64;
        }
      }
      return 313i64;
    }
    if ( shader <= ST_Text )
    {
      if ( shader != ST_Text )
      {
        switch ( shader )
        {
          case ST_SolidMul:
            goto $LN324_2;
          case ST_BatchSolid:
            goto $LN933_0;
          case ST_BatchSolidMul:
            goto $LN326_0;
          case ST_Position3dSolid:
            goto $LN327_4;
          case ST_Position3dSolidMul:
            goto $LN328_1;
          case ST_BatchPosition3dSolid:
            goto $LN329_0;
          case ST_BatchPosition3dSolidMul:
            goto $LN330_1;
          case ST_SolidInv:
            goto $LN331_1;
          case ST_BatchSolidInv:
            goto $LN332_0;
          case ST_Position3dSolidInv:
            goto $LN333_1;
          case ST_BatchPosition3dSolidInv:
            goto $LN334_1;
          default:
            return 0i64;
        }
      }
      return 316i64;
    }
    if ( shader <= ST_TexUV )
    {
      if ( shader != ST_TexUV )
      {
        switch ( shader )
        {
          case ST_TextMul:
            goto $LN336_0;
          case ST_BatchText:
            goto $LN945;
          case ST_BatchTextMul:
            goto $LN338_0;
          case ST_Position3dText:
            goto $LN339_0;
          case ST_Position3dTextMul:
            goto $LN340_1;
          case ST_BatchPosition3dText:
            goto $LN341_0;
          case ST_BatchPosition3dTextMul:
            goto $LN342_0;
          case ST_TextInv:
            goto $LN343_5;
          case ST_BatchTextInv:
            goto $LN344_2;
          case ST_Position3dTextInv:
            goto $LN345_1;
          case ST_BatchPosition3dTextInv:
            goto $LN346_1;
          case ST_TextTexDensity:
            goto $LN347_2;
          case ST_BatchTextTexDensity:
            goto $LN348_0;
          case ST_Position3dTextTexDensity:
            goto $LN349_0;
          case ST_BatchPosition3dTextTexDensity:
            goto $LN350_1;
          default:
            return 0i64;
        }
      }
      return 320i64;
    }
    if ( shader <= ST_ATexUV )
    {
      if ( shader != ST_ATexUV )
      {
        switch ( shader )
        {
          case ST_TexUVMul:
            goto $LN352_0;
          case ST_BatchTexUV:
            goto $LN961;
          case ST_BatchTexUVMul:
            goto $LN354_1;
          case ST_Position3dTexUV:
            goto $LN355_1;
          case ST_Position3dTexUVMul:
            goto $LN356_1;
          case ST_BatchPosition3dTexUV:
            goto $LN357_1;
          case ST_BatchPosition3dTexUVMul:
            goto $LN358_1;
          case ST_TexUVCxform:
            goto $LN359_1;
          case ST_TexUVCxformMul:
            goto $LN360_1;
          case ST_BatchTexUVCxform:
            goto $LN361_0;
          case ST_BatchTexUVCxformMul:
            goto $LN362_1;
          case ST_Position3dTexUVCxform:
            goto $LN363_0;
          case ST_Position3dTexUVCxformMul:
            goto $LN364_1;
          case ST_BatchPosition3dTexUVCxform:
            goto $LN365_0;
          case ST_BatchPosition3dTexUVCxformMul:
            goto $LN366_0;
          case ST_TexUVInv:
            goto $LN367_3;
          case ST_BatchTexUVInv:
            goto $LN368_2;
          case ST_Position3dTexUVInv:
            goto $LN369_0;
          case ST_BatchPosition3dTexUVInv:
            goto $LN370_0;
          case ST_TexUVCxformInv:
            goto $LN371_1;
          case ST_BatchTexUVCxformInv:
            goto $LN372_2;
          case ST_Position3dTexUVCxformInv:
            goto $LN373_3;
          case ST_BatchPosition3dTexUVCxformInv:
            goto $LN374_0;
          case ST_TexUVTexDensity:
            goto $LN375_1;
          case ST_BatchTexUVTexDensity:
            goto $LN376_1;
          case ST_Position3dTexUVTexDensity:
            goto $LN377_0;
          case ST_BatchPosition3dTexUVTexDensity:
            goto $LN378_1;
          default:
            return 0i64;
        }
      }
      return 327i64;
    }
    if ( shader <= ST_start_base_video )
    {
      if ( shader != ST_start_base_video )
      {
        switch ( shader )
        {
          case ST_ATexUVMul:
            goto $LN380_1;
          case ST_BatchATexUV:
            goto $LN989;
          case ST_BatchATexUVMul:
            goto $LN382_0;
          case ST_Position3dATexUV:
            goto $LN383_0;
          case ST_Position3dATexUVMul:
            goto $LN384_2;
          case ST_BatchPosition3dATexUV:
            goto $LN385_1;
          case ST_BatchPosition3dATexUVMul:
            goto $LN386_2;
          case ST_ATexUVCxform:
            goto $LN387_2;
          case ST_ATexUVCxformMul:
            goto $LN388_0;
          case ST_BatchATexUVCxform:
            goto $LN389_1;
          case ST_BatchATexUVCxformMul:
            goto $LN390_2;
          case ST_Position3dATexUVCxform:
            goto $LN391_0;
          case ST_Position3dATexUVCxformMul:
            goto $LN392_1;
          case ST_BatchPosition3dATexUVCxform:
            goto $LN393_1;
          case ST_BatchPosition3dATexUVCxformMul:
            goto $LN394_0;
          case ST_ATexUVInv:
            goto $LN395_1;
          case ST_BatchATexUVInv:
            goto $LN396_1;
          case ST_Position3dATexUVInv:
            goto $LN397_2;
          case ST_BatchPosition3dATexUVInv:
            goto $LN398_0;
          case ST_ATexUVCxformInv:
            goto $LN399_2;
          case ST_BatchATexUVCxformInv:
            goto $LN400_0;
          case ST_Position3dATexUVCxformInv:
            goto $LN401_0;
          case ST_BatchPosition3dATexUVCxformInv:
            goto $LN402_1;
          case ST_ATexUVTexDensity:
            goto $LN403_2;
          case ST_BatchATexUVTexDensity:
            goto $LN404_1;
          case ST_Position3dATexUVTexDensity:
            goto $LN405_2;
          case ST_BatchPosition3dATexUVTexDensity:
            goto $LN406_1;
          default:
            return 0i64;
        }
      }
      return 397i64;
    }
    if ( shader <= ST_YUVCxformAc )
    {
      if ( shader != ST_YUVCxformAc )
      {
        switch ( shader )
        {
          case ST_YUVMul:
            goto $LN408_1;
          case ST_BatchYUV:
            goto $LN1017;
          case ST_BatchYUVMul:
            goto $LN410_1;
          case ST_Position3dYUV:
            goto $LN411_1;
          case ST_Position3dYUVMul:
            goto $LN412_1;
          case ST_BatchPosition3dYUV:
            goto $LN413_0;
          case ST_BatchPosition3dYUVMul:
            goto $LN414_0;
          case ST_YUVCxform:
            goto $LN415_1;
          case ST_YUVCxformMul:
            goto $LN416_1;
          case ST_BatchYUVCxform:
            goto $LN417_1;
          case ST_BatchYUVCxformMul:
            return 472i64;
          case ST_Position3dYUVCxform:
            goto $LN419_0;
          case ST_Position3dYUVCxformMul:
            goto $LN420_0;
          case ST_BatchPosition3dYUVCxform:
            goto $LN421_1;
          case ST_BatchPosition3dYUVCxformMul:
            goto $LN422_1;
          case ST_YUVEAlpha:
            goto $LN423;
          case ST_YUVEAlphaMul:
            goto $LN424;
          case ST_BatchYUVEAlpha:
            goto $LN425_1;
          case ST_BatchYUVEAlphaMul:
            goto $LN1696;
          case ST_Position3dYUVEAlpha:
            goto $LN427_1;
          case ST_Position3dYUVEAlphaMul:
            goto $LN428_0;
          case ST_BatchPosition3dYUVEAlpha:
            goto $LN429_0;
          case ST_BatchPosition3dYUVEAlphaMul:
            goto $LN430_0;
          case ST_YUVCxformEAlpha:
            goto $LN431_0;
          case ST_YUVCxformEAlphaMul:
            goto $LN432_0;
          case ST_BatchYUVCxformEAlpha:
            goto $LN433_0;
          case ST_BatchYUVCxformEAlphaMul:
            goto $LN1714;
          case ST_Position3dYUVCxformEAlpha:
            goto $LN435_0;
          case ST_Position3dYUVCxformEAlphaMul:
            goto $LN436_0;
          case ST_BatchPosition3dYUVCxformEAlpha:
            goto $LN437_2;
          case ST_BatchPosition3dYUVCxformEAlphaMul:
            goto $LN438_0;
          case ST_YUVTexDensity:
            goto $LN439_1;
          case ST_BatchYUVTexDensity:
            goto $LN440_0;
          case ST_Position3dYUVTexDensity:
            goto $LN441_0;
          case ST_BatchPosition3dYUVTexDensity:
            goto $LN442_0;
          case ST_YUVEAlphaTexDensity:
            goto $LN443_0;
          case ST_BatchYUVEAlphaTexDensity:
            return 469i64;
          case ST_Position3dYUVEAlphaTexDensity:
            goto $LN445_0;
          case ST_BatchPosition3dYUVEAlphaTexDensity:
            goto $LN446_0;
          default:
            return 0i64;
        }
      }
      return 407i64;
    }
    if ( shader <= ST_YUVA )
    {
      if ( shader != ST_YUVA )
      {
        switch ( shader )
        {
          case ST_YUVCxformAcMul:
            goto $LN448_0;
          case ST_BatchYUVCxformAc:
            goto $LN1057;
          case ST_BatchYUVCxformAcMul:
            return 476i64;
          case ST_Position3dYUVCxformAc:
            goto $LN451_2;
          case ST_Position3dYUVCxformAcMul:
            goto $LN452_0;
          case ST_BatchPosition3dYUVCxformAc:
            goto $LN453_1;
          case ST_BatchPosition3dYUVCxformAcMul:
            goto $LN454_1;
          case ST_YUVCxformAcEAlpha:
            goto $LN455_1;
          case ST_YUVCxformAcEAlphaMul:
            goto $LN456_0;
          case ST_BatchYUVCxformAcEAlpha:
            goto $LN457_2;
          case ST_BatchYUVCxformAcEAlphaMul:
            goto $LN1738;
          case ST_Position3dYUVCxformAcEAlpha:
            goto $LN459_1;
          case ST_Position3dYUVCxformAcEAlphaMul:
            goto $LN460_1;
          case ST_BatchPosition3dYUVCxformAcEAlpha:
            goto $LN461_0;
          case ST_BatchPosition3dYUVCxformAcEAlphaMul:
            goto $LN462_1;
          default:
            return 0i64;
        }
      }
      return 411i64;
    }
    if ( shader <= ST_YUVACxformAc )
    {
      if ( shader != ST_YUVACxformAc )
      {
        switch ( shader )
        {
          case ST_YUVAMul:
            goto $LN464_1;
          case ST_BatchYUVA:
            goto $LN1073_0;
          case ST_BatchYUVAMul:
            goto $LN466_0;
          case ST_Position3dYUVA:
            goto $LN467_0;
          case ST_Position3dYUVAMul:
            goto $LN468_1;
          case ST_BatchPosition3dYUVA:
            goto $LN469_2;
          case ST_BatchPosition3dYUVAMul:
            goto $LN470_1;
          case ST_YUVACxform:
            goto $LN471_1;
          case ST_YUVACxformMul:
            goto $LN472_0;
          case ST_BatchYUVACxform:
            goto $LN473_0;
          case ST_BatchYUVACxformMul:
            goto $LN474_0;
          case ST_Position3dYUVACxform:
            goto $LN475_0;
          case ST_Position3dYUVACxformMul:
            goto $LN476_0;
          case ST_BatchPosition3dYUVACxform:
            goto $LN477_1;
          case ST_BatchPosition3dYUVACxformMul:
            goto $LN478_0;
          case ST_YUVAEAlpha:
            goto $LN479_1;
          case ST_YUVAEAlphaMul:
            goto $LN480_0;
          case ST_BatchYUVAEAlpha:
            return 483i64;
          case ST_BatchYUVAEAlphaMul:
            goto $LN1780;
          case ST_Position3dYUVAEAlpha:
            goto $LN483;
          case ST_Position3dYUVAEAlphaMul:
            goto $LN484_3;
          case ST_BatchPosition3dYUVAEAlpha:
            goto $LN485_0;
          case ST_BatchPosition3dYUVAEAlphaMul:
            goto $LN486_3;
          case ST_YUVACxformEAlpha:
            goto $LN487_0;
          case ST_YUVACxformEAlphaMul:
            goto $LN488_2;
          case ST_BatchYUVACxformEAlpha:
            goto $LN489_0;
          case ST_BatchYUVACxformEAlphaMul:
            goto $LN490_1;
          case ST_Position3dYUVACxformEAlpha:
            goto $LN491_2;
          case ST_Position3dYUVACxformEAlphaMul:
            goto $LN492_0;
          case ST_BatchPosition3dYUVACxformEAlpha:
            goto $LN493_0;
          case ST_BatchPosition3dYUVACxformEAlphaMul:
            goto $LN494_1;
          case ST_YUVAInv:
            goto $LN495_0;
          case ST_BatchYUVAInv:
            goto $LN496_0;
          case ST_Position3dYUVAInv:
            goto $LN497_0;
          case ST_BatchPosition3dYUVAInv:
            goto $LN498_0;
          case ST_YUVACxformInv:
            goto $LN499_1;
          case ST_BatchYUVACxformInv:
            goto $LN500_1;
          case ST_Position3dYUVACxformInv:
            goto $LN501_0;
          case ST_BatchPosition3dYUVACxformInv:
            goto $LN502_0;
          case ST_YUVAEAlphaInv:
            goto $LN503_0;
          case ST_BatchYUVAEAlphaInv:
            goto $LN504_2;
          case ST_Position3dYUVAEAlphaInv:
            goto $LN505_0;
          case ST_BatchPosition3dYUVAEAlphaInv:
            goto $LN506_0;
          case ST_YUVACxformEAlphaInv:
            goto $LN507_0;
          case ST_BatchYUVACxformEAlphaInv:
            goto $LN508_1;
          case ST_Position3dYUVACxformEAlphaInv:
            goto $LN509_1;
          case ST_BatchPosition3dYUVACxformEAlphaInv:
            goto $LN510_0;
          case ST_YUVATexDensity:
            goto $LN511_0;
          case ST_BatchYUVATexDensity:
            goto $LN512_0;
          case ST_Position3dYUVATexDensity:
            goto $LN513_1;
          case ST_BatchPosition3dYUVATexDensity:
            goto $LN514_1;
          case ST_YUVAEAlphaTexDensity:
            goto $LN515_0;
          case ST_BatchYUVAEAlphaTexDensity:
            goto $LN516_1;
          case ST_Position3dYUVAEAlphaTexDensity:
            goto $LN517_0;
          case ST_BatchPosition3dYUVAEAlphaTexDensity:
            goto $LN518_1;
          default:
            return 0i64;
        }
      }
      return 425i64;
    }
    if ( shader <= ST_start_cmatrix )
    {
      if ( shader != ST_start_cmatrix )
      {
        switch ( shader )
        {
          case ST_YUVACxformAcMul:
            goto $LN520_0;
          case ST_BatchYUVACxformAc:
            goto $LN1129;
          case ST_BatchYUVACxformAcMul:
            goto $LN522_0;
          case ST_Position3dYUVACxformAc:
            goto $LN523_2;
          case ST_Position3dYUVACxformAcMul:
            goto $LN524_2;
          case ST_BatchPosition3dYUVACxformAc:
            goto $LN525_0;
          case ST_BatchPosition3dYUVACxformAcMul:
            goto $LN526_0;
          case ST_YUVACxformAcEAlpha:
            goto $LN527_1;
          case ST_YUVACxformAcEAlphaMul:
            goto $LN528_0;
          case ST_BatchYUVACxformAcEAlpha:
            goto $LN529_0;
          case ST_BatchYUVACxformAcEAlphaMul:
            goto $LN530_0;
          case ST_Position3dYUVACxformAcEAlpha:
            goto $LN531_0;
          case ST_Position3dYUVACxformAcEAlphaMul:
            goto $LN532_1;
          case ST_BatchPosition3dYUVACxformAcEAlpha:
            goto $LN533_0;
          case ST_BatchPosition3dYUVACxformAcEAlphaMul:
            goto $LN534_1;
          case ST_YUVACxformAcInv:
            goto $LN535_0;
          case ST_BatchYUVACxformAcInv:
            goto $LN536_2;
          case ST_Position3dYUVACxformAcInv:
            goto $LN537_0;
          case ST_BatchPosition3dYUVACxformAcInv:
            goto $LN538_0;
          case ST_YUVACxformAcEAlphaInv:
            goto $LN539_0;
          case ST_BatchYUVACxformAcEAlphaInv:
            goto $LN540_1;
          case ST_Position3dYUVACxformAcEAlphaInv:
            goto $LN541_8;
          case ST_BatchPosition3dYUVACxformAcEAlphaInv:
            goto $LN542_8;
          default:
            return 0i64;
        }
      }
      return 533i64;
    }
    if ( shader <= ST_SGrad2InnerBevelMul )
    {
      if ( shader != ST_SGrad2InnerBevelMul )
      {
        if ( shader <= ST_SColorHideBaseInnerShadowMul )
        {
          if ( shader != ST_SColorHideBaseInnerShadowMul )
          {
            v46 = shader == ST_SColorFullBevel;
            if ( shader > ST_SColorFullBevel )
              goto LABEL_480;
            goto LABEL_1079;
          }
          return 550i64;
        }
        v50 = shader == ST_SGradHideBaseFullBevel;
        if ( shader > ST_SGradHideBaseFullBevel )
          goto LABEL_488;
        goto LABEL_1112;
      }
      return 580i64;
    }
    if ( shader <= ST_start_DisplacementMap )
    {
      if ( shader != ST_start_DisplacementMap )
      {
        v54 = shader == ST_SColor2FullBevelMul;
        if ( shader > ST_SColor2FullBevelMul )
          goto LABEL_498;
        goto LABEL_1145;
      }
      return 589i64;
    }
    v58 = shader == ST_start_DrawableMerge;
    if ( shader > ST_start_DrawableMerge )
      goto LABEL_506;
    goto LABEL_1178;
  }
  if ( shader > ST_TexTGCxformAc )
  {
    if ( shader > ST_Vertex )
    {
      if ( shader > ST_VertexCxformAc )
      {
        if ( shader > ST_TexTGTexTG )
        {
          if ( shader > ST_TexTGTexTGCxformAc )
          {
            if ( shader > ST_TexTGVertex )
            {
              if ( shader > ST_TexTGVertexCxformAc )
              {
                if ( shader <= ST_start_base_text )
                {
                  if ( shader != ST_start_base_text )
                  {
                    switch ( shader )
                    {
                      case ST_TexTGVertexCxformAcMul:
$LN300_2:
                        result = 74i64;
                        break;
                      case ST_BatchTexTGVertexCxformAc:
$LN909:
                        result = 229i64;
                        break;
                      case ST_BatchTexTGVertexCxformAcMul:
$LN302_0:
                        result = 230i64;
                        break;
                      case ST_Position3dTexTGVertexCxformAc:
$LN303_1:
                        result = 151i64;
                        break;
                      case ST_Position3dTexTGVertexCxformAcMul:
$LN304_1:
                        result = 152i64;
                        break;
                      case ST_BatchPosition3dTexTGVertexCxformAc:
$LN305_2:
                        result = 307i64;
                        break;
                      case ST_BatchPosition3dTexTGVertexCxformAcMul:
$LN306_1:
                        result = 308i64;
                        break;
                      case ST_TexTGVertexCxformAcEAlpha:
$LN307_2:
                        result = 76i64;
                        break;
                      case ST_TexTGVertexCxformAcEAlphaMul:
$LN308_2:
                        result = 77i64;
                        break;
                      case ST_BatchTexTGVertexCxformAcEAlpha:
$LN309_2:
                        result = 232i64;
                        break;
                      case ST_BatchTexTGVertexCxformAcEAlphaMul:
$LN310_0:
                        result = 233i64;
                        break;
                      case ST_Position3dTexTGVertexCxformAcEAlpha:
$LN311_0:
                        result = 154i64;
                        break;
                      case ST_Position3dTexTGVertexCxformAcEAlphaMul:
$LN312_1:
                        result = 155i64;
                        break;
                      case ST_BatchPosition3dTexTGVertexCxformAcEAlpha:
$LN313_1:
                        result = 310i64;
                        break;
                      case ST_BatchPosition3dTexTGVertexCxformAcEAlphaMul:
$LN314_2:
                        result = 311i64;
                        break;
                      case ST_TexTGVertexCxformAcInv:
$LN315_1:
                        result = 75i64;
                        break;
                      case ST_BatchTexTGVertexCxformAcInv:
$LN316_1:
                        result = 231i64;
                        break;
                      case ST_Position3dTexTGVertexCxformAcInv:
$LN317_0:
                        result = 153i64;
                        break;
                      case ST_BatchPosition3dTexTGVertexCxformAcInv:
$LN318_2:
                        result = 309i64;
                        break;
                      case ST_TexTGVertexCxformAcEAlphaInv:
$LN319_2:
                        result = 78i64;
                        break;
                      case ST_BatchTexTGVertexCxformAcEAlphaInv:
$LN320_2:
                        result = 234i64;
                        break;
                      case ST_Position3dTexTGVertexCxformAcEAlphaInv:
$LN321_3:
                        result = 156i64;
                        break;
                      case ST_BatchPosition3dTexTGVertexCxformAcEAlphaInv:
$LN322_0:
                        result = 312i64;
                        break;
                      default:
                        return 0i64;
                    }
                    return result;
                  }
                  return 313i64;
                }
                if ( shader <= ST_Text )
                {
                  if ( shader != ST_Text )
                  {
                    switch ( shader )
                    {
                      case ST_SolidMul:
$LN324_2:
                        result = 314i64;
                        break;
                      case ST_BatchSolid:
$LN933_0:
                        result = 355i64;
                        break;
                      case ST_BatchSolidMul:
$LN326_0:
                        result = 356i64;
                        break;
                      case ST_Position3dSolid:
$LN327_4:
                        result = 334i64;
                        break;
                      case ST_Position3dSolidMul:
$LN328_1:
                        result = 335i64;
                        break;
                      case ST_BatchPosition3dSolid:
$LN329_0:
                        result = 376i64;
                        break;
                      case ST_BatchPosition3dSolidMul:
$LN330_1:
                        result = 377i64;
                        break;
                      case ST_SolidInv:
$LN331_1:
                        result = 315i64;
                        break;
                      case ST_BatchSolidInv:
$LN332_0:
                        result = 357i64;
                        break;
                      case ST_Position3dSolidInv:
$LN333_1:
                        result = 336i64;
                        break;
                      case ST_BatchPosition3dSolidInv:
$LN334_1:
                        result = 378i64;
                        break;
                      default:
                        return 0i64;
                    }
                    return result;
                  }
                  return 316i64;
                }
                if ( shader <= ST_TexUV )
                {
                  if ( shader != ST_TexUV )
                  {
                    switch ( shader )
                    {
                      case ST_TextMul:
$LN336_0:
                        result = 318i64;
                        break;
                      case ST_BatchText:
$LN945:
                        result = 358i64;
                        break;
                      case ST_BatchTextMul:
$LN338_0:
                        result = 360i64;
                        break;
                      case ST_Position3dText:
$LN339_0:
                        result = 337i64;
                        break;
                      case ST_Position3dTextMul:
$LN340_1:
                        result = 339i64;
                        break;
                      case ST_BatchPosition3dText:
$LN341_0:
                        result = 379i64;
                        break;
                      case ST_BatchPosition3dTextMul:
$LN342_0:
                        result = 381i64;
                        break;
                      case ST_TextInv:
$LN343_5:
                        result = 319i64;
                        break;
                      case ST_BatchTextInv:
$LN344_2:
                        result = 361i64;
                        break;
                      case ST_Position3dTextInv:
$LN345_1:
                        result = 340i64;
                        break;
                      case ST_BatchPosition3dTextInv:
$LN346_1:
                        result = 382i64;
                        break;
                      case ST_TextTexDensity:
$LN347_2:
                        result = 317i64;
                        break;
                      case ST_BatchTextTexDensity:
$LN348_0:
                        result = 359i64;
                        break;
                      case ST_Position3dTextTexDensity:
$LN349_0:
                        result = 338i64;
                        break;
                      case ST_BatchPosition3dTextTexDensity:
$LN350_1:
                        result = 380i64;
                        break;
                      default:
                        return 0i64;
                    }
                    return result;
                  }
                  return 320i64;
                }
                if ( shader <= ST_ATexUV )
                {
                  if ( shader != ST_ATexUV )
                  {
                    switch ( shader )
                    {
                      case ST_TexUVMul:
$LN352_0:
                        result = 322i64;
                        break;
                      case ST_BatchTexUV:
$LN961:
                        result = 362i64;
                        break;
                      case ST_BatchTexUVMul:
$LN354_1:
                        result = 364i64;
                        break;
                      case ST_Position3dTexUV:
$LN355_1:
                        result = 341i64;
                        break;
                      case ST_Position3dTexUVMul:
$LN356_1:
                        result = 343i64;
                        break;
                      case ST_BatchPosition3dTexUV:
$LN357_1:
                        result = 383i64;
                        break;
                      case ST_BatchPosition3dTexUVMul:
$LN358_1:
                        result = 385i64;
                        break;
                      case ST_TexUVCxform:
$LN359_1:
                        result = 324i64;
                        break;
                      case ST_TexUVCxformMul:
$LN360_1:
                        result = 325i64;
                        break;
                      case ST_BatchTexUVCxform:
$LN361_0:
                        result = 366i64;
                        break;
                      case ST_BatchTexUVCxformMul:
$LN362_1:
                        result = 367i64;
                        break;
                      case ST_Position3dTexUVCxform:
$LN363_0:
                        result = 345i64;
                        break;
                      case ST_Position3dTexUVCxformMul:
$LN364_1:
                        result = 346i64;
                        break;
                      case ST_BatchPosition3dTexUVCxform:
$LN365_0:
                        result = 387i64;
                        break;
                      case ST_BatchPosition3dTexUVCxformMul:
$LN366_0:
                        result = 388i64;
                        break;
                      case ST_TexUVInv:
$LN367_3:
                        result = 323i64;
                        break;
                      case ST_BatchTexUVInv:
$LN368_2:
                        result = 365i64;
                        break;
                      case ST_Position3dTexUVInv:
$LN369_0:
                        result = 344i64;
                        break;
                      case ST_BatchPosition3dTexUVInv:
$LN370_0:
                        result = 386i64;
                        break;
                      case ST_TexUVCxformInv:
$LN371_1:
                        result = 326i64;
                        break;
                      case ST_BatchTexUVCxformInv:
$LN372_2:
                        result = 368i64;
                        break;
                      case ST_Position3dTexUVCxformInv:
$LN373_3:
                        result = 347i64;
                        break;
                      case ST_BatchPosition3dTexUVCxformInv:
$LN374_0:
                        result = 389i64;
                        break;
                      case ST_TexUVTexDensity:
$LN375_1:
                        result = 321i64;
                        break;
                      case ST_BatchTexUVTexDensity:
$LN376_1:
                        result = 363i64;
                        break;
                      case ST_Position3dTexUVTexDensity:
$LN377_0:
                        result = 342i64;
                        break;
                      case ST_BatchPosition3dTexUVTexDensity:
$LN378_1:
                        result = 384i64;
                        break;
                      default:
                        return 0i64;
                    }
                    return result;
                  }
                  return 327i64;
                }
                if ( shader <= ST_start_base_video )
                {
                  if ( shader != ST_start_base_video )
                  {
                    switch ( shader )
                    {
                      case ST_ATexUVMul:
$LN380_1:
                        result = 329i64;
                        break;
                      case ST_BatchATexUV:
$LN989:
                        result = 369i64;
                        break;
                      case ST_BatchATexUVMul:
$LN382_0:
                        result = 371i64;
                        break;
                      case ST_Position3dATexUV:
$LN383_0:
                        result = 348i64;
                        break;
                      case ST_Position3dATexUVMul:
$LN384_2:
                        result = 350i64;
                        break;
                      case ST_BatchPosition3dATexUV:
$LN385_1:
                        result = 390i64;
                        break;
                      case ST_BatchPosition3dATexUVMul:
$LN386_2:
                        result = 392i64;
                        break;
                      case ST_ATexUVCxform:
$LN387_2:
                        result = 331i64;
                        break;
                      case ST_ATexUVCxformMul:
$LN388_0:
                        result = 332i64;
                        break;
                      case ST_BatchATexUVCxform:
$LN389_1:
                        result = 373i64;
                        break;
                      case ST_BatchATexUVCxformMul:
$LN390_2:
                        result = 374i64;
                        break;
                      case ST_Position3dATexUVCxform:
$LN391_0:
                        result = 352i64;
                        break;
                      case ST_Position3dATexUVCxformMul:
$LN392_1:
                        result = 353i64;
                        break;
                      case ST_BatchPosition3dATexUVCxform:
$LN393_1:
                        result = 394i64;
                        break;
                      case ST_BatchPosition3dATexUVCxformMul:
$LN394_0:
                        result = 395i64;
                        break;
                      case ST_ATexUVInv:
$LN395_1:
                        result = 330i64;
                        break;
                      case ST_BatchATexUVInv:
$LN396_1:
                        result = 372i64;
                        break;
                      case ST_Position3dATexUVInv:
$LN397_2:
                        result = 351i64;
                        break;
                      case ST_BatchPosition3dATexUVInv:
$LN398_0:
                        result = 393i64;
                        break;
                      case ST_ATexUVCxformInv:
$LN399_2:
                        result = 333i64;
                        break;
                      case ST_BatchATexUVCxformInv:
$LN400_0:
                        result = 375i64;
                        break;
                      case ST_Position3dATexUVCxformInv:
$LN401_0:
                        result = 354i64;
                        break;
                      case ST_BatchPosition3dATexUVCxformInv:
$LN402_1:
                        result = 396i64;
                        break;
                      case ST_ATexUVTexDensity:
$LN403_2:
                        result = 328i64;
                        break;
                      case ST_BatchATexUVTexDensity:
$LN404_1:
                        result = 370i64;
                        break;
                      case ST_Position3dATexUVTexDensity:
$LN405_2:
                        result = 349i64;
                        break;
                      case ST_BatchPosition3dATexUVTexDensity:
$LN406_1:
                        result = 391i64;
                        break;
                      default:
                        return 0i64;
                    }
                    return result;
                  }
                  return 397i64;
                }
                if ( shader <= ST_YUVCxformAc )
                {
                  if ( shader != ST_YUVCxformAc )
                  {
                    switch ( shader )
                    {
                      case ST_YUVMul:
$LN408_1:
                        result = 399i64;
                        break;
                      case ST_BatchYUV:
$LN1017:
                        result = 465i64;
                        break;
                      case ST_BatchYUVMul:
$LN410_1:
                        result = 467i64;
                        break;
                      case ST_Position3dYUV:
$LN411_1:
                        result = 431i64;
                        break;
                      case ST_Position3dYUVMul:
$LN412_1:
                        result = 433i64;
                        break;
                      case ST_BatchPosition3dYUV:
$LN413_0:
                        result = 499i64;
                        break;
                      case ST_BatchPosition3dYUVMul:
$LN414_0:
                        result = 501i64;
                        break;
                      case ST_YUVCxform:
$LN415_1:
                        result = 403i64;
                        break;
                      case ST_YUVCxformMul:
$LN416_1:
                        result = 404i64;
                        break;
                      case ST_BatchYUVCxform:
$LN417_1:
                        result = 471i64;
                        break;
                      case ST_BatchYUVCxformMul:
                        return 472i64;
                      case ST_Position3dYUVCxform:
$LN419_0:
                        result = 437i64;
                        break;
                      case ST_Position3dYUVCxformMul:
$LN420_0:
                        result = 438i64;
                        break;
                      case ST_BatchPosition3dYUVCxform:
$LN421_1:
                        result = 505i64;
                        break;
                      case ST_BatchPosition3dYUVCxformMul:
$LN422_1:
                        result = 506i64;
                        break;
                      case ST_YUVEAlpha:
$LN423:
                        result = 400i64;
                        break;
                      case ST_YUVEAlphaMul:
$LN424:
                        result = 402i64;
                        break;
                      case ST_BatchYUVEAlpha:
$LN425_1:
                        result = 468i64;
                        break;
                      case ST_BatchYUVEAlphaMul:
$LN1696:
                        result = 470i64;
                        break;
                      case ST_Position3dYUVEAlpha:
$LN427_1:
                        result = 434i64;
                        break;
                      case ST_Position3dYUVEAlphaMul:
$LN428_0:
                        result = 436i64;
                        break;
                      case ST_BatchPosition3dYUVEAlpha:
$LN429_0:
                        result = 502i64;
                        break;
                      case ST_BatchPosition3dYUVEAlphaMul:
$LN430_0:
                        result = 504i64;
                        break;
                      case ST_YUVCxformEAlpha:
$LN431_0:
                        result = 405i64;
                        break;
                      case ST_YUVCxformEAlphaMul:
$LN432_0:
                        result = 406i64;
                        break;
                      case ST_BatchYUVCxformEAlpha:
$LN433_0:
                        result = 473i64;
                        break;
                      case ST_BatchYUVCxformEAlphaMul:
$LN1714:
                        result = 474i64;
                        break;
                      case ST_Position3dYUVCxformEAlpha:
$LN435_0:
                        result = 439i64;
                        break;
                      case ST_Position3dYUVCxformEAlphaMul:
$LN436_0:
                        result = 440i64;
                        break;
                      case ST_BatchPosition3dYUVCxformEAlpha:
$LN437_2:
                        result = 507i64;
                        break;
                      case ST_BatchPosition3dYUVCxformEAlphaMul:
$LN438_0:
                        result = 508i64;
                        break;
                      case ST_YUVTexDensity:
$LN439_1:
                        result = 398i64;
                        break;
                      case ST_BatchYUVTexDensity:
$LN440_0:
                        result = 466i64;
                        break;
                      case ST_Position3dYUVTexDensity:
$LN441_0:
                        result = 432i64;
                        break;
                      case ST_BatchPosition3dYUVTexDensity:
$LN442_0:
                        result = 500i64;
                        break;
                      case ST_YUVEAlphaTexDensity:
$LN443_0:
                        result = 401i64;
                        break;
                      case ST_BatchYUVEAlphaTexDensity:
                        return 469i64;
                      case ST_Position3dYUVEAlphaTexDensity:
$LN445_0:
                        result = 435i64;
                        break;
                      case ST_BatchPosition3dYUVEAlphaTexDensity:
$LN446_0:
                        result = 503i64;
                        break;
                      default:
                        return 0i64;
                    }
                    return result;
                  }
                  return 407i64;
                }
                if ( shader <= ST_YUVA )
                {
                  if ( shader != ST_YUVA )
                  {
                    switch ( shader )
                    {
                      case ST_YUVCxformAcMul:
$LN448_0:
                        result = 408i64;
                        break;
                      case ST_BatchYUVCxformAc:
$LN1057:
                        result = 475i64;
                        break;
                      case ST_BatchYUVCxformAcMul:
                        return 476i64;
                      case ST_Position3dYUVCxformAc:
$LN451_2:
                        result = 441i64;
                        break;
                      case ST_Position3dYUVCxformAcMul:
$LN452_0:
                        result = 442i64;
                        break;
                      case ST_BatchPosition3dYUVCxformAc:
$LN453_1:
                        result = 509i64;
                        break;
                      case ST_BatchPosition3dYUVCxformAcMul:
$LN454_1:
                        result = 510i64;
                        break;
                      case ST_YUVCxformAcEAlpha:
$LN455_1:
                        result = 409i64;
                        break;
                      case ST_YUVCxformAcEAlphaMul:
$LN456_0:
                        result = 410i64;
                        break;
                      case ST_BatchYUVCxformAcEAlpha:
$LN457_2:
                        result = 477i64;
                        break;
                      case ST_BatchYUVCxformAcEAlphaMul:
$LN1738:
                        result = 478i64;
                        break;
                      case ST_Position3dYUVCxformAcEAlpha:
$LN459_1:
                        result = 443i64;
                        break;
                      case ST_Position3dYUVCxformAcEAlphaMul:
$LN460_1:
                        result = 444i64;
                        break;
                      case ST_BatchPosition3dYUVCxformAcEAlpha:
$LN461_0:
                        result = 511i64;
                        break;
                      case ST_BatchPosition3dYUVCxformAcEAlphaMul:
$LN462_1:
                        result = 512i64;
                        break;
                      default:
                        return 0i64;
                    }
                    return result;
                  }
                  return 411i64;
                }
                if ( shader > ST_YUVACxformAc )
                {
                  if ( shader > ST_start_cmatrix )
                  {
                    if ( shader <= ST_SGrad2InnerBevelMul )
                    {
                      if ( shader != ST_SGrad2InnerBevelMul )
                      {
                        if ( shader <= ST_SColorHideBaseInnerShadowMul )
                        {
                          if ( shader != ST_SColorHideBaseInnerShadowMul )
                          {
                            v46 = shader == ST_SColorFullBevel;
                            if ( shader > ST_SColorFullBevel )
                            {
LABEL_480:
                              if ( shader > ST_SColorHideBaseOuterBevelMul )
                              {
                                v68 = shader - 2630656;
                                if ( !v68 )
                                  return 551i64;
                                v69 = v68 - 1;
                                if ( !v69 )
                                  return 552i64;
                                if ( v69 == 1023 )
                                  return 549i64;
                              }
                              else
                              {
                                if ( shader == ST_SColorHideBaseOuterBevelMul )
                                  return 548i64;
                                v47 = shader - 2622465;
                                if ( !v47 )
                                  return 546i64;
                                v48 = v47 - 1023;
                                if ( !v48 )
                                  return 543i64;
                                v49 = v48 - 1;
                                if ( !v49 )
                                  return 544i64;
                                if ( v49 == 6143 )
                                  return 547i64;
                              }
                              return 0i64;
                            }
LABEL_1079:
                            if ( v46 )
                              return 545i64;
                            if ( shader > ST_Box1BlurMul )
                            {
                              v65 = shader - 2228224;
                              if ( !v65 )
                                return 539i64;
                              v66 = v65 - 1;
                              if ( !v66 )
                                return 540i64;
                              v67 = v66 - 393215;
                              if ( !v67 )
                                return 541i64;
                              if ( v67 == 1 )
                                return 542i64;
                            }
                            else
                            {
                              if ( shader == ST_Box1BlurMul )
                                return 538i64;
                              v62 = shader - 1572865;
                              if ( !v62 )
                                return 534i64;
                              v63 = v62 - 31;
                              if ( !v63 )
                                return 535i64;
                              v64 = v63 - 1;
                              if ( !v64 )
                                return 536i64;
                              if ( v64 == 524255 )
                                return 537i64;
                            }
                            return 0i64;
                          }
                          return 550i64;
                        }
                        v50 = shader == ST_SGradHideBaseFullBevel;
                        if ( shader > ST_SGradHideBaseFullBevel )
                        {
LABEL_488:
                          if ( shader > ST_SGrad2OuterBevelMul )
                          {
                            v75 = shader - 2900992;
                            if ( !v75 )
                              return 581i64;
                            v76 = v75 - 1;
                            if ( !v76 )
                              return 582i64;
                            if ( v76 == 3071 )
                              return 579i64;
                          }
                          else
                          {
                            if ( shader == ST_SGrad2OuterBevelMul )
                              return 578i64;
                            v51 = shader - 2663425;
                            if ( !v51 )
                              return 564i64;
                            v52 = v51 - 3071;
                            if ( !v52 )
                              return 561i64;
                            v53 = v52 - 1;
                            if ( !v53 )
                              return 562i64;
                            if ( v53 == 233471 )
                              return 577i64;
                          }
                          return 0i64;
                        }
LABEL_1112:
                        if ( v50 )
                          return 563i64;
                        if ( shader > ST_SGradInnerBevel )
                        {
                          v73 = shader - 2658305;
                          if ( !v73 )
                            return 556i64;
                          v74 = v73 - 4095;
                          if ( !v74 )
                            return 559i64;
                          if ( v74 == 1 )
                            return 560i64;
                        }
                        else
                        {
                          if ( shader == ST_SGradInnerBevel )
                            return 555i64;
                          v70 = shader - 2654208;
                          if ( !v70 )
                            return 553i64;
                          v71 = v70 - 1;
                          if ( !v71 )
                            return 554i64;
                          v72 = v71 - 1023;
                          if ( !v72 )
                            return 557i64;
                          if ( v72 == 1 )
                            return 558i64;
                        }
                        return 0i64;
                      }
                      return 580i64;
                    }
                    if ( shader <= ST_start_DisplacementMap )
                    {
                      if ( shader != ST_start_DisplacementMap )
                      {
                        v54 = shader == ST_SColor2FullBevelMul;
                        if ( shader > ST_SColor2FullBevelMul )
                        {
LABEL_498:
                          if ( shader > ST_SColor2HideBaseFullBevel )
                          {
                            v83 = shader - 2958337;
                            if ( !v83 )
                              return 576i64;
                            v84 = v83 - 3071;
                            if ( !v84 )
                              return 573i64;
                            if ( v84 == 1 )
                              return 574i64;
                          }
                          else
                          {
                            if ( shader == ST_SColor2HideBaseFullBevel )
                              return 575i64;
                            v55 = shader - 2953216;
                            if ( !v55 )
                              return 567i64;
                            v56 = v55 - 1;
                            if ( !v56 )
                              return 568i64;
                            v57 = v56 - 4095;
                            if ( !v57 )
                              return 571i64;
                            if ( v57 == 1 )
                              return 572i64;
                          }
                          return 0i64;
                        }
LABEL_1145:
                        if ( v54 )
                          return 570i64;
                        if ( shader > ST_SGrad2HideBaseInnerBevel )
                        {
                          v80 = shader - 2912257;
                          if ( !v80 )
                            return 586i64;
                          v81 = v80 - 36863;
                          if ( !v81 )
                            return 565i64;
                          v82 = v81 - 1;
                          if ( !v82 )
                            return 566i64;
                          if ( v82 == 1023 )
                            return 569i64;
                        }
                        else
                        {
                          if ( shader == ST_SGrad2HideBaseInnerBevel )
                            return 585i64;
                          v77 = shader - 2908160;
                          if ( !v77 )
                            return 583i64;
                          v78 = v77 - 1;
                          if ( !v78 )
                            return 584i64;
                          v79 = v78 - 1023;
                          if ( !v79 )
                            return 587i64;
                          if ( v79 == 1 )
                            return 588i64;
                        }
                        return 0i64;
                      }
                      return 589i64;
                    }
                    v58 = shader == ST_start_DrawableMerge;
                    if ( shader > ST_start_DrawableMerge )
                    {
LABEL_506:
                      if ( shader > ST_BlendDifference )
                      {
                        v90 = shader - 5767172;
                        if ( !v90 )
                          return 604i64;
                        v91 = v90 - 4;
                        if ( !v91 )
                          return 603i64;
                        if ( v91 == 8 )
                          return 602i64;
                      }
                      else
                      {
                        if ( shader == ST_BlendDifference )
                          return 605i64;
                        v59 = shader - 4718592;
                        if ( !v59 )
                          return 599i64;
                        v60 = v59 - 0x80000;
                        if ( !v60 )
                          return 600i64;
                        v61 = v60 - 0x80000;
                        if ( !v61 )
                          return 601i64;
                        if ( v61 == 1 )
                          return 606i64;
                      }
                      return 0i64;
                    }
LABEL_1178:
                    if ( v58 )
                      return 598i64;
                    if ( shader > ST_DrawableCopyPixelsMergeAlpha )
                    {
                      v88 = shader - 3670144;
                      if ( !v88 )
                        return 595i64;
                      v89 = v88 - 32;
                      if ( !v89 )
                        return 597i64;
                      if ( v89 == 32 )
                        return 596i64;
                    }
                    else
                    {
                      if ( shader == ST_DrawableCopyPixelsMergeAlpha )
                        return 593i64;
                      v85 = shader - 3145984;
                      if ( !v85 )
                        return 591i64;
                      v86 = v85 - 256;
                      if ( !v86 )
                        return 590i64;
                      v87 = v86 - 523776;
                      if ( !v87 )
                        return 592i64;
                      if ( v87 == 32 )
                        return 594i64;
                    }
                    return 0i64;
                  }
                  if ( shader == ST_start_cmatrix )
                    return 533i64;
                  switch ( shader )
                  {
                    case ST_YUVACxformAcMul:
$LN520_0:
                      result = 426i64;
                      break;
                    case ST_BatchYUVACxformAc:
$LN1129:
                      result = 493i64;
                      break;
                    case ST_BatchYUVACxformAcMul:
$LN522_0:
                      result = 494i64;
                      break;
                    case ST_Position3dYUVACxformAc:
$LN523_2:
                      result = 459i64;
                      break;
                    case ST_Position3dYUVACxformAcMul:
$LN524_2:
                      result = 460i64;
                      break;
                    case ST_BatchPosition3dYUVACxformAc:
$LN525_0:
                      result = 527i64;
                      break;
                    case ST_BatchPosition3dYUVACxformAcMul:
$LN526_0:
                      result = 528i64;
                      break;
                    case ST_YUVACxformAcEAlpha:
$LN527_1:
                      result = 428i64;
                      break;
                    case ST_YUVACxformAcEAlphaMul:
$LN528_0:
                      result = 429i64;
                      break;
                    case ST_BatchYUVACxformAcEAlpha:
$LN529_0:
                      result = 496i64;
                      break;
                    case ST_BatchYUVACxformAcEAlphaMul:
$LN530_0:
                      result = 497i64;
                      break;
                    case ST_Position3dYUVACxformAcEAlpha:
$LN531_0:
                      result = 462i64;
                      break;
                    case ST_Position3dYUVACxformAcEAlphaMul:
$LN532_1:
                      result = 463i64;
                      break;
                    case ST_BatchPosition3dYUVACxformAcEAlpha:
$LN533_0:
                      result = 530i64;
                      break;
                    case ST_BatchPosition3dYUVACxformAcEAlphaMul:
$LN534_1:
                      result = 531i64;
                      break;
                    case ST_YUVACxformAcInv:
$LN535_0:
                      result = 427i64;
                      break;
                    case ST_BatchYUVACxformAcInv:
$LN536_2:
                      result = 495i64;
                      break;
                    case ST_Position3dYUVACxformAcInv:
$LN537_0:
                      result = 461i64;
                      break;
                    case ST_BatchPosition3dYUVACxformAcInv:
$LN538_0:
                      result = 529i64;
                      break;
                    case ST_YUVACxformAcEAlphaInv:
$LN539_0:
                      result = 430i64;
                      break;
                    case ST_BatchYUVACxformAcEAlphaInv:
$LN540_1:
                      result = 498i64;
                      break;
                    case ST_Position3dYUVACxformAcEAlphaInv:
$LN541_8:
                      result = 464i64;
                      break;
                    case ST_BatchPosition3dYUVACxformAcEAlphaInv:
$LN542_8:
                      result = 532i64;
                      break;
                    default:
                      return 0i64;
                  }
                }
                else
                {
                  if ( shader == ST_YUVACxformAc )
                    return 425i64;
                  switch ( shader )
                  {
                    case ST_YUVAMul:
$LN464_1:
                      result = 413i64;
                      break;
                    case ST_BatchYUVA:
$LN1073_0:
                      result = 479i64;
                      break;
                    case ST_BatchYUVAMul:
$LN466_0:
                      result = 481i64;
                      break;
                    case ST_Position3dYUVA:
$LN467_0:
                      result = 445i64;
                      break;
                    case ST_Position3dYUVAMul:
$LN468_1:
                      result = 447i64;
                      break;
                    case ST_BatchPosition3dYUVA:
$LN469_2:
                      result = 513i64;
                      break;
                    case ST_BatchPosition3dYUVAMul:
$LN470_1:
                      result = 515i64;
                      break;
                    case ST_YUVACxform:
$LN471_1:
                      result = 419i64;
                      break;
                    case ST_YUVACxformMul:
$LN472_0:
                      result = 420i64;
                      break;
                    case ST_BatchYUVACxform:
$LN473_0:
                      result = 487i64;
                      break;
                    case ST_BatchYUVACxformMul:
$LN474_0:
                      result = 488i64;
                      break;
                    case ST_Position3dYUVACxform:
$LN475_0:
                      result = 453i64;
                      break;
                    case ST_Position3dYUVACxformMul:
$LN476_0:
                      result = 454i64;
                      break;
                    case ST_BatchPosition3dYUVACxform:
$LN477_1:
                      result = 521i64;
                      break;
                    case ST_BatchPosition3dYUVACxformMul:
$LN478_0:
                      result = 522i64;
                      break;
                    case ST_YUVAEAlpha:
$LN479_1:
                      result = 415i64;
                      break;
                    case ST_YUVAEAlphaMul:
$LN480_0:
                      result = 417i64;
                      break;
                    case ST_BatchYUVAEAlpha:
                      return 483i64;
                    case ST_BatchYUVAEAlphaMul:
$LN1780:
                      result = 485i64;
                      break;
                    case ST_Position3dYUVAEAlpha:
$LN483:
                      result = 449i64;
                      break;
                    case ST_Position3dYUVAEAlphaMul:
$LN484_3:
                      result = 451i64;
                      break;
                    case ST_BatchPosition3dYUVAEAlpha:
$LN485_0:
                      result = 517i64;
                      break;
                    case ST_BatchPosition3dYUVAEAlphaMul:
$LN486_3:
                      result = 519i64;
                      break;
                    case ST_YUVACxformEAlpha:
$LN487_0:
                      result = 422i64;
                      break;
                    case ST_YUVACxformEAlphaMul:
$LN488_2:
                      result = 423i64;
                      break;
                    case ST_BatchYUVACxformEAlpha:
$LN489_0:
                      result = 490i64;
                      break;
                    case ST_BatchYUVACxformEAlphaMul:
$LN490_1:
                      result = 491i64;
                      break;
                    case ST_Position3dYUVACxformEAlpha:
$LN491_2:
                      result = 456i64;
                      break;
                    case ST_Position3dYUVACxformEAlphaMul:
$LN492_0:
                      result = 457i64;
                      break;
                    case ST_BatchPosition3dYUVACxformEAlpha:
$LN493_0:
                      result = 524i64;
                      break;
                    case ST_BatchPosition3dYUVACxformEAlphaMul:
$LN494_1:
                      result = 525i64;
                      break;
                    case ST_YUVAInv:
$LN495_0:
                      result = 414i64;
                      break;
                    case ST_BatchYUVAInv:
$LN496_0:
                      result = 482i64;
                      break;
                    case ST_Position3dYUVAInv:
$LN497_0:
                      result = 448i64;
                      break;
                    case ST_BatchPosition3dYUVAInv:
$LN498_0:
                      result = 516i64;
                      break;
                    case ST_YUVACxformInv:
$LN499_1:
                      result = 421i64;
                      break;
                    case ST_BatchYUVACxformInv:
$LN500_1:
                      result = 489i64;
                      break;
                    case ST_Position3dYUVACxformInv:
$LN501_0:
                      result = 455i64;
                      break;
                    case ST_BatchPosition3dYUVACxformInv:
$LN502_0:
                      result = 523i64;
                      break;
                    case ST_YUVAEAlphaInv:
$LN503_0:
                      result = 418i64;
                      break;
                    case ST_BatchYUVAEAlphaInv:
$LN504_2:
                      result = 486i64;
                      break;
                    case ST_Position3dYUVAEAlphaInv:
$LN505_0:
                      result = 452i64;
                      break;
                    case ST_BatchPosition3dYUVAEAlphaInv:
$LN506_0:
                      result = 520i64;
                      break;
                    case ST_YUVACxformEAlphaInv:
$LN507_0:
                      result = 424i64;
                      break;
                    case ST_BatchYUVACxformEAlphaInv:
$LN508_1:
                      result = 492i64;
                      break;
                    case ST_Position3dYUVACxformEAlphaInv:
$LN509_1:
                      result = 458i64;
                      break;
                    case ST_BatchPosition3dYUVACxformEAlphaInv:
$LN510_0:
                      result = 526i64;
                      break;
                    case ST_YUVATexDensity:
$LN511_0:
                      result = 412i64;
                      break;
                    case ST_BatchYUVATexDensity:
$LN512_0:
                      result = 480i64;
                      break;
                    case ST_Position3dYUVATexDensity:
$LN513_1:
                      result = 446i64;
                      break;
                    case ST_BatchPosition3dYUVATexDensity:
$LN514_1:
                      result = 514i64;
                      break;
                    case ST_YUVAEAlphaTexDensity:
$LN515_0:
                      result = 416i64;
                      break;
                    case ST_BatchYUVAEAlphaTexDensity:
$LN516_1:
                      result = 484i64;
                      break;
                    case ST_Position3dYUVAEAlphaTexDensity:
$LN517_0:
                      result = 450i64;
                      break;
                    case ST_BatchPosition3dYUVAEAlphaTexDensity:
$LN518_1:
                      result = 518i64;
                      break;
                    default:
                      return 0i64;
                  }
                }
              }
              else
              {
                if ( shader == ST_TexTGVertexCxformAc )
                  return 73i64;
                switch ( shader )
                {
                  case ST_TexTGVertexMul:
$LN244_2:
                    result = 61i64;
                    break;
                  case ST_BatchTexTGVertex:
$LN853:
                    result = 215i64;
                    break;
                  case ST_BatchTexTGVertexMul:
$LN246_2:
                    result = 217i64;
                    break;
                  case ST_Position3dTexTGVertex:
$LN247_2:
                    result = 137i64;
                    break;
                  case ST_Position3dTexTGVertexMul:
$LN248_1:
                    result = 139i64;
                    break;
                  case ST_BatchPosition3dTexTGVertex:
$LN249_1:
                    result = 293i64;
                    break;
                  case ST_BatchPosition3dTexTGVertexMul:
$LN250_1:
                    result = 295i64;
                    break;
                  case ST_TexTGVertexCxform:
$LN251_5:
                    result = 67i64;
                    break;
                  case ST_TexTGVertexCxformMul:
$LN252_1:
                    result = 68i64;
                    break;
                  case ST_BatchTexTGVertexCxform:
$LN253_1:
                    result = 223i64;
                    break;
                  case ST_BatchTexTGVertexCxformMul:
$LN254_4:
                    result = 224i64;
                    break;
                  case ST_Position3dTexTGVertexCxform:
$LN255_1:
                    result = 145i64;
                    break;
                  case ST_Position3dTexTGVertexCxformMul:
$LN256_2:
                    result = 146i64;
                    break;
                  case ST_BatchPosition3dTexTGVertexCxform:
$LN257_1:
                    result = 301i64;
                    break;
                  case ST_BatchPosition3dTexTGVertexCxformMul:
$LN258_0:
                    result = 302i64;
                    break;
                  case ST_TexTGVertexEAlpha:
$LN259_2:
                    result = 63i64;
                    break;
                  case ST_TexTGVertexEAlphaMul:
$LN260_1:
                    result = 65i64;
                    break;
                  case ST_BatchTexTGVertexEAlpha:
$LN261_0:
                    result = 219i64;
                    break;
                  case ST_BatchTexTGVertexEAlphaMul:
$LN262_3:
                    result = 221i64;
                    break;
                  case ST_Position3dTexTGVertexEAlpha:
$LN263_1:
                    result = 141i64;
                    break;
                  case ST_Position3dTexTGVertexEAlphaMul:
$LN264_2:
                    result = 143i64;
                    break;
                  case ST_BatchPosition3dTexTGVertexEAlpha:
$LN265_1:
                    result = 297i64;
                    break;
                  case ST_BatchPosition3dTexTGVertexEAlphaMul:
$LN266_1:
                    result = 299i64;
                    break;
                  case ST_TexTGVertexCxformEAlpha:
$LN267_1:
                    result = 70i64;
                    break;
                  case ST_TexTGVertexCxformEAlphaMul:
$LN268_0:
                    result = 71i64;
                    break;
                  case ST_BatchTexTGVertexCxformEAlpha:
$LN269_2:
                    result = 226i64;
                    break;
                  case ST_BatchTexTGVertexCxformEAlphaMul:
$LN270_1:
                    result = 227i64;
                    break;
                  case ST_Position3dTexTGVertexCxformEAlpha:
$LN271_1:
                    result = 148i64;
                    break;
                  case ST_Position3dTexTGVertexCxformEAlphaMul:
$LN272_1:
                    result = 149i64;
                    break;
                  case ST_BatchPosition3dTexTGVertexCxformEAlpha:
$LN273_2:
                    result = 304i64;
                    break;
                  case ST_BatchPosition3dTexTGVertexCxformEAlphaMul:
$LN274_0:
                    result = 305i64;
                    break;
                  case ST_TexTGVertexInv:
$LN275_2:
                    result = 62i64;
                    break;
                  case ST_BatchTexTGVertexInv:
$LN276_0:
                    result = 218i64;
                    break;
                  case ST_Position3dTexTGVertexInv:
$LN277_0:
                    result = 140i64;
                    break;
                  case ST_BatchPosition3dTexTGVertexInv:
$LN278_1:
                    result = 296i64;
                    break;
                  case ST_TexTGVertexCxformInv:
$LN279_4:
                    result = 69i64;
                    break;
                  case ST_BatchTexTGVertexCxformInv:
$LN280_2:
                    result = 225i64;
                    break;
                  case ST_Position3dTexTGVertexCxformInv:
$LN281_1:
                    result = 147i64;
                    break;
                  case ST_BatchPosition3dTexTGVertexCxformInv:
$LN282_2:
                    result = 303i64;
                    break;
                  case ST_TexTGVertexEAlphaInv:
$LN283_2:
                    result = 66i64;
                    break;
                  case ST_BatchTexTGVertexEAlphaInv:
$LN284_1:
                    result = 222i64;
                    break;
                  case ST_Position3dTexTGVertexEAlphaInv:
$LN285_2:
                    result = 144i64;
                    break;
                  case ST_BatchPosition3dTexTGVertexEAlphaInv:
$LN286_2:
                    result = 300i64;
                    break;
                  case ST_TexTGVertexCxformEAlphaInv:
$LN287_2:
                    result = 72i64;
                    break;
                  case ST_BatchTexTGVertexCxformEAlphaInv:
$LN288_0:
                    result = 228i64;
                    break;
                  case ST_Position3dTexTGVertexCxformEAlphaInv:
$LN289_1:
                    result = 150i64;
                    break;
                  case ST_BatchPosition3dTexTGVertexCxformEAlphaInv:
$LN290_1:
                    result = 306i64;
                    break;
                  case ST_TexTGVertexTexDensity:
$LN291_3:
                    result = 60i64;
                    break;
                  case ST_BatchTexTGVertexTexDensity:
$LN292_2:
                    result = 216i64;
                    break;
                  case ST_Position3dTexTGVertexTexDensity:
$LN293_1:
                    result = 138i64;
                    break;
                  case ST_BatchPosition3dTexTGVertexTexDensity:
$LN294_2:
                    result = 294i64;
                    break;
                  case ST_TexTGVertexEAlphaTexDensity:
$LN295_1:
                    result = 64i64;
                    break;
                  case ST_BatchTexTGVertexEAlphaTexDensity:
$LN296_7:
                    result = 220i64;
                    break;
                  case ST_Position3dTexTGVertexEAlphaTexDensity:
$LN297_1:
                    result = 142i64;
                    break;
                  case ST_BatchPosition3dTexTGVertexEAlphaTexDensity:
$LN298_2:
                    result = 298i64;
                    break;
                  default:
                    return 0i64;
                }
              }
            }
            else
            {
              if ( shader == ST_TexTGVertex )
                return 59i64;
              switch ( shader )
              {
                case ST_TexTGTexTGCxformAcMul:
$LN220_1:
                  result = 54i64;
                  break;
                case ST_BatchTexTGTexTGCxformAc:
$LN829:
                  result = 209i64;
                  break;
                case ST_BatchTexTGTexTGCxformAcMul:
$LN222_2:
                  result = 210i64;
                  break;
                case ST_Position3dTexTGTexTGCxformAc:
$LN223_4:
                  result = 131i64;
                  break;
                case ST_Position3dTexTGTexTGCxformAcMul:
$LN224_0:
                  result = 132i64;
                  break;
                case ST_BatchPosition3dTexTGTexTGCxformAc:
$LN225_2:
                  result = 287i64;
                  break;
                case ST_BatchPosition3dTexTGTexTGCxformAcMul:
$LN226_0:
                  result = 288i64;
                  break;
                case ST_TexTGTexTGCxformAcEAlpha:
$LN227_1:
                  result = 56i64;
                  break;
                case ST_TexTGTexTGCxformAcEAlphaMul:
$LN228_1:
                  result = 57i64;
                  break;
                case ST_BatchTexTGTexTGCxformAcEAlpha:
$LN229_0:
                  result = 212i64;
                  break;
                case ST_BatchTexTGTexTGCxformAcEAlphaMul:
$LN230_0:
                  result = 213i64;
                  break;
                case ST_Position3dTexTGTexTGCxformAcEAlpha:
$LN231_1:
                  result = 134i64;
                  break;
                case ST_Position3dTexTGTexTGCxformAcEAlphaMul:
$LN232_0:
                  result = 135i64;
                  break;
                case ST_BatchPosition3dTexTGTexTGCxformAcEAlpha:
$LN233_3:
                  result = 290i64;
                  break;
                case ST_BatchPosition3dTexTGTexTGCxformAcEAlphaMul:
$LN234_1:
                  result = 291i64;
                  break;
                case ST_TexTGTexTGCxformAcInv:
$LN235_0:
                  result = 55i64;
                  break;
                case ST_BatchTexTGTexTGCxformAcInv:
$LN236_0:
                  result = 211i64;
                  break;
                case ST_Position3dTexTGTexTGCxformAcInv:
$LN237_1:
                  result = 133i64;
                  break;
                case ST_BatchPosition3dTexTGTexTGCxformAcInv:
$LN238_1:
                  result = 289i64;
                  break;
                case ST_TexTGTexTGCxformAcEAlphaInv:
$LN239_1:
                  result = 58i64;
                  break;
                case ST_BatchTexTGTexTGCxformAcEAlphaInv:
$LN240_1:
                  result = 214i64;
                  break;
                case ST_Position3dTexTGTexTGCxformAcEAlphaInv:
$LN241_0:
                  result = 136i64;
                  break;
                case ST_BatchPosition3dTexTGTexTGCxformAcEAlphaInv:
$LN242_0:
                  result = 292i64;
                  break;
                default:
                  return 0i64;
              }
            }
          }
          else
          {
            if ( shader == ST_TexTGTexTGCxformAc )
              return 53i64;
            switch ( shader )
            {
              case ST_TexTGTexTGMul:
$LN164_4:
                result = 41i64;
                break;
              case ST_BatchTexTGTexTG:
$LN773:
                result = 195i64;
                break;
              case ST_BatchTexTGTexTGMul:
$LN166_5:
                result = 197i64;
                break;
              case ST_Position3dTexTGTexTG:
$LN167_3:
                result = 117i64;
                break;
              case ST_Position3dTexTGTexTGMul:
$LN168_4:
                result = 119i64;
                break;
              case ST_BatchPosition3dTexTGTexTG:
$LN169_11:
                result = 273i64;
                break;
              case ST_BatchPosition3dTexTGTexTGMul:
$LN170_4:
                result = 275i64;
                break;
              case ST_TexTGTexTGCxform:
$LN171_5:
                result = 47i64;
                break;
              case ST_TexTGTexTGCxformMul:
$LN172_7:
                result = 48i64;
                break;
              case ST_BatchTexTGTexTGCxform:
$LN173_5:
                result = 203i64;
                break;
              case ST_BatchTexTGTexTGCxformMul:
$LN174_2:
                result = 204i64;
                break;
              case ST_Position3dTexTGTexTGCxform:
$LN175_5:
                result = 125i64;
                break;
              case ST_Position3dTexTGTexTGCxformMul:
$LN176_4:
                result = 126i64;
                break;
              case ST_BatchPosition3dTexTGTexTGCxform:
$LN177_2:
                result = 281i64;
                break;
              case ST_BatchPosition3dTexTGTexTGCxformMul:
$LN178_2:
                result = 282i64;
                break;
              case ST_TexTGTexTGEAlpha:
$LN179_2:
                result = 43i64;
                break;
              case ST_TexTGTexTGEAlphaMul:
$LN180_1:
                result = 45i64;
                break;
              case ST_BatchTexTGTexTGEAlpha:
$LN181_0:
                result = 199i64;
                break;
              case ST_BatchTexTGTexTGEAlphaMul:
$LN182_5:
                result = 201i64;
                break;
              case ST_Position3dTexTGTexTGEAlpha:
$LN183_2:
                result = 121i64;
                break;
              case ST_Position3dTexTGTexTGEAlphaMul:
$LN184_3:
                result = 123i64;
                break;
              case ST_BatchPosition3dTexTGTexTGEAlpha:
$LN185_3:
                result = 277i64;
                break;
              case ST_BatchPosition3dTexTGTexTGEAlphaMul:
$LN186_1:
                result = 279i64;
                break;
              case ST_TexTGTexTGCxformEAlpha:
$LN187_2:
                result = 50i64;
                break;
              case ST_TexTGTexTGCxformEAlphaMul:
$LN188_8:
                result = 51i64;
                break;
              case ST_BatchTexTGTexTGCxformEAlpha:
$LN189_5:
                result = 206i64;
                break;
              case ST_BatchTexTGTexTGCxformEAlphaMul:
$LN190_6:
                result = 207i64;
                break;
              case ST_Position3dTexTGTexTGCxformEAlpha:
$LN191_4:
                result = 128i64;
                break;
              case ST_Position3dTexTGTexTGCxformEAlphaMul:
$LN192_2:
                result = 129i64;
                break;
              case ST_BatchPosition3dTexTGTexTGCxformEAlpha:
$LN193_3:
                result = 284i64;
                break;
              case ST_BatchPosition3dTexTGTexTGCxformEAlphaMul:
$LN194_2:
                result = 285i64;
                break;
              case ST_TexTGTexTGInv:
$LN195_7:
                result = 42i64;
                break;
              case ST_BatchTexTGTexTGInv:
$LN196_4:
                result = 198i64;
                break;
              case ST_Position3dTexTGTexTGInv:
$LN197_8:
                result = 120i64;
                break;
              case ST_BatchPosition3dTexTGTexTGInv:
$LN198_8:
                result = 276i64;
                break;
              case ST_TexTGTexTGCxformInv:
$LN199_3:
                result = 49i64;
                break;
              case ST_BatchTexTGTexTGCxformInv:
$LN200_3:
                result = 205i64;
                break;
              case ST_Position3dTexTGTexTGCxformInv:
$LN201_3:
                result = 127i64;
                break;
              case ST_BatchPosition3dTexTGTexTGCxformInv:
$LN202_6:
                result = 283i64;
                break;
              case ST_TexTGTexTGEAlphaInv:
$LN203_4:
                result = 46i64;
                break;
              case ST_BatchTexTGTexTGEAlphaInv:
$LN204_4:
                result = 202i64;
                break;
              case ST_Position3dTexTGTexTGEAlphaInv:
$LN205_3:
                result = 124i64;
                break;
              case ST_BatchPosition3dTexTGTexTGEAlphaInv:
$LN206_4:
                result = 280i64;
                break;
              case ST_TexTGTexTGCxformEAlphaInv:
$LN207_1:
                result = 52i64;
                break;
              case ST_BatchTexTGTexTGCxformEAlphaInv:
$LN208_1:
                result = 208i64;
                break;
              case ST_Position3dTexTGTexTGCxformEAlphaInv:
$LN209_1:
                result = 130i64;
                break;
              case ST_BatchPosition3dTexTGTexTGCxformEAlphaInv:
$LN210_1:
                result = 286i64;
                break;
              case ST_TexTGTexTGTexDensity:
$LN211_0:
                result = 40i64;
                break;
              case ST_BatchTexTGTexTGTexDensity:
$LN212_0:
                result = 196i64;
                break;
              case ST_Position3dTexTGTexTGTexDensity:
$LN213_1:
                result = 118i64;
                break;
              case ST_BatchPosition3dTexTGTexTGTexDensity:
$LN214_1:
                result = 274i64;
                break;
              case ST_TexTGTexTGEAlphaTexDensity:
$LN215_3:
                result = 44i64;
                break;
              case ST_BatchTexTGTexTGEAlphaTexDensity:
$LN216_1:
                result = 200i64;
                break;
              case ST_Position3dTexTGTexTGEAlphaTexDensity:
$LN217_1:
                result = 122i64;
                break;
              case ST_BatchPosition3dTexTGTexTGEAlphaTexDensity:
$LN218_0:
                result = 278i64;
                break;
              default:
                return 0i64;
            }
          }
        }
        else
        {
          if ( shader == ST_TexTGTexTG )
            return 39i64;
          switch ( shader )
          {
            case ST_VertexCxformAcMul:
$LN140_4:
              result = 34i64;
              break;
            case ST_BatchVertexCxformAc:
$LN749:
              result = 189i64;
              break;
            case ST_BatchVertexCxformAcMul:
$LN142_2:
              result = 190i64;
              break;
            case ST_Position3dVertexCxformAc:
$LN143_6:
              result = 111i64;
              break;
            case ST_Position3dVertexCxformAcMul:
$LN144_1:
              result = 112i64;
              break;
            case ST_BatchPosition3dVertexCxformAc:
$LN145_4:
              result = 267i64;
              break;
            case ST_BatchPosition3dVertexCxformAcMul:
$LN146_2:
              result = 268i64;
              break;
            case ST_VertexCxformAcEAlpha:
$LN147_1:
              result = 36i64;
              break;
            case ST_VertexCxformAcEAlphaMul:
$LN148_3:
              result = 37i64;
              break;
            case ST_BatchVertexCxformAcEAlpha:
$LN149_5:
              result = 192i64;
              break;
            case ST_BatchVertexCxformAcEAlphaMul:
$LN150_8:
              result = 193i64;
              break;
            case ST_Position3dVertexCxformAcEAlpha:
$LN151_5:
              result = 114i64;
              break;
            case ST_Position3dVertexCxformAcEAlphaMul:
$LN152_4:
              result = 115i64;
              break;
            case ST_BatchPosition3dVertexCxformAcEAlpha:
$LN153_1:
              result = 270i64;
              break;
            case ST_BatchPosition3dVertexCxformAcEAlphaMul:
$LN154_7:
              result = 271i64;
              break;
            case ST_VertexCxformAcInv:
$LN155_3:
              result = 35i64;
              break;
            case ST_BatchVertexCxformAcInv:
$LN156_10:
              result = 191i64;
              break;
            case ST_Position3dVertexCxformAcInv:
$LN157_3:
              result = 113i64;
              break;
            case ST_BatchPosition3dVertexCxformAcInv:
$LN158_3:
              result = 269i64;
              break;
            case ST_VertexCxformAcEAlphaInv:
$LN159_4:
              result = 38i64;
              break;
            case ST_BatchVertexCxformAcEAlphaInv:
$LN160_4:
              result = 194i64;
              break;
            case ST_Position3dVertexCxformAcEAlphaInv:
$LN161_4:
              result = 116i64;
              break;
            case ST_BatchPosition3dVertexCxformAcEAlphaInv:
$LN162_1:
              result = 272i64;
              break;
            default:
              return 0i64;
          }
        }
      }
      else
      {
        if ( shader == ST_VertexCxformAc )
          return 33i64;
        switch ( shader )
        {
          case ST_VertexMul:
$LN92_8:
            result = 22i64;
            break;
          case ST_BatchVertex:
$LN701:
            result = 177i64;
            break;
          case ST_BatchVertexMul:
$LN94_7:
            result = 178i64;
            break;
          case ST_Position3dVertex:
$LN95_7:
            result = 99i64;
            break;
          case ST_Position3dVertexMul:
$LN96_6:
            result = 100i64;
            break;
          case ST_BatchPosition3dVertex:
$LN97_7:
            result = 255i64;
            break;
          case ST_BatchPosition3dVertexMul:
$LN98_9:
            result = 256i64;
            break;
          case ST_VertexCxform:
$LN99_8:
            result = 27i64;
            break;
          case ST_VertexCxformMul:
$LN100_6:
            result = 28i64;
            break;
          case ST_BatchVertexCxform:
$LN101_7:
            result = 183i64;
            break;
          case ST_BatchVertexCxformMul:
$LN102_10:
            result = 184i64;
            break;
          case ST_Position3dVertexCxform:
$LN103_6:
            result = 105i64;
            break;
          case ST_Position3dVertexCxformMul:
$LN104_7:
            result = 106i64;
            break;
          case ST_BatchPosition3dVertexCxform:
$LN105_8:
            result = 261i64;
            break;
          case ST_BatchPosition3dVertexCxformMul:
$LN106_9:
            result = 262i64;
            break;
          case ST_VertexEAlpha:
$LN107_8:
            result = 24i64;
            break;
          case ST_VertexEAlphaMul:
$LN108_7:
            result = 25i64;
            break;
          case ST_BatchVertexEAlpha:
$LN109_10:
            result = 180i64;
            break;
          case ST_BatchVertexEAlphaMul:
$LN110_7:
            result = 181i64;
            break;
          case ST_Position3dVertexEAlpha:
$LN111_7:
            result = 102i64;
            break;
          case ST_Position3dVertexEAlphaMul:
$LN112_8:
            result = 103i64;
            break;
          case ST_BatchPosition3dVertexEAlpha:
$LN113_10:
            result = 258i64;
            break;
          case ST_BatchPosition3dVertexEAlphaMul:
$LN114_7:
            result = 259i64;
            break;
          case ST_VertexCxformEAlpha:
$LN115_13:
            result = 30i64;
            break;
          case ST_VertexCxformEAlphaMul:
$LN116_7:
            result = 31i64;
            break;
          case ST_BatchVertexCxformEAlpha:
$LN117_8:
            result = 186i64;
            break;
          case ST_BatchVertexCxformEAlphaMul:
$LN118_8:
            result = 187i64;
            break;
          case ST_Position3dVertexCxformEAlpha:
$LN119_9:
            result = 108i64;
            break;
          case ST_Position3dVertexCxformEAlphaMul:
$LN120_7:
            result = 109i64;
            break;
          case ST_BatchPosition3dVertexCxformEAlpha:
$LN121_6:
            result = 264i64;
            break;
          case ST_BatchPosition3dVertexCxformEAlphaMul:
$LN122_6:
            result = 265i64;
            break;
          case ST_VertexInv:
$LN123_7:
            result = 23i64;
            break;
          case ST_BatchVertexInv:
$LN124_7:
            result = 179i64;
            break;
          case ST_Position3dVertexInv:
$LN125_7:
            result = 101i64;
            break;
          case ST_BatchPosition3dVertexInv:
$LN126_6:
            result = 257i64;
            break;
          case ST_VertexCxformInv:
$LN127_5:
            result = 29i64;
            break;
          case ST_BatchVertexCxformInv:
$LN128_4:
            result = 185i64;
            break;
          case ST_Position3dVertexCxformInv:
$LN129_5:
            result = 107i64;
            break;
          case ST_BatchPosition3dVertexCxformInv:
$LN130_9:
            result = 263i64;
            break;
          case ST_VertexEAlphaInv:
$LN131_6:
            result = 26i64;
            break;
          case ST_BatchVertexEAlphaInv:
$LN132_6:
            result = 182i64;
            break;
          case ST_Position3dVertexEAlphaInv:
$LN133_39:
            result = 104i64;
            break;
          case ST_BatchPosition3dVertexEAlphaInv:
$LN134_8:
            result = 260i64;
            break;
          case ST_VertexCxformEAlphaInv:
$LN135_1:
            result = 32i64;
            break;
          case ST_BatchVertexCxformEAlphaInv:
$LN136_7:
            result = 188i64;
            break;
          case ST_Position3dVertexCxformEAlphaInv:
$LN137_3:
            result = 110i64;
            break;
          case ST_BatchPosition3dVertexCxformEAlphaInv:
$LN138_5:
            result = 266i64;
            break;
          default:
            return 0i64;
        }
      }
    }
    else
    {
      if ( shader == ST_Vertex )
        return 21i64;
      switch ( shader )
      {
        case ST_TexTGCxformAcMul:
$LN68_14:
          result = 15i64;
          break;
        case ST_BatchTexTGCxformAc:
$LN677_0:
          result = 171i64;
          break;
        case ST_BatchTexTGCxformAcMul:
$LN70_8:
          result = 172i64;
          break;
        case ST_Position3dTexTGCxformAc:
$LN71_16:
          result = 93i64;
          break;
        case ST_Position3dTexTGCxformAcMul:
$LN72_12:
          result = 94i64;
          break;
        case ST_BatchPosition3dTexTGCxformAc:
$LN73_8:
          result = 249i64;
          break;
        case ST_BatchPosition3dTexTGCxformAcMul:
$LN74_13:
          result = 250i64;
          break;
        case ST_TexTGCxformAcEAlpha:
$LN75_16:
          result = 17i64;
          break;
        case ST_TexTGCxformAcEAlphaMul:
$LN76_15:
          result = 18i64;
          break;
        case ST_BatchTexTGCxformAcEAlpha:
$LN77_17:
          result = 174i64;
          break;
        case ST_BatchTexTGCxformAcEAlphaMul:
$LN78_11:
          result = 175i64;
          break;
        case ST_Position3dTexTGCxformAcEAlpha:
$LN79_13:
          result = 96i64;
          break;
        case ST_Position3dTexTGCxformAcEAlphaMul:
$LN80_11:
          result = 97i64;
          break;
        case ST_BatchPosition3dTexTGCxformAcEAlpha:
$LN81_14:
          result = 252i64;
          break;
        case ST_BatchPosition3dTexTGCxformAcEAlphaMul:
$LN82_12:
          result = 253i64;
          break;
        case ST_TexTGCxformAcInv:
$LN83_8:
          result = 16i64;
          break;
        case ST_BatchTexTGCxformAcInv:
$LN84_14:
          result = 173i64;
          break;
        case ST_Position3dTexTGCxformAcInv:
$LN85_12:
          result = 95i64;
          break;
        case ST_BatchPosition3dTexTGCxformAcInv:
$LN86_13:
          result = 251i64;
          break;
        case ST_TexTGCxformAcEAlphaInv:
$LN87_10:
          result = 19i64;
          break;
        case ST_BatchTexTGCxformAcEAlphaInv:
$LN88_10:
          result = 176i64;
          break;
        case ST_Position3dTexTGCxformAcEAlphaInv:
$LN89_15:
          result = 98i64;
          break;
        case ST_BatchPosition3dTexTGCxformAcEAlphaInv:
$LN90_11:
          result = 254i64;
          break;
        default:
          return 0i64;
      }
    }
  }
  else
  {
    if ( shader == ST_TexTGCxformAc )
      return 14i64;
    switch ( shader )
    {
      case ST_base_Batch:
$LN620_0:
        result = 2i64;
        break;
      case ST_BatchTexTG:
$LN13_142:
        result = 157i64;
        break;
      case ST_base_Instanced:
$LN14_120:
        result = 159i64;
        break;
      case ST_Position3dTexTG:
$LN15_129:
        result = 79i64;
        break;
      case ST_Position3dTexTGMul:
$LN16_106:
        result = 81i64;
        break;
      case ST_BatchPosition3dTexTG:
$LN17_93:
        result = 235i64;
        break;
      case ST_BatchPosition3dTexTGMul:
$LN18_90:
        result = 237i64;
        break;
      case ST_TexTGCxform:
$LN19_141:
        result = 8i64;
        break;
      case ST_TexTGCxformMul:
$LN20_75:
        result = 9i64;
        break;
      case ST_BatchTexTGCxform:
$LN21_66:
        result = 165i64;
        break;
      case ST_BatchTexTGCxformMul:
$LN22_58:
        result = 166i64;
        break;
      case ST_Position3dTexTGCxform:
$LN23_67:
        result = 87i64;
        break;
      case ST_Position3dTexTGCxformMul:
$LN24_64:
        result = 88i64;
        break;
      case ST_BatchPosition3dTexTGCxform:
$LN25_48:
        result = 243i64;
        break;
      case ST_BatchPosition3dTexTGCxformMul:
$LN26_52:
        result = 244i64;
        break;
      case ST_TexTGEAlpha:
$LN27_52:
        result = 4i64;
        break;
      case ST_TexTGEAlphaMul:
$LN28_44:
        result = 6i64;
        break;
      case ST_BatchTexTGEAlpha:
$LN29_42:
        result = 161i64;
        break;
      case ST_BatchTexTGEAlphaMul:
$LN30_46:
        result = 163i64;
        break;
      case ST_Position3dTexTGEAlpha:
$LN31_29:
        result = 83i64;
        break;
      case ST_Position3dTexTGEAlphaMul:
$LN32_31:
        result = 85i64;
        break;
      case ST_BatchPosition3dTexTGEAlpha:
$LN33_26:
        result = 239i64;
        break;
      case ST_BatchPosition3dTexTGEAlphaMul:
$LN34_23:
        result = 241i64;
        break;
      case ST_TexTGCxformEAlpha:
$LN35_21:
        result = 11i64;
        break;
      case ST_TexTGCxformEAlphaMul:
$LN36_26:
        result = 12i64;
        break;
      case ST_BatchTexTGCxformEAlpha:
$LN37_32:
        result = 168i64;
        break;
      case ST_BatchTexTGCxformEAlphaMul:
$LN38_26:
        result = 169i64;
        break;
      case ST_Position3dTexTGCxformEAlpha:
$LN39_25:
        result = 90i64;
        break;
      case ST_Position3dTexTGCxformEAlphaMul:
$LN40_24:
        result = 91i64;
        break;
      case ST_BatchPosition3dTexTGCxformEAlpha:
$LN41_20:
        result = 246i64;
        break;
      case ST_BatchPosition3dTexTGCxformEAlphaMul:
$LN42_23:
        result = 247i64;
        break;
      case ST_TexTGInv:
$LN43_20:
        result = 3i64;
        break;
      case ST_BatchTexTGInv:
$LN44_22:
        result = 160i64;
        break;
      case ST_Position3dTexTGInv:
$LN45_25:
        result = 82i64;
        break;
      case ST_BatchPosition3dTexTGInv:
$LN46_17:
        result = 238i64;
        break;
      case ST_TexTGCxformInv:
$LN47_16:
        result = 10i64;
        break;
      case ST_BatchTexTGCxformInv:
$LN48_14:
        result = 167i64;
        break;
      case ST_Position3dTexTGCxformInv:
$LN49_16:
        result = 89i64;
        break;
      case ST_BatchPosition3dTexTGCxformInv:
$LN50_14:
        result = 245i64;
        break;
      case ST_TexTGEAlphaInv:
$LN51_13:
        result = 7i64;
        break;
      case ST_BatchTexTGEAlphaInv:
$LN52_14:
        result = 164i64;
        break;
      case ST_Position3dTexTGEAlphaInv:
$LN53_21:
        result = 86i64;
        break;
      case ST_BatchPosition3dTexTGEAlphaInv:
$LN54_17:
        result = 242i64;
        break;
      case ST_TexTGCxformEAlphaInv:
$LN55_12:
        result = 13i64;
        break;
      case ST_BatchTexTGCxformEAlphaInv:
$LN56_12:
        result = 170i64;
        break;
      case ST_Position3dTexTGCxformEAlphaInv:
$LN57_12:
        result = 92i64;
        break;
      case ST_BatchPosition3dTexTGCxformEAlphaInv:
$LN58_14:
        result = 248i64;
        break;
      case ST_TexTGTexDensity:
$LN59_12:
        result = 1i64;
        break;
      case ST_BatchTexTGTexDensity:
$LN60_9:
        result = 158i64;
        break;
      case ST_Position3dTexTGTexDensity:
$LN61_9:
        result = 80i64;
        break;
      case ST_BatchPosition3dTexTGTexDensity:
$LN62_13:
        result = 236i64;
        break;
      case ST_TexTGEAlphaTexDensity:
$LN63_14:
        result = 5i64;
        break;
      case ST_BatchTexTGEAlphaTexDensity:
$LN64_19:
        result = 162i64;
        break;
      case ST_Position3dTexTGEAlphaTexDensity:
$LN65_17:
        result = 84i64;
        break;
      case ST_BatchPosition3dTexTGEAlphaTexDensity:
$LN66_14:
        result = 240i64;
        break;
      default:
        return 0i64;
    }
  }
  return result;
}

__int64 __fastcall Scaleform::Render::GL::ShaderDesc::GetShaderIndex(
        Scaleform::Render::GL::ShaderDesc::ShaderType type)
{
  __int64 result; // rax
  __int32 v2; // ecx
  __int32 v3; // ecx
  __int32 v4; // ecx
  __int32 v5; // ecx
  __int32 v6; // ecx
  __int32 v7; // ecx
  __int32 v8; // ecx
  __int32 v9; // ecx
  __int32 v10; // ecx
  __int32 v11; // ecx
  __int32 v12; // ecx
  __int32 v13; // ecx
  __int32 v14; // ecx
  __int32 v15; // ecx
  __int32 v16; // ecx
  __int32 v17; // ecx
  __int32 v18; // ecx
  __int32 v19; // ecx
  __int32 v20; // ecx
  __int32 v21; // ecx
  __int32 v22; // ecx
  __int32 v23; // ecx
  __int32 v24; // ecx
  __int32 v25; // ecx
  __int32 v26; // ecx
  __int32 v27; // ecx
  __int32 v28; // ecx
  __int32 v29; // ecx
  __int32 v30; // ecx
  __int32 v31; // ecx
  __int32 v32; // ecx
  __int32 v33; // ecx
  __int32 v34; // ecx
  __int32 v35; // ecx
  __int32 v36; // ecx
  __int32 v37; // ecx
  __int32 v38; // ecx
  __int32 v39; // ecx
  __int32 v40; // ecx
  __int32 v41; // ecx
  __int32 v42; // ecx
  __int32 v43; // ecx

  if ( type > ST_TexTGCxformAc )
  {
    if ( type > ST_ATexTG )
    {
      if ( type > ST_ATexTGCxformAc )
      {
        if ( type > ST_Vertex )
        {
          if ( type > ST_VertexCxformAc )
          {
            if ( type > ST_TexTGTexTG )
            {
              if ( type > ST_TexTGTexTGCxformAc )
              {
                if ( type > ST_ATexTGATexTG )
                {
                  if ( type > ST_ATexTGATexTGCxformAc )
                  {
                    if ( type > ST_TexTGVertex )
                    {
                      if ( type > ST_TexTGVertexCxformAc )
                      {
                        if ( type > ST_ATexTGVertex )
                        {
                          if ( type > ST_ATexTGVertexCxformAc )
                          {
                            if ( type > ST_start_base_text )
                            {
                              if ( type > ST_Text )
                              {
                                if ( type > ST_TexUV )
                                {
                                  if ( type > ST_ATexUV )
                                  {
                                    if ( type > ST_start_base_video )
                                    {
                                      if ( type > ST_YUVCxformAc )
                                      {
                                        if ( type > ST_YUVA )
                                        {
                                          if ( type > ST_YUVACxformAc )
                                          {
                                            if ( type > ST_YUY2 )
                                            {
                                              if ( type > ST_YUY2CxformAc )
                                              {
                                                if ( type > ST_start_cmatrix )
                                                {
                                                  if ( type > ST_SGrad2InnerBevelMul )
                                                  {
                                                    if ( type > ST_start_DisplacementMap )
                                                    {
                                                      if ( type > ST_start_DrawableMerge )
                                                      {
                                                        if ( type > ST_BlendDifference )
                                                        {
                                                          v42 = type - 5767172;
                                                          if ( !v42 )
                                                            return 1314i64;
                                                          v43 = v42 - 4;
                                                          if ( !v43 )
                                                            return 1315i64;
                                                          if ( v43 == 8 )
                                                            return 1316i64;
                                                        }
                                                        else
                                                        {
                                                          if ( type == ST_BlendDifference )
                                                            return 1313i64;
                                                          v39 = type - 4718592;
                                                          if ( !v39 )
                                                            return 1309i64;
                                                          v40 = v39 - 0x80000;
                                                          if ( !v40 )
                                                            return 1310i64;
                                                          v41 = v40 - 0x80000;
                                                          if ( !v41 )
                                                            return 1311i64;
                                                          if ( v41 == 1 )
                                                            return 1312i64;
                                                        }
                                                      }
                                                      else
                                                      {
                                                        if ( type == ST_start_DrawableMerge )
                                                          return 1308i64;
                                                        if ( type > ST_DrawableCopyPixelsMergeAlpha )
                                                        {
                                                          v37 = type - 3670144;
                                                          if ( !v37 )
                                                            return 1305i64;
                                                          v38 = v37 - 32;
                                                          if ( !v38 )
                                                            return 1306i64;
                                                          if ( v38 == 32 )
                                                            return 1307i64;
                                                        }
                                                        else
                                                        {
                                                          if ( type == ST_DrawableCopyPixelsMergeAlpha )
                                                            return 1304i64;
                                                          v34 = type - 3145984;
                                                          if ( !v34 )
                                                            return 1300i64;
                                                          v35 = v34 - 256;
                                                          if ( !v35 )
                                                            return 1301i64;
                                                          v36 = v35 - 523776;
                                                          if ( !v36 )
                                                            return 1302i64;
                                                          if ( v36 == 32 )
                                                            return 1303i64;
                                                        }
                                                      }
                                                    }
                                                    else
                                                    {
                                                      if ( type == ST_start_DisplacementMap )
                                                        return 1299i64;
                                                      if ( type > ST_SColor2FullBevelMul )
                                                      {
                                                        if ( type > ST_SColor2HideBaseFullBevel )
                                                        {
                                                          v32 = type - 2958337;
                                                          if ( !v32 )
                                                            return 1296i64;
                                                          v33 = v32 - 3071;
                                                          if ( !v33 )
                                                            return 1297i64;
                                                          if ( v33 == 1 )
                                                            return 1298i64;
                                                        }
                                                        else
                                                        {
                                                          if ( type == ST_SColor2HideBaseFullBevel )
                                                            return 1295i64;
                                                          v29 = type - 2953216;
                                                          if ( !v29 )
                                                            return 1291i64;
                                                          v30 = v29 - 1;
                                                          if ( !v30 )
                                                            return 1292i64;
                                                          v31 = v30 - 4095;
                                                          if ( !v31 )
                                                            return 1293i64;
                                                          if ( v31 == 1 )
                                                            return 1294i64;
                                                        }
                                                      }
                                                      else
                                                      {
                                                        if ( type == ST_SColor2FullBevelMul )
                                                          return 1290i64;
                                                        if ( type > ST_SGrad2HideBaseInnerBevel )
                                                        {
                                                          v26 = type - 2912257;
                                                          if ( !v26 )
                                                            return 1286i64;
                                                          v27 = v26 - 36863;
                                                          if ( !v27 )
                                                            return 1287i64;
                                                          v28 = v27 - 1;
                                                          if ( !v28 )
                                                            return 1288i64;
                                                          if ( v28 == 1023 )
                                                            return 1289i64;
                                                        }
                                                        else
                                                        {
                                                          if ( type == ST_SGrad2HideBaseInnerBevel )
                                                            return 1285i64;
                                                          v23 = type - 2908160;
                                                          if ( !v23 )
                                                            return 1281i64;
                                                          v24 = v23 - 1;
                                                          if ( !v24 )
                                                            return 1282i64;
                                                          v25 = v24 - 1023;
                                                          if ( !v25 )
                                                            return 1283i64;
                                                          if ( v25 == 1 )
                                                            return 1284i64;
                                                        }
                                                      }
                                                    }
                                                  }
                                                  else
                                                  {
                                                    if ( type == ST_SGrad2InnerBevelMul )
                                                      return 1280i64;
                                                    if ( type > ST_SColorHideBaseInnerShadowMul )
                                                    {
                                                      if ( type > ST_SGradHideBaseFullBevel )
                                                      {
                                                        if ( type > ST_SGrad2OuterBevelMul )
                                                        {
                                                          v21 = type - 2900992;
                                                          if ( !v21 )
                                                            return 1277i64;
                                                          v22 = v21 - 1;
                                                          if ( !v22 )
                                                            return 1278i64;
                                                          if ( v22 == 3071 )
                                                            return 1279i64;
                                                        }
                                                        else
                                                        {
                                                          if ( type == ST_SGrad2OuterBevelMul )
                                                            return 1276i64;
                                                          v18 = type - 2663425;
                                                          if ( !v18 )
                                                            return 1272i64;
                                                          v19 = v18 - 3071;
                                                          if ( !v19 )
                                                            return 1273i64;
                                                          v20 = v19 - 1;
                                                          if ( !v20 )
                                                            return 1274i64;
                                                          if ( v20 == 233471 )
                                                            return 1275i64;
                                                        }
                                                      }
                                                      else
                                                      {
                                                        if ( type == ST_SGradHideBaseFullBevel )
                                                          return 1271i64;
                                                        if ( type > ST_SGradInnerBevel )
                                                        {
                                                          v16 = type - 2658305;
                                                          if ( !v16 )
                                                            return 1268i64;
                                                          v17 = v16 - 4095;
                                                          if ( !v17 )
                                                            return 1269i64;
                                                          if ( v17 == 1 )
                                                            return 1270i64;
                                                        }
                                                        else
                                                        {
                                                          if ( type == ST_SGradInnerBevel )
                                                            return 1267i64;
                                                          v13 = type - 2654208;
                                                          if ( !v13 )
                                                            return 1263i64;
                                                          v14 = v13 - 1;
                                                          if ( !v14 )
                                                            return 1264i64;
                                                          v15 = v14 - 1023;
                                                          if ( !v15 )
                                                            return 1265i64;
                                                          if ( v15 == 1 )
                                                            return 1266i64;
                                                        }
                                                      }
                                                    }
                                                    else
                                                    {
                                                      if ( type == ST_SColorHideBaseInnerShadowMul )
                                                        return 1262i64;
                                                      if ( type > ST_SColorFullBevel )
                                                      {
                                                        if ( type > ST_SColorHideBaseOuterBevelMul )
                                                        {
                                                          v11 = type - 2630656;
                                                          if ( !v11 )
                                                            return 1259i64;
                                                          v12 = v11 - 1;
                                                          if ( !v12 )
                                                            return 1260i64;
                                                          if ( v12 == 1023 )
                                                            return 1261i64;
                                                        }
                                                        else
                                                        {
                                                          if ( type == ST_SColorHideBaseOuterBevelMul )
                                                            return 1258i64;
                                                          v8 = type - 2622465;
                                                          if ( !v8 )
                                                            return 1254i64;
                                                          v9 = v8 - 1023;
                                                          if ( !v9 )
                                                            return 1255i64;
                                                          v10 = v9 - 1;
                                                          if ( !v10 )
                                                            return 1256i64;
                                                          if ( v10 == 6143 )
                                                            return 1257i64;
                                                        }
                                                      }
                                                      else
                                                      {
                                                        if ( type == ST_SColorFullBevel )
                                                          return 1253i64;
                                                        if ( type > ST_Box1BlurMul )
                                                        {
                                                          v5 = type - 2228224;
                                                          if ( !v5 )
                                                            return 1249i64;
                                                          v6 = v5 - 1;
                                                          if ( !v6 )
                                                            return 1250i64;
                                                          v7 = v6 - 393215;
                                                          if ( !v7 )
                                                            return 1251i64;
                                                          if ( v7 == 1 )
                                                            return 1252i64;
                                                        }
                                                        else
                                                        {
                                                          if ( type == ST_Box1BlurMul )
                                                            return 1248i64;
                                                          v2 = type - 1572865;
                                                          if ( !v2 )
                                                            return 1244i64;
                                                          v3 = v2 - 31;
                                                          if ( !v3 )
                                                            return 1245i64;
                                                          v4 = v3 - 1;
                                                          if ( !v4 )
                                                            return 1246i64;
                                                          if ( v4 == 524255 )
                                                            return 1247i64;
                                                        }
                                                      }
                                                    }
                                                  }
                                                  return 0i64;
                                                }
                                                if ( type == ST_start_cmatrix )
                                                {
                                                  return 1243i64;
                                                }
                                                else
                                                {
                                                  switch ( type )
                                                  {
                                                    case ST_YUY2CxformAcMul:
                                                      result = 1220i64;
                                                      break;
                                                    case ST_BatchYUY2CxformAc:
                                                      result = 1221i64;
                                                      break;
                                                    case ST_BatchYUY2CxformAcMul:
                                                      result = 1222i64;
                                                      break;
                                                    case ST_InstancedYUY2CxformAc:
                                                      result = 1223i64;
                                                      break;
                                                    case ST_InstancedYUY2CxformAcMul:
                                                      result = 1224i64;
                                                      break;
                                                    case ST_Position3dYUY2CxformAc:
                                                      result = 1225i64;
                                                      break;
                                                    case ST_Position3dYUY2CxformAcMul:
                                                      result = 1226i64;
                                                      break;
                                                    case ST_BatchPosition3dYUY2CxformAc:
                                                      result = 1227i64;
                                                      break;
                                                    case ST_BatchPosition3dYUY2CxformAcMul:
                                                      result = 1228i64;
                                                      break;
                                                    case ST_InstancedPosition3dYUY2CxformAc:
                                                      result = 1229i64;
                                                      break;
                                                    case ST_InstancedPosition3dYUY2CxformAcMul:
                                                      result = 1230i64;
                                                      break;
                                                    case ST_YUY2CxformAcEAlpha:
                                                      result = 1231i64;
                                                      break;
                                                    case ST_YUY2CxformAcEAlphaMul:
                                                      result = 1232i64;
                                                      break;
                                                    case ST_BatchYUY2CxformAcEAlpha:
                                                      result = 1233i64;
                                                      break;
                                                    case ST_BatchYUY2CxformAcEAlphaMul:
                                                      result = 1234i64;
                                                      break;
                                                    case ST_InstancedYUY2CxformAcEAlpha:
                                                      result = 1235i64;
                                                      break;
                                                    case ST_InstancedYUY2CxformAcEAlphaMul:
                                                      result = 1236i64;
                                                      break;
                                                    case ST_Position3dYUY2CxformAcEAlpha:
                                                      result = 1237i64;
                                                      break;
                                                    case ST_Position3dYUY2CxformAcEAlphaMul:
                                                      result = 1238i64;
                                                      break;
                                                    case ST_BatchPosition3dYUY2CxformAcEAlpha:
                                                      result = 1239i64;
                                                      break;
                                                    case ST_BatchPosition3dYUY2CxformAcEAlphaMul:
                                                      result = 1240i64;
                                                      break;
                                                    case ST_InstancedPosition3dYUY2CxformAcEAlpha:
                                                      result = 1241i64;
                                                      break;
                                                    case ST_InstancedPosition3dYUY2CxformAcEAlphaMul:
                                                      result = 1242i64;
                                                      break;
                                                    default:
                                                      return 0i64;
                                                  }
                                                }
                                              }
                                              else if ( type == ST_YUY2CxformAc )
                                              {
                                                return 1219i64;
                                              }
                                              else
                                              {
                                                switch ( type )
                                                {
                                                  case ST_YUY2Mul:
                                                    result = 1160i64;
                                                    break;
                                                  case ST_BatchYUY2:
                                                    result = 1161i64;
                                                    break;
                                                  case ST_BatchYUY2Mul:
                                                    result = 1162i64;
                                                    break;
                                                  case ST_InstancedYUY2:
                                                    result = 1163i64;
                                                    break;
                                                  case ST_InstancedYUY2Mul:
                                                    result = 1164i64;
                                                    break;
                                                  case ST_Position3dYUY2:
                                                    result = 1165i64;
                                                    break;
                                                  case ST_Position3dYUY2Mul:
                                                    result = 1166i64;
                                                    break;
                                                  case ST_BatchPosition3dYUY2:
                                                    result = 1167i64;
                                                    break;
                                                  case ST_BatchPosition3dYUY2Mul:
                                                    result = 1168i64;
                                                    break;
                                                  case ST_InstancedPosition3dYUY2:
                                                    result = 1169i64;
                                                    break;
                                                  case ST_InstancedPosition3dYUY2Mul:
                                                    result = 1170i64;
                                                    break;
                                                  case ST_YUY2Cxform:
                                                    result = 1171i64;
                                                    break;
                                                  case ST_YUY2CxformMul:
                                                    result = 1172i64;
                                                    break;
                                                  case ST_BatchYUY2Cxform:
                                                    result = 1173i64;
                                                    break;
                                                  case ST_BatchYUY2CxformMul:
                                                    result = 1174i64;
                                                    break;
                                                  case ST_InstancedYUY2Cxform:
                                                    result = 1175i64;
                                                    break;
                                                  case ST_InstancedYUY2CxformMul:
                                                    result = 1176i64;
                                                    break;
                                                  case ST_Position3dYUY2Cxform:
                                                    result = 1177i64;
                                                    break;
                                                  case ST_Position3dYUY2CxformMul:
                                                    result = 1178i64;
                                                    break;
                                                  case ST_BatchPosition3dYUY2Cxform:
                                                    result = 1179i64;
                                                    break;
                                                  case ST_BatchPosition3dYUY2CxformMul:
                                                    result = 1180i64;
                                                    break;
                                                  case ST_InstancedPosition3dYUY2Cxform:
                                                    result = 1181i64;
                                                    break;
                                                  case ST_InstancedPosition3dYUY2CxformMul:
                                                    result = 1182i64;
                                                    break;
                                                  case ST_YUY2EAlpha:
                                                    result = 1183i64;
                                                    break;
                                                  case ST_YUY2EAlphaMul:
                                                    result = 1184i64;
                                                    break;
                                                  case ST_BatchYUY2EAlpha:
                                                    result = 1185i64;
                                                    break;
                                                  case ST_BatchYUY2EAlphaMul:
                                                    result = 1186i64;
                                                    break;
                                                  case ST_InstancedYUY2EAlpha:
                                                    result = 1187i64;
                                                    break;
                                                  case ST_InstancedYUY2EAlphaMul:
                                                    result = 1188i64;
                                                    break;
                                                  case ST_Position3dYUY2EAlpha:
                                                    result = 1189i64;
                                                    break;
                                                  case ST_Position3dYUY2EAlphaMul:
                                                    result = 1190i64;
                                                    break;
                                                  case ST_BatchPosition3dYUY2EAlpha:
                                                    result = 1191i64;
                                                    break;
                                                  case ST_BatchPosition3dYUY2EAlphaMul:
                                                    result = 1192i64;
                                                    break;
                                                  case ST_InstancedPosition3dYUY2EAlpha:
                                                    result = 1193i64;
                                                    break;
                                                  case ST_InstancedPosition3dYUY2EAlphaMul:
                                                    result = 1194i64;
                                                    break;
                                                  case ST_YUY2CxformEAlpha:
                                                    result = 1195i64;
                                                    break;
                                                  case ST_YUY2CxformEAlphaMul:
                                                    result = 1196i64;
                                                    break;
                                                  case ST_BatchYUY2CxformEAlpha:
                                                    result = 1197i64;
                                                    break;
                                                  case ST_BatchYUY2CxformEAlphaMul:
                                                    result = 1198i64;
                                                    break;
                                                  case ST_InstancedYUY2CxformEAlpha:
                                                    result = 1199i64;
                                                    break;
                                                  case ST_InstancedYUY2CxformEAlphaMul:
                                                    result = 1200i64;
                                                    break;
                                                  case ST_Position3dYUY2CxformEAlpha:
                                                    result = 1201i64;
                                                    break;
                                                  case ST_Position3dYUY2CxformEAlphaMul:
                                                    result = 1202i64;
                                                    break;
                                                  case ST_BatchPosition3dYUY2CxformEAlpha:
                                                    result = 1203i64;
                                                    break;
                                                  case ST_BatchPosition3dYUY2CxformEAlphaMul:
                                                    result = 1204i64;
                                                    break;
                                                  case ST_InstancedPosition3dYUY2CxformEAlpha:
                                                    result = 1205i64;
                                                    break;
                                                  case ST_InstancedPosition3dYUY2CxformEAlphaMul:
                                                    result = 1206i64;
                                                    break;
                                                  case ST_YUY2TexDensity:
                                                    result = 1207i64;
                                                    break;
                                                  case ST_BatchYUY2TexDensity:
                                                    result = 1208i64;
                                                    break;
                                                  case ST_InstancedYUY2TexDensity:
                                                    result = 1209i64;
                                                    break;
                                                  case ST_Position3dYUY2TexDensity:
                                                    result = 1210i64;
                                                    break;
                                                  case ST_BatchPosition3dYUY2TexDensity:
                                                    result = 1211i64;
                                                    break;
                                                  case ST_InstancedPosition3dYUY2TexDensity:
                                                    result = 1212i64;
                                                    break;
                                                  case ST_YUY2EAlphaTexDensity:
                                                    result = 1213i64;
                                                    break;
                                                  case ST_BatchYUY2EAlphaTexDensity:
                                                    result = 1214i64;
                                                    break;
                                                  case ST_InstancedYUY2EAlphaTexDensity:
                                                    result = 1215i64;
                                                    break;
                                                  case ST_Position3dYUY2EAlphaTexDensity:
                                                    result = 1216i64;
                                                    break;
                                                  case ST_BatchPosition3dYUY2EAlphaTexDensity:
                                                    result = 1217i64;
                                                    break;
                                                  case ST_InstancedPosition3dYUY2EAlphaTexDensity:
                                                    result = 1218i64;
                                                    break;
                                                  default:
                                                    return 0i64;
                                                }
                                              }
                                            }
                                            else if ( type == ST_YUY2 )
                                            {
                                              return 1159i64;
                                            }
                                            else
                                            {
                                              switch ( type )
                                              {
                                                case ST_YUVACxformAcMul:
                                                  result = 1124i64;
                                                  break;
                                                case ST_BatchYUVACxformAc:
                                                  result = 1125i64;
                                                  break;
                                                case ST_BatchYUVACxformAcMul:
                                                  result = 1126i64;
                                                  break;
                                                case ST_InstancedYUVACxformAc:
                                                  result = 1127i64;
                                                  break;
                                                case ST_InstancedYUVACxformAcMul:
                                                  result = 1128i64;
                                                  break;
                                                case ST_Position3dYUVACxformAc:
                                                  result = 1129i64;
                                                  break;
                                                case ST_Position3dYUVACxformAcMul:
                                                  result = 1130i64;
                                                  break;
                                                case ST_BatchPosition3dYUVACxformAc:
                                                  result = 1131i64;
                                                  break;
                                                case ST_BatchPosition3dYUVACxformAcMul:
                                                  result = 1132i64;
                                                  break;
                                                case ST_InstancedPosition3dYUVACxformAc:
                                                  result = 1133i64;
                                                  break;
                                                case ST_InstancedPosition3dYUVACxformAcMul:
                                                  result = 1134i64;
                                                  break;
                                                case ST_YUVACxformAcEAlpha:
                                                  result = 1135i64;
                                                  break;
                                                case ST_YUVACxformAcEAlphaMul:
                                                  result = 1136i64;
                                                  break;
                                                case ST_BatchYUVACxformAcEAlpha:
                                                  result = 1137i64;
                                                  break;
                                                case ST_BatchYUVACxformAcEAlphaMul:
                                                  result = 1138i64;
                                                  break;
                                                case ST_InstancedYUVACxformAcEAlpha:
                                                  result = 1139i64;
                                                  break;
                                                case ST_InstancedYUVACxformAcEAlphaMul:
                                                  result = 1140i64;
                                                  break;
                                                case ST_Position3dYUVACxformAcEAlpha:
                                                  result = 1141i64;
                                                  break;
                                                case ST_Position3dYUVACxformAcEAlphaMul:
                                                  result = 1142i64;
                                                  break;
                                                case ST_BatchPosition3dYUVACxformAcEAlpha:
                                                  result = 1143i64;
                                                  break;
                                                case ST_BatchPosition3dYUVACxformAcEAlphaMul:
                                                  result = 1144i64;
                                                  break;
                                                case ST_InstancedPosition3dYUVACxformAcEAlpha:
                                                  result = 1145i64;
                                                  break;
                                                case ST_InstancedPosition3dYUVACxformAcEAlphaMul:
                                                  result = 1146i64;
                                                  break;
                                                case ST_YUVACxformAcInv:
                                                  result = 1147i64;
                                                  break;
                                                case ST_BatchYUVACxformAcInv:
                                                  result = 1148i64;
                                                  break;
                                                case ST_InstancedYUVACxformAcInv:
                                                  result = 1149i64;
                                                  break;
                                                case ST_Position3dYUVACxformAcInv:
                                                  result = 1150i64;
                                                  break;
                                                case ST_BatchPosition3dYUVACxformAcInv:
                                                  result = 1151i64;
                                                  break;
                                                case ST_InstancedPosition3dYUVACxformAcInv:
                                                  result = 1152i64;
                                                  break;
                                                case ST_YUVACxformAcEAlphaInv:
                                                  result = 1153i64;
                                                  break;
                                                case ST_BatchYUVACxformAcEAlphaInv:
                                                  result = 1154i64;
                                                  break;
                                                case ST_InstancedYUVACxformAcEAlphaInv:
                                                  result = 1155i64;
                                                  break;
                                                case ST_Position3dYUVACxformAcEAlphaInv:
                                                  result = 1156i64;
                                                  break;
                                                case ST_BatchPosition3dYUVACxformAcEAlphaInv:
                                                  result = 1157i64;
                                                  break;
                                                case ST_InstancedPosition3dYUVACxformAcEAlphaInv:
                                                  result = 1158i64;
                                                  break;
                                                default:
                                                  return 0i64;
                                              }
                                            }
                                          }
                                          else if ( type == ST_YUVACxformAc )
                                          {
                                            return 1123i64;
                                          }
                                          else
                                          {
                                            switch ( type )
                                            {
                                              case ST_YUVAMul:
                                                result = 1040i64;
                                                break;
                                              case ST_BatchYUVA:
                                                result = 1041i64;
                                                break;
                                              case ST_BatchYUVAMul:
                                                result = 1042i64;
                                                break;
                                              case ST_InstancedYUVA:
                                                result = 1043i64;
                                                break;
                                              case ST_InstancedYUVAMul:
                                                result = 1044i64;
                                                break;
                                              case ST_Position3dYUVA:
                                                result = 1045i64;
                                                break;
                                              case ST_Position3dYUVAMul:
                                                result = 1046i64;
                                                break;
                                              case ST_BatchPosition3dYUVA:
                                                result = 1047i64;
                                                break;
                                              case ST_BatchPosition3dYUVAMul:
                                                result = 1048i64;
                                                break;
                                              case ST_InstancedPosition3dYUVA:
                                                result = 1049i64;
                                                break;
                                              case ST_InstancedPosition3dYUVAMul:
                                                result = 1050i64;
                                                break;
                                              case ST_YUVACxform:
                                                result = 1051i64;
                                                break;
                                              case ST_YUVACxformMul:
                                                result = 1052i64;
                                                break;
                                              case ST_BatchYUVACxform:
                                                result = 1053i64;
                                                break;
                                              case ST_BatchYUVACxformMul:
                                                result = 1054i64;
                                                break;
                                              case ST_InstancedYUVACxform:
                                                result = 1055i64;
                                                break;
                                              case ST_InstancedYUVACxformMul:
                                                result = 1056i64;
                                                break;
                                              case ST_Position3dYUVACxform:
                                                result = 1057i64;
                                                break;
                                              case ST_Position3dYUVACxformMul:
                                                result = 1058i64;
                                                break;
                                              case ST_BatchPosition3dYUVACxform:
                                                result = 1059i64;
                                                break;
                                              case ST_BatchPosition3dYUVACxformMul:
                                                result = 1060i64;
                                                break;
                                              case ST_InstancedPosition3dYUVACxform:
                                                result = 1061i64;
                                                break;
                                              case ST_InstancedPosition3dYUVACxformMul:
                                                result = 1062i64;
                                                break;
                                              case ST_YUVAEAlpha:
                                                result = 1063i64;
                                                break;
                                              case ST_YUVAEAlphaMul:
                                                result = 1064i64;
                                                break;
                                              case ST_BatchYUVAEAlpha:
                                                result = 1065i64;
                                                break;
                                              case ST_BatchYUVAEAlphaMul:
                                                result = 1066i64;
                                                break;
                                              case ST_InstancedYUVAEAlpha:
                                                result = 1067i64;
                                                break;
                                              case ST_InstancedYUVAEAlphaMul:
                                                result = 1068i64;
                                                break;
                                              case ST_Position3dYUVAEAlpha:
                                                result = 1069i64;
                                                break;
                                              case ST_Position3dYUVAEAlphaMul:
                                                result = 1070i64;
                                                break;
                                              case ST_BatchPosition3dYUVAEAlpha:
                                                result = 1071i64;
                                                break;
                                              case ST_BatchPosition3dYUVAEAlphaMul:
                                                result = 1072i64;
                                                break;
                                              case ST_InstancedPosition3dYUVAEAlpha:
                                                result = 1073i64;
                                                break;
                                              case ST_InstancedPosition3dYUVAEAlphaMul:
                                                result = 1074i64;
                                                break;
                                              case ST_YUVACxformEAlpha:
                                                result = 1075i64;
                                                break;
                                              case ST_YUVACxformEAlphaMul:
                                                result = 1076i64;
                                                break;
                                              case ST_BatchYUVACxformEAlpha:
                                                result = 1077i64;
                                                break;
                                              case ST_BatchYUVACxformEAlphaMul:
                                                result = 1078i64;
                                                break;
                                              case ST_InstancedYUVACxformEAlpha:
                                                result = 1079i64;
                                                break;
                                              case ST_InstancedYUVACxformEAlphaMul:
                                                result = 1080i64;
                                                break;
                                              case ST_Position3dYUVACxformEAlpha:
                                                result = 1081i64;
                                                break;
                                              case ST_Position3dYUVACxformEAlphaMul:
                                                result = 1082i64;
                                                break;
                                              case ST_BatchPosition3dYUVACxformEAlpha:
                                                result = 1083i64;
                                                break;
                                              case ST_BatchPosition3dYUVACxformEAlphaMul:
                                                result = 1084i64;
                                                break;
                                              case ST_InstancedPosition3dYUVACxformEAlpha:
                                                result = 1085i64;
                                                break;
                                              case ST_InstancedPosition3dYUVACxformEAlphaMul:
                                                result = 1086i64;
                                                break;
                                              case ST_YUVAInv:
                                                result = 1087i64;
                                                break;
                                              case ST_BatchYUVAInv:
                                                result = 1088i64;
                                                break;
                                              case ST_InstancedYUVAInv:
                                                result = 1089i64;
                                                break;
                                              case ST_Position3dYUVAInv:
                                                result = 1090i64;
                                                break;
                                              case ST_BatchPosition3dYUVAInv:
                                                result = 1091i64;
                                                break;
                                              case ST_InstancedPosition3dYUVAInv:
                                                result = 1092i64;
                                                break;
                                              case ST_YUVACxformInv:
                                                result = 1093i64;
                                                break;
                                              case ST_BatchYUVACxformInv:
                                                result = 1094i64;
                                                break;
                                              case ST_InstancedYUVACxformInv:
                                                result = 1095i64;
                                                break;
                                              case ST_Position3dYUVACxformInv:
                                                result = 1096i64;
                                                break;
                                              case ST_BatchPosition3dYUVACxformInv:
                                                result = 1097i64;
                                                break;
                                              case ST_InstancedPosition3dYUVACxformInv:
                                                result = 1098i64;
                                                break;
                                              case ST_YUVAEAlphaInv:
                                                result = 1099i64;
                                                break;
                                              case ST_BatchYUVAEAlphaInv:
                                                result = 1100i64;
                                                break;
                                              case ST_InstancedYUVAEAlphaInv:
                                                result = 1101i64;
                                                break;
                                              case ST_Position3dYUVAEAlphaInv:
                                                result = 1102i64;
                                                break;
                                              case ST_BatchPosition3dYUVAEAlphaInv:
                                                result = 1103i64;
                                                break;
                                              case ST_InstancedPosition3dYUVAEAlphaInv:
                                                result = 1104i64;
                                                break;
                                              case ST_YUVACxformEAlphaInv:
                                                result = 1105i64;
                                                break;
                                              case ST_BatchYUVACxformEAlphaInv:
                                                result = 1106i64;
                                                break;
                                              case ST_InstancedYUVACxformEAlphaInv:
                                                result = 1107i64;
                                                break;
                                              case ST_Position3dYUVACxformEAlphaInv:
                                                result = 1108i64;
                                                break;
                                              case ST_BatchPosition3dYUVACxformEAlphaInv:
                                                result = 1109i64;
                                                break;
                                              case ST_InstancedPosition3dYUVACxformEAlphaInv:
                                                result = 1110i64;
                                                break;
                                              case ST_YUVATexDensity:
                                                result = 1111i64;
                                                break;
                                              case ST_BatchYUVATexDensity:
                                                result = 1112i64;
                                                break;
                                              case ST_InstancedYUVATexDensity:
                                                result = 1113i64;
                                                break;
                                              case ST_Position3dYUVATexDensity:
                                                result = 1114i64;
                                                break;
                                              case ST_BatchPosition3dYUVATexDensity:
                                                result = 1115i64;
                                                break;
                                              case ST_InstancedPosition3dYUVATexDensity:
                                                result = 1116i64;
                                                break;
                                              case ST_YUVAEAlphaTexDensity:
                                                result = 1117i64;
                                                break;
                                              case ST_BatchYUVAEAlphaTexDensity:
                                                result = 1118i64;
                                                break;
                                              case ST_InstancedYUVAEAlphaTexDensity:
                                                result = 1119i64;
                                                break;
                                              case ST_Position3dYUVAEAlphaTexDensity:
                                                result = 1120i64;
                                                break;
                                              case ST_BatchPosition3dYUVAEAlphaTexDensity:
                                                result = 1121i64;
                                                break;
                                              case ST_InstancedPosition3dYUVAEAlphaTexDensity:
                                                result = 1122i64;
                                                break;
                                              default:
                                                return 0i64;
                                            }
                                          }
                                        }
                                        else if ( type == ST_YUVA )
                                        {
                                          return 1039i64;
                                        }
                                        else
                                        {
                                          switch ( type )
                                          {
                                            case ST_YUVCxformAcMul:
                                              result = 1016i64;
                                              break;
                                            case ST_BatchYUVCxformAc:
                                              result = 1017i64;
                                              break;
                                            case ST_BatchYUVCxformAcMul:
                                              result = 1018i64;
                                              break;
                                            case ST_InstancedYUVCxformAc:
                                              result = 1019i64;
                                              break;
                                            case ST_InstancedYUVCxformAcMul:
                                              result = 1020i64;
                                              break;
                                            case ST_Position3dYUVCxformAc:
                                              result = 1021i64;
                                              break;
                                            case ST_Position3dYUVCxformAcMul:
                                              result = 1022i64;
                                              break;
                                            case ST_BatchPosition3dYUVCxformAc:
                                              result = 1023i64;
                                              break;
                                            case ST_BatchPosition3dYUVCxformAcMul:
                                              result = 1024i64;
                                              break;
                                            case ST_InstancedPosition3dYUVCxformAc:
                                              result = 1025i64;
                                              break;
                                            case ST_InstancedPosition3dYUVCxformAcMul:
                                              result = 1026i64;
                                              break;
                                            case ST_YUVCxformAcEAlpha:
                                              result = 1027i64;
                                              break;
                                            case ST_YUVCxformAcEAlphaMul:
                                              result = 1028i64;
                                              break;
                                            case ST_BatchYUVCxformAcEAlpha:
                                              result = 1029i64;
                                              break;
                                            case ST_BatchYUVCxformAcEAlphaMul:
                                              result = 1030i64;
                                              break;
                                            case ST_InstancedYUVCxformAcEAlpha:
                                              result = 1031i64;
                                              break;
                                            case ST_InstancedYUVCxformAcEAlphaMul:
                                              result = 1032i64;
                                              break;
                                            case ST_Position3dYUVCxformAcEAlpha:
                                              result = 1033i64;
                                              break;
                                            case ST_Position3dYUVCxformAcEAlphaMul:
                                              result = 1034i64;
                                              break;
                                            case ST_BatchPosition3dYUVCxformAcEAlpha:
                                              result = 1035i64;
                                              break;
                                            case ST_BatchPosition3dYUVCxformAcEAlphaMul:
                                              result = 1036i64;
                                              break;
                                            case ST_InstancedPosition3dYUVCxformAcEAlpha:
                                              result = 1037i64;
                                              break;
                                            case ST_InstancedPosition3dYUVCxformAcEAlphaMul:
                                              result = 1038i64;
                                              break;
                                            default:
                                              return 0i64;
                                          }
                                        }
                                      }
                                      else if ( type == ST_YUVCxformAc )
                                      {
                                        return 1015i64;
                                      }
                                      else
                                      {
                                        switch ( type )
                                        {
                                          case ST_YUVMul:
                                            result = 956i64;
                                            break;
                                          case ST_BatchYUV:
                                            result = 957i64;
                                            break;
                                          case ST_BatchYUVMul:
                                            result = 958i64;
                                            break;
                                          case ST_InstancedYUV:
                                            result = 959i64;
                                            break;
                                          case ST_InstancedYUVMul:
                                            result = 960i64;
                                            break;
                                          case ST_Position3dYUV:
                                            result = 961i64;
                                            break;
                                          case ST_Position3dYUVMul:
                                            result = 962i64;
                                            break;
                                          case ST_BatchPosition3dYUV:
                                            result = 963i64;
                                            break;
                                          case ST_BatchPosition3dYUVMul:
                                            result = 964i64;
                                            break;
                                          case ST_InstancedPosition3dYUV:
                                            result = 965i64;
                                            break;
                                          case ST_InstancedPosition3dYUVMul:
                                            result = 966i64;
                                            break;
                                          case ST_YUVCxform:
                                            result = 967i64;
                                            break;
                                          case ST_YUVCxformMul:
                                            result = 968i64;
                                            break;
                                          case ST_BatchYUVCxform:
                                            result = 969i64;
                                            break;
                                          case ST_BatchYUVCxformMul:
                                            result = 970i64;
                                            break;
                                          case ST_InstancedYUVCxform:
                                            result = 971i64;
                                            break;
                                          case ST_InstancedYUVCxformMul:
                                            result = 972i64;
                                            break;
                                          case ST_Position3dYUVCxform:
                                            result = 973i64;
                                            break;
                                          case ST_Position3dYUVCxformMul:
                                            result = 974i64;
                                            break;
                                          case ST_BatchPosition3dYUVCxform:
                                            result = 975i64;
                                            break;
                                          case ST_BatchPosition3dYUVCxformMul:
                                            result = 976i64;
                                            break;
                                          case ST_InstancedPosition3dYUVCxform:
                                            result = 977i64;
                                            break;
                                          case ST_InstancedPosition3dYUVCxformMul:
                                            result = 978i64;
                                            break;
                                          case ST_YUVEAlpha:
                                            result = 979i64;
                                            break;
                                          case ST_YUVEAlphaMul:
                                            result = 980i64;
                                            break;
                                          case ST_BatchYUVEAlpha:
                                            result = 981i64;
                                            break;
                                          case ST_BatchYUVEAlphaMul:
                                            result = 982i64;
                                            break;
                                          case ST_InstancedYUVEAlpha:
                                            result = 983i64;
                                            break;
                                          case ST_InstancedYUVEAlphaMul:
                                            result = 984i64;
                                            break;
                                          case ST_Position3dYUVEAlpha:
                                            result = 985i64;
                                            break;
                                          case ST_Position3dYUVEAlphaMul:
                                            result = 986i64;
                                            break;
                                          case ST_BatchPosition3dYUVEAlpha:
                                            result = 987i64;
                                            break;
                                          case ST_BatchPosition3dYUVEAlphaMul:
                                            result = 988i64;
                                            break;
                                          case ST_InstancedPosition3dYUVEAlpha:
                                            result = 989i64;
                                            break;
                                          case ST_InstancedPosition3dYUVEAlphaMul:
                                            result = 990i64;
                                            break;
                                          case ST_YUVCxformEAlpha:
                                            result = 991i64;
                                            break;
                                          case ST_YUVCxformEAlphaMul:
                                            result = 992i64;
                                            break;
                                          case ST_BatchYUVCxformEAlpha:
                                            result = 993i64;
                                            break;
                                          case ST_BatchYUVCxformEAlphaMul:
                                            result = 994i64;
                                            break;
                                          case ST_InstancedYUVCxformEAlpha:
                                            result = 995i64;
                                            break;
                                          case ST_InstancedYUVCxformEAlphaMul:
                                            result = 996i64;
                                            break;
                                          case ST_Position3dYUVCxformEAlpha:
                                            result = 997i64;
                                            break;
                                          case ST_Position3dYUVCxformEAlphaMul:
                                            result = 998i64;
                                            break;
                                          case ST_BatchPosition3dYUVCxformEAlpha:
                                            result = 999i64;
                                            break;
                                          case ST_BatchPosition3dYUVCxformEAlphaMul:
                                            result = 1000i64;
                                            break;
                                          case ST_InstancedPosition3dYUVCxformEAlpha:
                                            result = 1001i64;
                                            break;
                                          case ST_InstancedPosition3dYUVCxformEAlphaMul:
                                            result = 1002i64;
                                            break;
                                          case ST_YUVTexDensity:
                                            result = 1003i64;
                                            break;
                                          case ST_BatchYUVTexDensity:
                                            result = 1004i64;
                                            break;
                                          case ST_InstancedYUVTexDensity:
                                            result = 1005i64;
                                            break;
                                          case ST_Position3dYUVTexDensity:
                                            result = 1006i64;
                                            break;
                                          case ST_BatchPosition3dYUVTexDensity:
                                            result = 1007i64;
                                            break;
                                          case ST_InstancedPosition3dYUVTexDensity:
                                            result = 1008i64;
                                            break;
                                          case ST_YUVEAlphaTexDensity:
                                            result = 1009i64;
                                            break;
                                          case ST_BatchYUVEAlphaTexDensity:
                                            result = 1010i64;
                                            break;
                                          case ST_InstancedYUVEAlphaTexDensity:
                                            result = 1011i64;
                                            break;
                                          case ST_Position3dYUVEAlphaTexDensity:
                                            result = 1012i64;
                                            break;
                                          case ST_BatchPosition3dYUVEAlphaTexDensity:
                                            result = 1013i64;
                                            break;
                                          case ST_InstancedPosition3dYUVEAlphaTexDensity:
                                            result = 1014i64;
                                            break;
                                          default:
                                            return 0i64;
                                        }
                                      }
                                    }
                                    else if ( type == ST_start_base_video )
                                    {
                                      return 955i64;
                                    }
                                    else
                                    {
                                      switch ( type )
                                      {
                                        case ST_ATexUVMul:
                                          result = 914i64;
                                          break;
                                        case ST_BatchATexUV:
                                          result = 915i64;
                                          break;
                                        case ST_BatchATexUVMul:
                                          result = 916i64;
                                          break;
                                        case ST_InstancedATexUV:
                                          result = 917i64;
                                          break;
                                        case ST_InstancedATexUVMul:
                                          result = 918i64;
                                          break;
                                        case ST_Position3dATexUV:
                                          result = 919i64;
                                          break;
                                        case ST_Position3dATexUVMul:
                                          result = 920i64;
                                          break;
                                        case ST_BatchPosition3dATexUV:
                                          result = 921i64;
                                          break;
                                        case ST_BatchPosition3dATexUVMul:
                                          result = 922i64;
                                          break;
                                        case ST_InstancedPosition3dATexUV:
                                          result = 923i64;
                                          break;
                                        case ST_InstancedPosition3dATexUVMul:
                                          result = 924i64;
                                          break;
                                        case ST_ATexUVCxform:
                                          result = 925i64;
                                          break;
                                        case ST_ATexUVCxformMul:
                                          result = 926i64;
                                          break;
                                        case ST_BatchATexUVCxform:
                                          result = 927i64;
                                          break;
                                        case ST_BatchATexUVCxformMul:
                                          result = 928i64;
                                          break;
                                        case ST_InstancedATexUVCxform:
                                          result = 929i64;
                                          break;
                                        case ST_InstancedATexUVCxformMul:
                                          result = 930i64;
                                          break;
                                        case ST_Position3dATexUVCxform:
                                          result = 931i64;
                                          break;
                                        case ST_Position3dATexUVCxformMul:
                                          result = 932i64;
                                          break;
                                        case ST_BatchPosition3dATexUVCxform:
                                          result = 933i64;
                                          break;
                                        case ST_BatchPosition3dATexUVCxformMul:
                                          result = 934i64;
                                          break;
                                        case ST_InstancedPosition3dATexUVCxform:
                                          result = 935i64;
                                          break;
                                        case ST_InstancedPosition3dATexUVCxformMul:
                                          result = 936i64;
                                          break;
                                        case ST_ATexUVInv:
                                          result = 937i64;
                                          break;
                                        case ST_BatchATexUVInv:
                                          result = 938i64;
                                          break;
                                        case ST_InstancedATexUVInv:
                                          result = 939i64;
                                          break;
                                        case ST_Position3dATexUVInv:
                                          result = 940i64;
                                          break;
                                        case ST_BatchPosition3dATexUVInv:
                                          result = 941i64;
                                          break;
                                        case ST_InstancedPosition3dATexUVInv:
                                          result = 942i64;
                                          break;
                                        case ST_ATexUVCxformInv:
                                          result = 943i64;
                                          break;
                                        case ST_BatchATexUVCxformInv:
                                          result = 944i64;
                                          break;
                                        case ST_InstancedATexUVCxformInv:
                                          result = 945i64;
                                          break;
                                        case ST_Position3dATexUVCxformInv:
                                          result = 946i64;
                                          break;
                                        case ST_BatchPosition3dATexUVCxformInv:
                                          result = 947i64;
                                          break;
                                        case ST_InstancedPosition3dATexUVCxformInv:
                                          result = 948i64;
                                          break;
                                        case ST_ATexUVTexDensity:
                                          result = 949i64;
                                          break;
                                        case ST_BatchATexUVTexDensity:
                                          result = 950i64;
                                          break;
                                        case ST_InstancedATexUVTexDensity:
                                          result = 951i64;
                                          break;
                                        case ST_Position3dATexUVTexDensity:
                                          result = 952i64;
                                          break;
                                        case ST_BatchPosition3dATexUVTexDensity:
                                          result = 953i64;
                                          break;
                                        case ST_InstancedPosition3dATexUVTexDensity:
                                          result = 954i64;
                                          break;
                                        default:
                                          return 0i64;
                                      }
                                    }
                                  }
                                  else if ( type == ST_ATexUV )
                                  {
                                    return 913i64;
                                  }
                                  else
                                  {
                                    switch ( type )
                                    {
                                      case ST_TexUVMul:
                                        result = 872i64;
                                        break;
                                      case ST_BatchTexUV:
                                        result = 873i64;
                                        break;
                                      case ST_BatchTexUVMul:
                                        result = 874i64;
                                        break;
                                      case ST_InstancedTexUV:
                                        result = 875i64;
                                        break;
                                      case ST_InstancedTexUVMul:
                                        result = 876i64;
                                        break;
                                      case ST_Position3dTexUV:
                                        result = 877i64;
                                        break;
                                      case ST_Position3dTexUVMul:
                                        result = 878i64;
                                        break;
                                      case ST_BatchPosition3dTexUV:
                                        result = 879i64;
                                        break;
                                      case ST_BatchPosition3dTexUVMul:
                                        result = 880i64;
                                        break;
                                      case ST_InstancedPosition3dTexUV:
                                        result = 881i64;
                                        break;
                                      case ST_InstancedPosition3dTexUVMul:
                                        result = 882i64;
                                        break;
                                      case ST_TexUVCxform:
                                        result = 883i64;
                                        break;
                                      case ST_TexUVCxformMul:
                                        result = 884i64;
                                        break;
                                      case ST_BatchTexUVCxform:
                                        result = 885i64;
                                        break;
                                      case ST_BatchTexUVCxformMul:
                                        result = 886i64;
                                        break;
                                      case ST_InstancedTexUVCxform:
                                        result = 887i64;
                                        break;
                                      case ST_InstancedTexUVCxformMul:
                                        result = 888i64;
                                        break;
                                      case ST_Position3dTexUVCxform:
                                        result = 889i64;
                                        break;
                                      case ST_Position3dTexUVCxformMul:
                                        result = 890i64;
                                        break;
                                      case ST_BatchPosition3dTexUVCxform:
                                        result = 891i64;
                                        break;
                                      case ST_BatchPosition3dTexUVCxformMul:
                                        result = 892i64;
                                        break;
                                      case ST_InstancedPosition3dTexUVCxform:
                                        result = 893i64;
                                        break;
                                      case ST_InstancedPosition3dTexUVCxformMul:
                                        result = 894i64;
                                        break;
                                      case ST_TexUVInv:
                                        result = 895i64;
                                        break;
                                      case ST_BatchTexUVInv:
                                        result = 896i64;
                                        break;
                                      case ST_InstancedTexUVInv:
                                        result = 897i64;
                                        break;
                                      case ST_Position3dTexUVInv:
                                        result = 898i64;
                                        break;
                                      case ST_BatchPosition3dTexUVInv:
                                        result = 899i64;
                                        break;
                                      case ST_InstancedPosition3dTexUVInv:
                                        result = 900i64;
                                        break;
                                      case ST_TexUVCxformInv:
                                        result = 901i64;
                                        break;
                                      case ST_BatchTexUVCxformInv:
                                        result = 902i64;
                                        break;
                                      case ST_InstancedTexUVCxformInv:
                                        result = 903i64;
                                        break;
                                      case ST_Position3dTexUVCxformInv:
                                        result = 904i64;
                                        break;
                                      case ST_BatchPosition3dTexUVCxformInv:
                                        result = 905i64;
                                        break;
                                      case ST_InstancedPosition3dTexUVCxformInv:
                                        result = 906i64;
                                        break;
                                      case ST_TexUVTexDensity:
                                        result = 907i64;
                                        break;
                                      case ST_BatchTexUVTexDensity:
                                        result = 908i64;
                                        break;
                                      case ST_InstancedTexUVTexDensity:
                                        result = 909i64;
                                        break;
                                      case ST_Position3dTexUVTexDensity:
                                        result = 910i64;
                                        break;
                                      case ST_BatchPosition3dTexUVTexDensity:
                                        result = 911i64;
                                        break;
                                      case ST_InstancedPosition3dTexUVTexDensity:
                                        result = 912i64;
                                        break;
                                      default:
                                        return 0i64;
                                    }
                                  }
                                }
                                else if ( type == ST_TexUV )
                                {
                                  return 871i64;
                                }
                                else
                                {
                                  switch ( type )
                                  {
                                    case ST_TextMul:
                                      result = 848i64;
                                      break;
                                    case ST_BatchText:
                                      result = 849i64;
                                      break;
                                    case ST_BatchTextMul:
                                      result = 850i64;
                                      break;
                                    case ST_InstancedText:
                                      result = 851i64;
                                      break;
                                    case ST_InstancedTextMul:
                                      result = 852i64;
                                      break;
                                    case ST_Position3dText:
                                      result = 853i64;
                                      break;
                                    case ST_Position3dTextMul:
                                      result = 854i64;
                                      break;
                                    case ST_BatchPosition3dText:
                                      result = 855i64;
                                      break;
                                    case ST_BatchPosition3dTextMul:
                                      result = 856i64;
                                      break;
                                    case ST_InstancedPosition3dText:
                                      result = 857i64;
                                      break;
                                    case ST_InstancedPosition3dTextMul:
                                      result = 858i64;
                                      break;
                                    case ST_TextInv:
                                      result = 859i64;
                                      break;
                                    case ST_BatchTextInv:
                                      result = 860i64;
                                      break;
                                    case ST_InstancedTextInv:
                                      result = 861i64;
                                      break;
                                    case ST_Position3dTextInv:
                                      result = 862i64;
                                      break;
                                    case ST_BatchPosition3dTextInv:
                                      result = 863i64;
                                      break;
                                    case ST_InstancedPosition3dTextInv:
                                      result = 864i64;
                                      break;
                                    case ST_TextTexDensity:
                                      result = 865i64;
                                      break;
                                    case ST_BatchTextTexDensity:
                                      result = 866i64;
                                      break;
                                    case ST_InstancedTextTexDensity:
                                      result = 867i64;
                                      break;
                                    case ST_Position3dTextTexDensity:
                                      result = 868i64;
                                      break;
                                    case ST_BatchPosition3dTextTexDensity:
                                      result = 869i64;
                                      break;
                                    case ST_InstancedPosition3dTextTexDensity:
                                      result = 870i64;
                                      break;
                                    default:
                                      return 0i64;
                                  }
                                }
                              }
                              else if ( type == ST_Text )
                              {
                                return 847i64;
                              }
                              else
                              {
                                switch ( type )
                                {
                                  case ST_SolidMul:
                                    result = 830i64;
                                    break;
                                  case ST_BatchSolid:
                                    result = 831i64;
                                    break;
                                  case ST_BatchSolidMul:
                                    result = 832i64;
                                    break;
                                  case ST_InstancedSolid:
                                    result = 833i64;
                                    break;
                                  case ST_InstancedSolidMul:
                                    result = 834i64;
                                    break;
                                  case ST_Position3dSolid:
                                    result = 835i64;
                                    break;
                                  case ST_Position3dSolidMul:
                                    result = 836i64;
                                    break;
                                  case ST_BatchPosition3dSolid:
                                    result = 837i64;
                                    break;
                                  case ST_BatchPosition3dSolidMul:
                                    result = 838i64;
                                    break;
                                  case ST_InstancedPosition3dSolid:
                                    result = 839i64;
                                    break;
                                  case ST_InstancedPosition3dSolidMul:
                                    result = 840i64;
                                    break;
                                  case ST_SolidInv:
                                    result = 841i64;
                                    break;
                                  case ST_BatchSolidInv:
                                    result = 842i64;
                                    break;
                                  case ST_InstancedSolidInv:
                                    result = 843i64;
                                    break;
                                  case ST_Position3dSolidInv:
                                    result = 844i64;
                                    break;
                                  case ST_BatchPosition3dSolidInv:
                                    result = 845i64;
                                    break;
                                  case ST_InstancedPosition3dSolidInv:
                                    result = 846i64;
                                    break;
                                  default:
                                    return 0i64;
                                }
                              }
                            }
                            else if ( type == ST_start_base_text )
                            {
                              return 829i64;
                            }
                            else
                            {
                              switch ( type )
                              {
                                case ST_ATexTGVertexCxformAcMul:
                                  result = 794i64;
                                  break;
                                case ST_BatchATexTGVertexCxformAc:
                                  result = 795i64;
                                  break;
                                case ST_BatchATexTGVertexCxformAcMul:
                                  result = 796i64;
                                  break;
                                case ST_InstancedATexTGVertexCxformAc:
                                  result = 797i64;
                                  break;
                                case ST_InstancedATexTGVertexCxformAcMul:
                                  result = 798i64;
                                  break;
                                case ST_Position3dATexTGVertexCxformAc:
                                  result = 799i64;
                                  break;
                                case ST_Position3dATexTGVertexCxformAcMul:
                                  result = 800i64;
                                  break;
                                case ST_BatchPosition3dATexTGVertexCxformAc:
                                  result = 801i64;
                                  break;
                                case ST_BatchPosition3dATexTGVertexCxformAcMul:
                                  result = 802i64;
                                  break;
                                case ST_InstancedPosition3dATexTGVertexCxformAc:
                                  result = 803i64;
                                  break;
                                case ST_InstancedPosition3dATexTGVertexCxformAcMul:
                                  result = 804i64;
                                  break;
                                case ST_ATexTGVertexCxformAcEAlpha:
                                  result = 805i64;
                                  break;
                                case ST_ATexTGVertexCxformAcEAlphaMul:
                                  result = 806i64;
                                  break;
                                case ST_BatchATexTGVertexCxformAcEAlpha:
                                  result = 807i64;
                                  break;
                                case ST_BatchATexTGVertexCxformAcEAlphaMul:
                                  result = 808i64;
                                  break;
                                case ST_InstancedATexTGVertexCxformAcEAlpha:
                                  result = 809i64;
                                  break;
                                case ST_InstancedATexTGVertexCxformAcEAlphaMul:
                                  result = 810i64;
                                  break;
                                case ST_Position3dATexTGVertexCxformAcEAlpha:
                                  result = 811i64;
                                  break;
                                case ST_Position3dATexTGVertexCxformAcEAlphaMul:
                                  result = 812i64;
                                  break;
                                case ST_BatchPosition3dATexTGVertexCxformAcEAlpha:
                                  result = 813i64;
                                  break;
                                case ST_BatchPosition3dATexTGVertexCxformAcEAlphaMul:
                                  result = 814i64;
                                  break;
                                case ST_InstancedPosition3dATexTGVertexCxformAcEAlpha:
                                  result = 815i64;
                                  break;
                                case ST_InstancedPosition3dATexTGVertexCxformAcEAlphaMul:
                                  result = 816i64;
                                  break;
                                case ST_ATexTGVertexCxformAcInv:
                                  result = 817i64;
                                  break;
                                case ST_BatchATexTGVertexCxformAcInv:
                                  result = 818i64;
                                  break;
                                case ST_InstancedATexTGVertexCxformAcInv:
                                  result = 819i64;
                                  break;
                                case ST_Position3dATexTGVertexCxformAcInv:
                                  result = 820i64;
                                  break;
                                case ST_BatchPosition3dATexTGVertexCxformAcInv:
                                  result = 821i64;
                                  break;
                                case ST_InstancedPosition3dATexTGVertexCxformAcInv:
                                  result = 822i64;
                                  break;
                                case ST_ATexTGVertexCxformAcEAlphaInv:
                                  result = 823i64;
                                  break;
                                case ST_BatchATexTGVertexCxformAcEAlphaInv:
                                  result = 824i64;
                                  break;
                                case ST_InstancedATexTGVertexCxformAcEAlphaInv:
                                  result = 825i64;
                                  break;
                                case ST_Position3dATexTGVertexCxformAcEAlphaInv:
                                  result = 826i64;
                                  break;
                                case ST_BatchPosition3dATexTGVertexCxformAcEAlphaInv:
                                  result = 827i64;
                                  break;
                                case ST_InstancedPosition3dATexTGVertexCxformAcEAlphaInv:
                                  result = 828i64;
                                  break;
                                default:
                                  return 0i64;
                              }
                            }
                          }
                          else if ( type == ST_ATexTGVertexCxformAc )
                          {
                            return 793i64;
                          }
                          else
                          {
                            switch ( type )
                            {
                              case ST_ATexTGVertexMul:
                                result = 710i64;
                                break;
                              case ST_BatchATexTGVertex:
                                result = 711i64;
                                break;
                              case ST_BatchATexTGVertexMul:
                                result = 712i64;
                                break;
                              case ST_InstancedATexTGVertex:
                                result = 713i64;
                                break;
                              case ST_InstancedATexTGVertexMul:
                                result = 714i64;
                                break;
                              case ST_Position3dATexTGVertex:
                                result = 715i64;
                                break;
                              case ST_Position3dATexTGVertexMul:
                                result = 716i64;
                                break;
                              case ST_BatchPosition3dATexTGVertex:
                                result = 717i64;
                                break;
                              case ST_BatchPosition3dATexTGVertexMul:
                                result = 718i64;
                                break;
                              case ST_InstancedPosition3dATexTGVertex:
                                result = 719i64;
                                break;
                              case ST_InstancedPosition3dATexTGVertexMul:
                                result = 720i64;
                                break;
                              case ST_ATexTGVertexCxform:
                                result = 721i64;
                                break;
                              case ST_ATexTGVertexCxformMul:
                                result = 722i64;
                                break;
                              case ST_BatchATexTGVertexCxform:
                                result = 723i64;
                                break;
                              case ST_BatchATexTGVertexCxformMul:
                                result = 724i64;
                                break;
                              case ST_InstancedATexTGVertexCxform:
                                result = 725i64;
                                break;
                              case ST_InstancedATexTGVertexCxformMul:
                                result = 726i64;
                                break;
                              case ST_Position3dATexTGVertexCxform:
                                result = 727i64;
                                break;
                              case ST_Position3dATexTGVertexCxformMul:
                                result = 728i64;
                                break;
                              case ST_BatchPosition3dATexTGVertexCxform:
                                result = 729i64;
                                break;
                              case ST_BatchPosition3dATexTGVertexCxformMul:
                                result = 730i64;
                                break;
                              case ST_InstancedPosition3dATexTGVertexCxform:
                                result = 731i64;
                                break;
                              case ST_InstancedPosition3dATexTGVertexCxformMul:
                                result = 732i64;
                                break;
                              case ST_ATexTGVertexEAlpha:
                                result = 733i64;
                                break;
                              case ST_ATexTGVertexEAlphaMul:
                                result = 734i64;
                                break;
                              case ST_BatchATexTGVertexEAlpha:
                                result = 735i64;
                                break;
                              case ST_BatchATexTGVertexEAlphaMul:
                                result = 736i64;
                                break;
                              case ST_InstancedATexTGVertexEAlpha:
                                result = 737i64;
                                break;
                              case ST_InstancedATexTGVertexEAlphaMul:
                                result = 738i64;
                                break;
                              case ST_Position3dATexTGVertexEAlpha:
                                result = 739i64;
                                break;
                              case ST_Position3dATexTGVertexEAlphaMul:
                                result = 740i64;
                                break;
                              case ST_BatchPosition3dATexTGVertexEAlpha:
                                result = 741i64;
                                break;
                              case ST_BatchPosition3dATexTGVertexEAlphaMul:
                                result = 742i64;
                                break;
                              case ST_InstancedPosition3dATexTGVertexEAlpha:
                                result = 743i64;
                                break;
                              case ST_InstancedPosition3dATexTGVertexEAlphaMul:
                                result = 744i64;
                                break;
                              case ST_ATexTGVertexCxformEAlpha:
                                result = 745i64;
                                break;
                              case ST_ATexTGVertexCxformEAlphaMul:
                                result = 746i64;
                                break;
                              case ST_BatchATexTGVertexCxformEAlpha:
                                result = 747i64;
                                break;
                              case ST_BatchATexTGVertexCxformEAlphaMul:
                                result = 748i64;
                                break;
                              case ST_InstancedATexTGVertexCxformEAlpha:
                                result = 749i64;
                                break;
                              case ST_InstancedATexTGVertexCxformEAlphaMul:
                                result = 750i64;
                                break;
                              case ST_Position3dATexTGVertexCxformEAlpha:
                                result = 751i64;
                                break;
                              case ST_Position3dATexTGVertexCxformEAlphaMul:
                                result = 752i64;
                                break;
                              case ST_BatchPosition3dATexTGVertexCxformEAlpha:
                                result = 753i64;
                                break;
                              case ST_BatchPosition3dATexTGVertexCxformEAlphaMul:
                                result = 754i64;
                                break;
                              case ST_InstancedPosition3dATexTGVertexCxformEAlpha:
                                result = 755i64;
                                break;
                              case ST_InstancedPosition3dATexTGVertexCxformEAlphaMul:
                                result = 756i64;
                                break;
                              case ST_ATexTGVertexInv:
                                result = 757i64;
                                break;
                              case ST_BatchATexTGVertexInv:
                                result = 758i64;
                                break;
                              case ST_InstancedATexTGVertexInv:
                                result = 759i64;
                                break;
                              case ST_Position3dATexTGVertexInv:
                                result = 760i64;
                                break;
                              case ST_BatchPosition3dATexTGVertexInv:
                                result = 761i64;
                                break;
                              case ST_InstancedPosition3dATexTGVertexInv:
                                result = 762i64;
                                break;
                              case ST_ATexTGVertexCxformInv:
                                result = 763i64;
                                break;
                              case ST_BatchATexTGVertexCxformInv:
                                result = 764i64;
                                break;
                              case ST_InstancedATexTGVertexCxformInv:
                                result = 765i64;
                                break;
                              case ST_Position3dATexTGVertexCxformInv:
                                result = 766i64;
                                break;
                              case ST_BatchPosition3dATexTGVertexCxformInv:
                                result = 767i64;
                                break;
                              case ST_InstancedPosition3dATexTGVertexCxformInv:
                                result = 768i64;
                                break;
                              case ST_ATexTGVertexEAlphaInv:
                                result = 769i64;
                                break;
                              case ST_BatchATexTGVertexEAlphaInv:
                                result = 770i64;
                                break;
                              case ST_InstancedATexTGVertexEAlphaInv:
                                result = 771i64;
                                break;
                              case ST_Position3dATexTGVertexEAlphaInv:
                                result = 772i64;
                                break;
                              case ST_BatchPosition3dATexTGVertexEAlphaInv:
                                result = 773i64;
                                break;
                              case ST_InstancedPosition3dATexTGVertexEAlphaInv:
                                result = 774i64;
                                break;
                              case ST_ATexTGVertexCxformEAlphaInv:
                                result = 775i64;
                                break;
                              case ST_BatchATexTGVertexCxformEAlphaInv:
                                result = 776i64;
                                break;
                              case ST_InstancedATexTGVertexCxformEAlphaInv:
                                result = 777i64;
                                break;
                              case ST_Position3dATexTGVertexCxformEAlphaInv:
                                result = 778i64;
                                break;
                              case ST_BatchPosition3dATexTGVertexCxformEAlphaInv:
                                result = 779i64;
                                break;
                              case ST_InstancedPosition3dATexTGVertexCxformEAlphaInv:
                                result = 780i64;
                                break;
                              case ST_ATexTGVertexTexDensity:
                                result = 781i64;
                                break;
                              case ST_BatchATexTGVertexTexDensity:
                                result = 782i64;
                                break;
                              case ST_InstancedATexTGVertexTexDensity:
                                result = 783i64;
                                break;
                              case ST_Position3dATexTGVertexTexDensity:
                                result = 784i64;
                                break;
                              case ST_BatchPosition3dATexTGVertexTexDensity:
                                result = 785i64;
                                break;
                              case ST_InstancedPosition3dATexTGVertexTexDensity:
                                result = 786i64;
                                break;
                              case ST_ATexTGVertexEAlphaTexDensity:
                                result = 787i64;
                                break;
                              case ST_BatchATexTGVertexEAlphaTexDensity:
                                result = 788i64;
                                break;
                              case ST_InstancedATexTGVertexEAlphaTexDensity:
                                result = 789i64;
                                break;
                              case ST_Position3dATexTGVertexEAlphaTexDensity:
                                result = 790i64;
                                break;
                              case ST_BatchPosition3dATexTGVertexEAlphaTexDensity:
                                result = 791i64;
                                break;
                              case ST_InstancedPosition3dATexTGVertexEAlphaTexDensity:
                                result = 792i64;
                                break;
                              default:
                                return 0i64;
                            }
                          }
                        }
                        else if ( type == ST_ATexTGVertex )
                        {
                          return 709i64;
                        }
                        else
                        {
                          switch ( type )
                          {
                            case ST_TexTGVertexCxformAcMul:
                              result = 674i64;
                              break;
                            case ST_BatchTexTGVertexCxformAc:
                              result = 675i64;
                              break;
                            case ST_BatchTexTGVertexCxformAcMul:
                              result = 676i64;
                              break;
                            case ST_InstancedTexTGVertexCxformAc:
                              result = 677i64;
                              break;
                            case ST_InstancedTexTGVertexCxformAcMul:
                              result = 678i64;
                              break;
                            case ST_Position3dTexTGVertexCxformAc:
                              result = 679i64;
                              break;
                            case ST_Position3dTexTGVertexCxformAcMul:
                              result = 680i64;
                              break;
                            case ST_BatchPosition3dTexTGVertexCxformAc:
                              result = 681i64;
                              break;
                            case ST_BatchPosition3dTexTGVertexCxformAcMul:
                              result = 682i64;
                              break;
                            case ST_InstancedPosition3dTexTGVertexCxformAc:
                              result = 683i64;
                              break;
                            case ST_InstancedPosition3dTexTGVertexCxformAcMul:
                              result = 684i64;
                              break;
                            case ST_TexTGVertexCxformAcEAlpha:
                              result = 685i64;
                              break;
                            case ST_TexTGVertexCxformAcEAlphaMul:
                              result = 686i64;
                              break;
                            case ST_BatchTexTGVertexCxformAcEAlpha:
                              result = 687i64;
                              break;
                            case ST_BatchTexTGVertexCxformAcEAlphaMul:
                              result = 688i64;
                              break;
                            case ST_InstancedTexTGVertexCxformAcEAlpha:
                              result = 689i64;
                              break;
                            case ST_InstancedTexTGVertexCxformAcEAlphaMul:
                              result = 690i64;
                              break;
                            case ST_Position3dTexTGVertexCxformAcEAlpha:
                              result = 691i64;
                              break;
                            case ST_Position3dTexTGVertexCxformAcEAlphaMul:
                              result = 692i64;
                              break;
                            case ST_BatchPosition3dTexTGVertexCxformAcEAlpha:
                              result = 693i64;
                              break;
                            case ST_BatchPosition3dTexTGVertexCxformAcEAlphaMul:
                              result = 694i64;
                              break;
                            case ST_InstancedPosition3dTexTGVertexCxformAcEAlpha:
                              result = 695i64;
                              break;
                            case ST_InstancedPosition3dTexTGVertexCxformAcEAlphaMul:
                              result = 696i64;
                              break;
                            case ST_TexTGVertexCxformAcInv:
                              result = 697i64;
                              break;
                            case ST_BatchTexTGVertexCxformAcInv:
                              result = 698i64;
                              break;
                            case ST_InstancedTexTGVertexCxformAcInv:
                              result = 699i64;
                              break;
                            case ST_Position3dTexTGVertexCxformAcInv:
                              result = 700i64;
                              break;
                            case ST_BatchPosition3dTexTGVertexCxformAcInv:
                              result = 701i64;
                              break;
                            case ST_InstancedPosition3dTexTGVertexCxformAcInv:
                              result = 702i64;
                              break;
                            case ST_TexTGVertexCxformAcEAlphaInv:
                              result = 703i64;
                              break;
                            case ST_BatchTexTGVertexCxformAcEAlphaInv:
                              result = 704i64;
                              break;
                            case ST_InstancedTexTGVertexCxformAcEAlphaInv:
                              result = 705i64;
                              break;
                            case ST_Position3dTexTGVertexCxformAcEAlphaInv:
                              result = 706i64;
                              break;
                            case ST_BatchPosition3dTexTGVertexCxformAcEAlphaInv:
                              result = 707i64;
                              break;
                            case ST_InstancedPosition3dTexTGVertexCxformAcEAlphaInv:
                              result = 708i64;
                              break;
                            default:
                              return 0i64;
                          }
                        }
                      }
                      else if ( type == ST_TexTGVertexCxformAc )
                      {
                        return 673i64;
                      }
                      else
                      {
                        switch ( type )
                        {
                          case ST_TexTGVertexMul:
                            result = 590i64;
                            break;
                          case ST_BatchTexTGVertex:
                            result = 591i64;
                            break;
                          case ST_BatchTexTGVertexMul:
                            result = 592i64;
                            break;
                          case ST_InstancedTexTGVertex:
                            result = 593i64;
                            break;
                          case ST_InstancedTexTGVertexMul:
                            result = 594i64;
                            break;
                          case ST_Position3dTexTGVertex:
                            result = 595i64;
                            break;
                          case ST_Position3dTexTGVertexMul:
                            result = 596i64;
                            break;
                          case ST_BatchPosition3dTexTGVertex:
                            result = 597i64;
                            break;
                          case ST_BatchPosition3dTexTGVertexMul:
                            result = 598i64;
                            break;
                          case ST_InstancedPosition3dTexTGVertex:
                            result = 599i64;
                            break;
                          case ST_InstancedPosition3dTexTGVertexMul:
                            result = 600i64;
                            break;
                          case ST_TexTGVertexCxform:
                            result = 601i64;
                            break;
                          case ST_TexTGVertexCxformMul:
                            result = 602i64;
                            break;
                          case ST_BatchTexTGVertexCxform:
                            result = 603i64;
                            break;
                          case ST_BatchTexTGVertexCxformMul:
                            result = 604i64;
                            break;
                          case ST_InstancedTexTGVertexCxform:
                            result = 605i64;
                            break;
                          case ST_InstancedTexTGVertexCxformMul:
                            result = 606i64;
                            break;
                          case ST_Position3dTexTGVertexCxform:
                            result = 607i64;
                            break;
                          case ST_Position3dTexTGVertexCxformMul:
                            result = 608i64;
                            break;
                          case ST_BatchPosition3dTexTGVertexCxform:
                            result = 609i64;
                            break;
                          case ST_BatchPosition3dTexTGVertexCxformMul:
                            result = 610i64;
                            break;
                          case ST_InstancedPosition3dTexTGVertexCxform:
                            result = 611i64;
                            break;
                          case ST_InstancedPosition3dTexTGVertexCxformMul:
                            result = 612i64;
                            break;
                          case ST_TexTGVertexEAlpha:
                            result = 613i64;
                            break;
                          case ST_TexTGVertexEAlphaMul:
                            result = 614i64;
                            break;
                          case ST_BatchTexTGVertexEAlpha:
                            result = 615i64;
                            break;
                          case ST_BatchTexTGVertexEAlphaMul:
                            result = 616i64;
                            break;
                          case ST_InstancedTexTGVertexEAlpha:
                            result = 617i64;
                            break;
                          case ST_InstancedTexTGVertexEAlphaMul:
                            result = 618i64;
                            break;
                          case ST_Position3dTexTGVertexEAlpha:
                            result = 619i64;
                            break;
                          case ST_Position3dTexTGVertexEAlphaMul:
                            result = 620i64;
                            break;
                          case ST_BatchPosition3dTexTGVertexEAlpha:
                            result = 621i64;
                            break;
                          case ST_BatchPosition3dTexTGVertexEAlphaMul:
                            result = 622i64;
                            break;
                          case ST_InstancedPosition3dTexTGVertexEAlpha:
                            result = 623i64;
                            break;
                          case ST_InstancedPosition3dTexTGVertexEAlphaMul:
                            result = 624i64;
                            break;
                          case ST_TexTGVertexCxformEAlpha:
                            result = 625i64;
                            break;
                          case ST_TexTGVertexCxformEAlphaMul:
                            result = 626i64;
                            break;
                          case ST_BatchTexTGVertexCxformEAlpha:
                            result = 627i64;
                            break;
                          case ST_BatchTexTGVertexCxformEAlphaMul:
                            result = 628i64;
                            break;
                          case ST_InstancedTexTGVertexCxformEAlpha:
                            result = 629i64;
                            break;
                          case ST_InstancedTexTGVertexCxformEAlphaMul:
                            result = 630i64;
                            break;
                          case ST_Position3dTexTGVertexCxformEAlpha:
                            result = 631i64;
                            break;
                          case ST_Position3dTexTGVertexCxformEAlphaMul:
                            result = 632i64;
                            break;
                          case ST_BatchPosition3dTexTGVertexCxformEAlpha:
                            result = 633i64;
                            break;
                          case ST_BatchPosition3dTexTGVertexCxformEAlphaMul:
                            result = 634i64;
                            break;
                          case ST_InstancedPosition3dTexTGVertexCxformEAlpha:
                            result = 635i64;
                            break;
                          case ST_InstancedPosition3dTexTGVertexCxformEAlphaMul:
                            result = 636i64;
                            break;
                          case ST_TexTGVertexInv:
                            result = 637i64;
                            break;
                          case ST_BatchTexTGVertexInv:
                            result = 638i64;
                            break;
                          case ST_InstancedTexTGVertexInv:
                            result = 639i64;
                            break;
                          case ST_Position3dTexTGVertexInv:
                            result = 640i64;
                            break;
                          case ST_BatchPosition3dTexTGVertexInv:
                            result = 641i64;
                            break;
                          case ST_InstancedPosition3dTexTGVertexInv:
                            result = 642i64;
                            break;
                          case ST_TexTGVertexCxformInv:
                            result = 643i64;
                            break;
                          case ST_BatchTexTGVertexCxformInv:
                            result = 644i64;
                            break;
                          case ST_InstancedTexTGVertexCxformInv:
                            result = 645i64;
                            break;
                          case ST_Position3dTexTGVertexCxformInv:
                            result = 646i64;
                            break;
                          case ST_BatchPosition3dTexTGVertexCxformInv:
                            result = 647i64;
                            break;
                          case ST_InstancedPosition3dTexTGVertexCxformInv:
                            result = 648i64;
                            break;
                          case ST_TexTGVertexEAlphaInv:
                            result = 649i64;
                            break;
                          case ST_BatchTexTGVertexEAlphaInv:
                            result = 650i64;
                            break;
                          case ST_InstancedTexTGVertexEAlphaInv:
                            result = 651i64;
                            break;
                          case ST_Position3dTexTGVertexEAlphaInv:
                            result = 652i64;
                            break;
                          case ST_BatchPosition3dTexTGVertexEAlphaInv:
                            result = 653i64;
                            break;
                          case ST_InstancedPosition3dTexTGVertexEAlphaInv:
                            result = 654i64;
                            break;
                          case ST_TexTGVertexCxformEAlphaInv:
                            result = 655i64;
                            break;
                          case ST_BatchTexTGVertexCxformEAlphaInv:
                            result = 656i64;
                            break;
                          case ST_InstancedTexTGVertexCxformEAlphaInv:
                            result = 657i64;
                            break;
                          case ST_Position3dTexTGVertexCxformEAlphaInv:
                            result = 658i64;
                            break;
                          case ST_BatchPosition3dTexTGVertexCxformEAlphaInv:
                            result = 659i64;
                            break;
                          case ST_InstancedPosition3dTexTGVertexCxformEAlphaInv:
                            result = 660i64;
                            break;
                          case ST_TexTGVertexTexDensity:
                            result = 661i64;
                            break;
                          case ST_BatchTexTGVertexTexDensity:
                            result = 662i64;
                            break;
                          case ST_InstancedTexTGVertexTexDensity:
                            result = 663i64;
                            break;
                          case ST_Position3dTexTGVertexTexDensity:
                            result = 664i64;
                            break;
                          case ST_BatchPosition3dTexTGVertexTexDensity:
                            result = 665i64;
                            break;
                          case ST_InstancedPosition3dTexTGVertexTexDensity:
                            result = 666i64;
                            break;
                          case ST_TexTGVertexEAlphaTexDensity:
                            result = 667i64;
                            break;
                          case ST_BatchTexTGVertexEAlphaTexDensity:
                            result = 668i64;
                            break;
                          case ST_InstancedTexTGVertexEAlphaTexDensity:
                            result = 669i64;
                            break;
                          case ST_Position3dTexTGVertexEAlphaTexDensity:
                            result = 670i64;
                            break;
                          case ST_BatchPosition3dTexTGVertexEAlphaTexDensity:
                            result = 671i64;
                            break;
                          case ST_InstancedPosition3dTexTGVertexEAlphaTexDensity:
                            result = 672i64;
                            break;
                          default:
                            return 0i64;
                        }
                      }
                    }
                    else if ( type == ST_TexTGVertex )
                    {
                      return 589i64;
                    }
                    else
                    {
                      switch ( type )
                      {
                        case ST_ATexTGATexTGCxformAcMul:
                          result = 554i64;
                          break;
                        case ST_BatchATexTGATexTGCxformAc:
                          result = 555i64;
                          break;
                        case ST_BatchATexTGATexTGCxformAcMul:
                          result = 556i64;
                          break;
                        case ST_InstancedATexTGATexTGCxformAc:
                          result = 557i64;
                          break;
                        case ST_InstancedATexTGATexTGCxformAcMul:
                          result = 558i64;
                          break;
                        case ST_Position3dATexTGATexTGCxformAc:
                          result = 559i64;
                          break;
                        case ST_Position3dATexTGATexTGCxformAcMul:
                          result = 560i64;
                          break;
                        case ST_BatchPosition3dATexTGATexTGCxformAc:
                          result = 561i64;
                          break;
                        case ST_BatchPosition3dATexTGATexTGCxformAcMul:
                          result = 562i64;
                          break;
                        case ST_InstancedPosition3dATexTGATexTGCxformAc:
                          result = 563i64;
                          break;
                        case ST_InstancedPosition3dATexTGATexTGCxformAcMul:
                          result = 564i64;
                          break;
                        case ST_ATexTGATexTGCxformAcEAlpha:
                          result = 565i64;
                          break;
                        case ST_ATexTGATexTGCxformAcEAlphaMul:
                          result = 566i64;
                          break;
                        case ST_BatchATexTGATexTGCxformAcEAlpha:
                          result = 567i64;
                          break;
                        case ST_BatchATexTGATexTGCxformAcEAlphaMul:
                          result = 568i64;
                          break;
                        case ST_InstancedATexTGATexTGCxformAcEAlpha:
                          result = 569i64;
                          break;
                        case ST_InstancedATexTGATexTGCxformAcEAlphaMul:
                          result = 570i64;
                          break;
                        case ST_Position3dATexTGATexTGCxformAcEAlpha:
                          result = 571i64;
                          break;
                        case ST_Position3dATexTGATexTGCxformAcEAlphaMul:
                          result = 572i64;
                          break;
                        case ST_BatchPosition3dATexTGATexTGCxformAcEAlpha:
                          result = 573i64;
                          break;
                        case ST_BatchPosition3dATexTGATexTGCxformAcEAlphaMul:
                          result = 574i64;
                          break;
                        case ST_InstancedPosition3dATexTGATexTGCxformAcEAlpha:
                          result = 575i64;
                          break;
                        case ST_InstancedPosition3dATexTGATexTGCxformAcEAlphaMul:
                          result = 576i64;
                          break;
                        case ST_ATexTGATexTGCxformAcInv:
                          result = 577i64;
                          break;
                        case ST_BatchATexTGATexTGCxformAcInv:
                          result = 578i64;
                          break;
                        case ST_InstancedATexTGATexTGCxformAcInv:
                          result = 579i64;
                          break;
                        case ST_Position3dATexTGATexTGCxformAcInv:
                          result = 580i64;
                          break;
                        case ST_BatchPosition3dATexTGATexTGCxformAcInv:
                          result = 581i64;
                          break;
                        case ST_InstancedPosition3dATexTGATexTGCxformAcInv:
                          result = 582i64;
                          break;
                        case ST_ATexTGATexTGCxformAcEAlphaInv:
                          result = 583i64;
                          break;
                        case ST_BatchATexTGATexTGCxformAcEAlphaInv:
                          result = 584i64;
                          break;
                        case ST_InstancedATexTGATexTGCxformAcEAlphaInv:
                          result = 585i64;
                          break;
                        case ST_Position3dATexTGATexTGCxformAcEAlphaInv:
                          result = 586i64;
                          break;
                        case ST_BatchPosition3dATexTGATexTGCxformAcEAlphaInv:
                          result = 587i64;
                          break;
                        case ST_InstancedPosition3dATexTGATexTGCxformAcEAlphaInv:
                          result = 588i64;
                          break;
                        default:
                          return 0i64;
                      }
                    }
                  }
                  else if ( type == ST_ATexTGATexTGCxformAc )
                  {
                    return 553i64;
                  }
                  else
                  {
                    switch ( type )
                    {
                      case ST_ATexTGATexTGMul:
                        result = 470i64;
                        break;
                      case ST_BatchATexTGATexTG:
                        result = 471i64;
                        break;
                      case ST_BatchATexTGATexTGMul:
                        result = 472i64;
                        break;
                      case ST_InstancedATexTGATexTG:
                        result = 473i64;
                        break;
                      case ST_InstancedATexTGATexTGMul:
                        result = 474i64;
                        break;
                      case ST_Position3dATexTGATexTG:
                        result = 475i64;
                        break;
                      case ST_Position3dATexTGATexTGMul:
                        result = 476i64;
                        break;
                      case ST_BatchPosition3dATexTGATexTG:
                        result = 477i64;
                        break;
                      case ST_BatchPosition3dATexTGATexTGMul:
                        result = 478i64;
                        break;
                      case ST_InstancedPosition3dATexTGATexTG:
                        result = 479i64;
                        break;
                      case ST_InstancedPosition3dATexTGATexTGMul:
                        result = 480i64;
                        break;
                      case ST_ATexTGATexTGCxform:
                        result = 481i64;
                        break;
                      case ST_ATexTGATexTGCxformMul:
                        result = 482i64;
                        break;
                      case ST_BatchATexTGATexTGCxform:
                        result = 483i64;
                        break;
                      case ST_BatchATexTGATexTGCxformMul:
                        result = 484i64;
                        break;
                      case ST_InstancedATexTGATexTGCxform:
                        result = 485i64;
                        break;
                      case ST_InstancedATexTGATexTGCxformMul:
                        result = 486i64;
                        break;
                      case ST_Position3dATexTGATexTGCxform:
                        result = 487i64;
                        break;
                      case ST_Position3dATexTGATexTGCxformMul:
                        result = 488i64;
                        break;
                      case ST_BatchPosition3dATexTGATexTGCxform:
                        result = 489i64;
                        break;
                      case ST_BatchPosition3dATexTGATexTGCxformMul:
                        result = 490i64;
                        break;
                      case ST_InstancedPosition3dATexTGATexTGCxform:
                        result = 491i64;
                        break;
                      case ST_InstancedPosition3dATexTGATexTGCxformMul:
                        result = 492i64;
                        break;
                      case ST_ATexTGATexTGEAlpha:
                        result = 493i64;
                        break;
                      case ST_ATexTGATexTGEAlphaMul:
                        result = 494i64;
                        break;
                      case ST_BatchATexTGATexTGEAlpha:
                        result = 495i64;
                        break;
                      case ST_BatchATexTGATexTGEAlphaMul:
                        result = 496i64;
                        break;
                      case ST_InstancedATexTGATexTGEAlpha:
                        result = 497i64;
                        break;
                      case ST_InstancedATexTGATexTGEAlphaMul:
                        result = 498i64;
                        break;
                      case ST_Position3dATexTGATexTGEAlpha:
                        result = 499i64;
                        break;
                      case ST_Position3dATexTGATexTGEAlphaMul:
                        result = 500i64;
                        break;
                      case ST_BatchPosition3dATexTGATexTGEAlpha:
                        result = 501i64;
                        break;
                      case ST_BatchPosition3dATexTGATexTGEAlphaMul:
                        result = 502i64;
                        break;
                      case ST_InstancedPosition3dATexTGATexTGEAlpha:
                        result = 503i64;
                        break;
                      case ST_InstancedPosition3dATexTGATexTGEAlphaMul:
                        result = 504i64;
                        break;
                      case ST_ATexTGATexTGCxformEAlpha:
                        result = 505i64;
                        break;
                      case ST_ATexTGATexTGCxformEAlphaMul:
                        result = 506i64;
                        break;
                      case ST_BatchATexTGATexTGCxformEAlpha:
                        result = 507i64;
                        break;
                      case ST_BatchATexTGATexTGCxformEAlphaMul:
                        result = 508i64;
                        break;
                      case ST_InstancedATexTGATexTGCxformEAlpha:
                        result = 509i64;
                        break;
                      case ST_InstancedATexTGATexTGCxformEAlphaMul:
                        result = 510i64;
                        break;
                      case ST_Position3dATexTGATexTGCxformEAlpha:
                        result = 511i64;
                        break;
                      case ST_Position3dATexTGATexTGCxformEAlphaMul:
                        result = 512i64;
                        break;
                      case ST_BatchPosition3dATexTGATexTGCxformEAlpha:
                        result = 513i64;
                        break;
                      case ST_BatchPosition3dATexTGATexTGCxformEAlphaMul:
                        result = 514i64;
                        break;
                      case ST_InstancedPosition3dATexTGATexTGCxformEAlpha:
                        result = 515i64;
                        break;
                      case ST_InstancedPosition3dATexTGATexTGCxformEAlphaMul:
                        result = 516i64;
                        break;
                      case ST_ATexTGATexTGInv:
                        result = 517i64;
                        break;
                      case ST_BatchATexTGATexTGInv:
                        result = 518i64;
                        break;
                      case ST_InstancedATexTGATexTGInv:
                        result = 519i64;
                        break;
                      case ST_Position3dATexTGATexTGInv:
                        result = 520i64;
                        break;
                      case ST_BatchPosition3dATexTGATexTGInv:
                        result = 521i64;
                        break;
                      case ST_InstancedPosition3dATexTGATexTGInv:
                        result = 522i64;
                        break;
                      case ST_ATexTGATexTGCxformInv:
                        result = 523i64;
                        break;
                      case ST_BatchATexTGATexTGCxformInv:
                        result = 524i64;
                        break;
                      case ST_InstancedATexTGATexTGCxformInv:
                        result = 525i64;
                        break;
                      case ST_Position3dATexTGATexTGCxformInv:
                        result = 526i64;
                        break;
                      case ST_BatchPosition3dATexTGATexTGCxformInv:
                        result = 527i64;
                        break;
                      case ST_InstancedPosition3dATexTGATexTGCxformInv:
                        result = 528i64;
                        break;
                      case ST_ATexTGATexTGEAlphaInv:
                        result = 529i64;
                        break;
                      case ST_BatchATexTGATexTGEAlphaInv:
                        result = 530i64;
                        break;
                      case ST_InstancedATexTGATexTGEAlphaInv:
                        result = 531i64;
                        break;
                      case ST_Position3dATexTGATexTGEAlphaInv:
                        result = 532i64;
                        break;
                      case ST_BatchPosition3dATexTGATexTGEAlphaInv:
                        result = 533i64;
                        break;
                      case ST_InstancedPosition3dATexTGATexTGEAlphaInv:
                        result = 534i64;
                        break;
                      case ST_ATexTGATexTGCxformEAlphaInv:
                        result = 535i64;
                        break;
                      case ST_BatchATexTGATexTGCxformEAlphaInv:
                        result = 536i64;
                        break;
                      case ST_InstancedATexTGATexTGCxformEAlphaInv:
                        result = 537i64;
                        break;
                      case ST_Position3dATexTGATexTGCxformEAlphaInv:
                        result = 538i64;
                        break;
                      case ST_BatchPosition3dATexTGATexTGCxformEAlphaInv:
                        result = 539i64;
                        break;
                      case ST_InstancedPosition3dATexTGATexTGCxformEAlphaInv:
                        result = 540i64;
                        break;
                      case ST_ATexTGATexTGTexDensity:
                        result = 541i64;
                        break;
                      case ST_BatchATexTGATexTGTexDensity:
                        result = 542i64;
                        break;
                      case ST_InstancedATexTGATexTGTexDensity:
                        result = 543i64;
                        break;
                      case ST_Position3dATexTGATexTGTexDensity:
                        result = 544i64;
                        break;
                      case ST_BatchPosition3dATexTGATexTGTexDensity:
                        result = 545i64;
                        break;
                      case ST_InstancedPosition3dATexTGATexTGTexDensity:
                        result = 546i64;
                        break;
                      case ST_ATexTGATexTGEAlphaTexDensity:
                        result = 547i64;
                        break;
                      case ST_BatchATexTGATexTGEAlphaTexDensity:
                        result = 548i64;
                        break;
                      case ST_InstancedATexTGATexTGEAlphaTexDensity:
                        result = 549i64;
                        break;
                      case ST_Position3dATexTGATexTGEAlphaTexDensity:
                        result = 550i64;
                        break;
                      case ST_BatchPosition3dATexTGATexTGEAlphaTexDensity:
                        result = 551i64;
                        break;
                      case ST_InstancedPosition3dATexTGATexTGEAlphaTexDensity:
                        result = 552i64;
                        break;
                      default:
                        return 0i64;
                    }
                  }
                }
                else if ( type == ST_ATexTGATexTG )
                {
                  return 469i64;
                }
                else
                {
                  switch ( type )
                  {
                    case ST_TexTGTexTGCxformAcMul:
                      result = 434i64;
                      break;
                    case ST_BatchTexTGTexTGCxformAc:
                      result = 435i64;
                      break;
                    case ST_BatchTexTGTexTGCxformAcMul:
                      result = 436i64;
                      break;
                    case ST_InstancedTexTGTexTGCxformAc:
                      result = 437i64;
                      break;
                    case ST_InstancedTexTGTexTGCxformAcMul:
                      result = 438i64;
                      break;
                    case ST_Position3dTexTGTexTGCxformAc:
                      result = 439i64;
                      break;
                    case ST_Position3dTexTGTexTGCxformAcMul:
                      result = 440i64;
                      break;
                    case ST_BatchPosition3dTexTGTexTGCxformAc:
                      result = 441i64;
                      break;
                    case ST_BatchPosition3dTexTGTexTGCxformAcMul:
                      result = 442i64;
                      break;
                    case ST_InstancedPosition3dTexTGTexTGCxformAc:
                      result = 443i64;
                      break;
                    case ST_InstancedPosition3dTexTGTexTGCxformAcMul:
                      result = 444i64;
                      break;
                    case ST_TexTGTexTGCxformAcEAlpha:
                      result = 445i64;
                      break;
                    case ST_TexTGTexTGCxformAcEAlphaMul:
                      result = 446i64;
                      break;
                    case ST_BatchTexTGTexTGCxformAcEAlpha:
                      result = 447i64;
                      break;
                    case ST_BatchTexTGTexTGCxformAcEAlphaMul:
                      result = 448i64;
                      break;
                    case ST_InstancedTexTGTexTGCxformAcEAlpha:
                      result = 449i64;
                      break;
                    case ST_InstancedTexTGTexTGCxformAcEAlphaMul:
                      result = 450i64;
                      break;
                    case ST_Position3dTexTGTexTGCxformAcEAlpha:
                      result = 451i64;
                      break;
                    case ST_Position3dTexTGTexTGCxformAcEAlphaMul:
                      result = 452i64;
                      break;
                    case ST_BatchPosition3dTexTGTexTGCxformAcEAlpha:
                      result = 453i64;
                      break;
                    case ST_BatchPosition3dTexTGTexTGCxformAcEAlphaMul:
                      result = 454i64;
                      break;
                    case ST_InstancedPosition3dTexTGTexTGCxformAcEAlpha:
                      result = 455i64;
                      break;
                    case ST_InstancedPosition3dTexTGTexTGCxformAcEAlphaMul:
                      result = 456i64;
                      break;
                    case ST_TexTGTexTGCxformAcInv:
                      result = 457i64;
                      break;
                    case ST_BatchTexTGTexTGCxformAcInv:
                      result = 458i64;
                      break;
                    case ST_InstancedTexTGTexTGCxformAcInv:
                      result = 459i64;
                      break;
                    case ST_Position3dTexTGTexTGCxformAcInv:
                      result = 460i64;
                      break;
                    case ST_BatchPosition3dTexTGTexTGCxformAcInv:
                      result = 461i64;
                      break;
                    case ST_InstancedPosition3dTexTGTexTGCxformAcInv:
                      result = 462i64;
                      break;
                    case ST_TexTGTexTGCxformAcEAlphaInv:
                      result = 463i64;
                      break;
                    case ST_BatchTexTGTexTGCxformAcEAlphaInv:
                      result = 464i64;
                      break;
                    case ST_InstancedTexTGTexTGCxformAcEAlphaInv:
                      result = 465i64;
                      break;
                    case ST_Position3dTexTGTexTGCxformAcEAlphaInv:
                      result = 466i64;
                      break;
                    case ST_BatchPosition3dTexTGTexTGCxformAcEAlphaInv:
                      result = 467i64;
                      break;
                    case ST_InstancedPosition3dTexTGTexTGCxformAcEAlphaInv:
                      result = 468i64;
                      break;
                    default:
                      return 0i64;
                  }
                }
              }
              else if ( type == ST_TexTGTexTGCxformAc )
              {
                return 433i64;
              }
              else
              {
                switch ( type )
                {
                  case ST_TexTGTexTGMul:
                    result = 350i64;
                    break;
                  case ST_BatchTexTGTexTG:
                    result = 351i64;
                    break;
                  case ST_BatchTexTGTexTGMul:
                    result = 352i64;
                    break;
                  case ST_InstancedTexTGTexTG:
                    result = 353i64;
                    break;
                  case ST_InstancedTexTGTexTGMul:
                    result = 354i64;
                    break;
                  case ST_Position3dTexTGTexTG:
                    result = 355i64;
                    break;
                  case ST_Position3dTexTGTexTGMul:
                    result = 356i64;
                    break;
                  case ST_BatchPosition3dTexTGTexTG:
                    result = 357i64;
                    break;
                  case ST_BatchPosition3dTexTGTexTGMul:
                    result = 358i64;
                    break;
                  case ST_InstancedPosition3dTexTGTexTG:
                    result = 359i64;
                    break;
                  case ST_InstancedPosition3dTexTGTexTGMul:
                    result = 360i64;
                    break;
                  case ST_TexTGTexTGCxform:
                    result = 361i64;
                    break;
                  case ST_TexTGTexTGCxformMul:
                    result = 362i64;
                    break;
                  case ST_BatchTexTGTexTGCxform:
                    result = 363i64;
                    break;
                  case ST_BatchTexTGTexTGCxformMul:
                    result = 364i64;
                    break;
                  case ST_InstancedTexTGTexTGCxform:
                    result = 365i64;
                    break;
                  case ST_InstancedTexTGTexTGCxformMul:
                    result = 366i64;
                    break;
                  case ST_Position3dTexTGTexTGCxform:
                    result = 367i64;
                    break;
                  case ST_Position3dTexTGTexTGCxformMul:
                    result = 368i64;
                    break;
                  case ST_BatchPosition3dTexTGTexTGCxform:
                    result = 369i64;
                    break;
                  case ST_BatchPosition3dTexTGTexTGCxformMul:
                    result = 370i64;
                    break;
                  case ST_InstancedPosition3dTexTGTexTGCxform:
                    result = 371i64;
                    break;
                  case ST_InstancedPosition3dTexTGTexTGCxformMul:
                    result = 372i64;
                    break;
                  case ST_TexTGTexTGEAlpha:
                    result = 373i64;
                    break;
                  case ST_TexTGTexTGEAlphaMul:
                    result = 374i64;
                    break;
                  case ST_BatchTexTGTexTGEAlpha:
                    result = 375i64;
                    break;
                  case ST_BatchTexTGTexTGEAlphaMul:
                    result = 376i64;
                    break;
                  case ST_InstancedTexTGTexTGEAlpha:
                    result = 377i64;
                    break;
                  case ST_InstancedTexTGTexTGEAlphaMul:
                    result = 378i64;
                    break;
                  case ST_Position3dTexTGTexTGEAlpha:
                    result = 379i64;
                    break;
                  case ST_Position3dTexTGTexTGEAlphaMul:
                    result = 380i64;
                    break;
                  case ST_BatchPosition3dTexTGTexTGEAlpha:
                    result = 381i64;
                    break;
                  case ST_BatchPosition3dTexTGTexTGEAlphaMul:
                    result = 382i64;
                    break;
                  case ST_InstancedPosition3dTexTGTexTGEAlpha:
                    result = 383i64;
                    break;
                  case ST_InstancedPosition3dTexTGTexTGEAlphaMul:
                    result = 384i64;
                    break;
                  case ST_TexTGTexTGCxformEAlpha:
                    result = 385i64;
                    break;
                  case ST_TexTGTexTGCxformEAlphaMul:
                    result = 386i64;
                    break;
                  case ST_BatchTexTGTexTGCxformEAlpha:
                    result = 387i64;
                    break;
                  case ST_BatchTexTGTexTGCxformEAlphaMul:
                    result = 388i64;
                    break;
                  case ST_InstancedTexTGTexTGCxformEAlpha:
                    result = 389i64;
                    break;
                  case ST_InstancedTexTGTexTGCxformEAlphaMul:
                    result = 390i64;
                    break;
                  case ST_Position3dTexTGTexTGCxformEAlpha:
                    result = 391i64;
                    break;
                  case ST_Position3dTexTGTexTGCxformEAlphaMul:
                    result = 392i64;
                    break;
                  case ST_BatchPosition3dTexTGTexTGCxformEAlpha:
                    result = 393i64;
                    break;
                  case ST_BatchPosition3dTexTGTexTGCxformEAlphaMul:
                    result = 394i64;
                    break;
                  case ST_InstancedPosition3dTexTGTexTGCxformEAlpha:
                    result = 395i64;
                    break;
                  case ST_InstancedPosition3dTexTGTexTGCxformEAlphaMul:
                    result = 396i64;
                    break;
                  case ST_TexTGTexTGInv:
                    result = 397i64;
                    break;
                  case ST_BatchTexTGTexTGInv:
                    result = 398i64;
                    break;
                  case ST_InstancedTexTGTexTGInv:
                    result = 399i64;
                    break;
                  case ST_Position3dTexTGTexTGInv:
                    result = 400i64;
                    break;
                  case ST_BatchPosition3dTexTGTexTGInv:
                    result = 401i64;
                    break;
                  case ST_InstancedPosition3dTexTGTexTGInv:
                    result = 402i64;
                    break;
                  case ST_TexTGTexTGCxformInv:
                    result = 403i64;
                    break;
                  case ST_BatchTexTGTexTGCxformInv:
                    result = 404i64;
                    break;
                  case ST_InstancedTexTGTexTGCxformInv:
                    result = 405i64;
                    break;
                  case ST_Position3dTexTGTexTGCxformInv:
                    result = 406i64;
                    break;
                  case ST_BatchPosition3dTexTGTexTGCxformInv:
                    result = 407i64;
                    break;
                  case ST_InstancedPosition3dTexTGTexTGCxformInv:
                    result = 408i64;
                    break;
                  case ST_TexTGTexTGEAlphaInv:
                    result = 409i64;
                    break;
                  case ST_BatchTexTGTexTGEAlphaInv:
                    result = 410i64;
                    break;
                  case ST_InstancedTexTGTexTGEAlphaInv:
                    result = 411i64;
                    break;
                  case ST_Position3dTexTGTexTGEAlphaInv:
                    result = 412i64;
                    break;
                  case ST_BatchPosition3dTexTGTexTGEAlphaInv:
                    result = 413i64;
                    break;
                  case ST_InstancedPosition3dTexTGTexTGEAlphaInv:
                    result = 414i64;
                    break;
                  case ST_TexTGTexTGCxformEAlphaInv:
                    result = 415i64;
                    break;
                  case ST_BatchTexTGTexTGCxformEAlphaInv:
                    result = 416i64;
                    break;
                  case ST_InstancedTexTGTexTGCxformEAlphaInv:
                    result = 417i64;
                    break;
                  case ST_Position3dTexTGTexTGCxformEAlphaInv:
                    result = 418i64;
                    break;
                  case ST_BatchPosition3dTexTGTexTGCxformEAlphaInv:
                    result = 419i64;
                    break;
                  case ST_InstancedPosition3dTexTGTexTGCxformEAlphaInv:
                    result = 420i64;
                    break;
                  case ST_TexTGTexTGTexDensity:
                    result = 421i64;
                    break;
                  case ST_BatchTexTGTexTGTexDensity:
                    result = 422i64;
                    break;
                  case ST_InstancedTexTGTexTGTexDensity:
                    result = 423i64;
                    break;
                  case ST_Position3dTexTGTexTGTexDensity:
                    result = 424i64;
                    break;
                  case ST_BatchPosition3dTexTGTexTGTexDensity:
                    result = 425i64;
                    break;
                  case ST_InstancedPosition3dTexTGTexTGTexDensity:
                    result = 426i64;
                    break;
                  case ST_TexTGTexTGEAlphaTexDensity:
                    result = 427i64;
                    break;
                  case ST_BatchTexTGTexTGEAlphaTexDensity:
                    result = 428i64;
                    break;
                  case ST_InstancedTexTGTexTGEAlphaTexDensity:
                    result = 429i64;
                    break;
                  case ST_Position3dTexTGTexTGEAlphaTexDensity:
                    result = 430i64;
                    break;
                  case ST_BatchPosition3dTexTGTexTGEAlphaTexDensity:
                    result = 431i64;
                    break;
                  case ST_InstancedPosition3dTexTGTexTGEAlphaTexDensity:
                    result = 432i64;
                    break;
                  default:
                    return 0i64;
                }
              }
            }
            else if ( type == ST_TexTGTexTG )
            {
              return 349i64;
            }
            else
            {
              switch ( type )
              {
                case ST_VertexCxformAcMul:
                  result = 314i64;
                  break;
                case ST_BatchVertexCxformAc:
                  result = 315i64;
                  break;
                case ST_BatchVertexCxformAcMul:
                  result = 316i64;
                  break;
                case ST_InstancedVertexCxformAc:
                  result = 317i64;
                  break;
                case ST_InstancedVertexCxformAcMul:
                  result = 318i64;
                  break;
                case ST_Position3dVertexCxformAc:
                  result = 319i64;
                  break;
                case ST_Position3dVertexCxformAcMul:
                  result = 320i64;
                  break;
                case ST_BatchPosition3dVertexCxformAc:
                  result = 321i64;
                  break;
                case ST_BatchPosition3dVertexCxformAcMul:
                  result = 322i64;
                  break;
                case ST_InstancedPosition3dVertexCxformAc:
                  result = 323i64;
                  break;
                case ST_InstancedPosition3dVertexCxformAcMul:
                  result = 324i64;
                  break;
                case ST_VertexCxformAcEAlpha:
                  result = 325i64;
                  break;
                case ST_VertexCxformAcEAlphaMul:
                  result = 326i64;
                  break;
                case ST_BatchVertexCxformAcEAlpha:
                  result = 327i64;
                  break;
                case ST_BatchVertexCxformAcEAlphaMul:
                  result = 328i64;
                  break;
                case ST_InstancedVertexCxformAcEAlpha:
                  result = 329i64;
                  break;
                case ST_InstancedVertexCxformAcEAlphaMul:
                  result = 330i64;
                  break;
                case ST_Position3dVertexCxformAcEAlpha:
                  result = 331i64;
                  break;
                case ST_Position3dVertexCxformAcEAlphaMul:
                  result = 332i64;
                  break;
                case ST_BatchPosition3dVertexCxformAcEAlpha:
                  result = 333i64;
                  break;
                case ST_BatchPosition3dVertexCxformAcEAlphaMul:
                  result = 334i64;
                  break;
                case ST_InstancedPosition3dVertexCxformAcEAlpha:
                  result = 335i64;
                  break;
                case ST_InstancedPosition3dVertexCxformAcEAlphaMul:
                  result = 336i64;
                  break;
                case ST_VertexCxformAcInv:
                  result = 337i64;
                  break;
                case ST_BatchVertexCxformAcInv:
                  result = 338i64;
                  break;
                case ST_InstancedVertexCxformAcInv:
                  result = 339i64;
                  break;
                case ST_Position3dVertexCxformAcInv:
                  result = 340i64;
                  break;
                case ST_BatchPosition3dVertexCxformAcInv:
                  result = 341i64;
                  break;
                case ST_InstancedPosition3dVertexCxformAcInv:
                  result = 342i64;
                  break;
                case ST_VertexCxformAcEAlphaInv:
                  result = 343i64;
                  break;
                case ST_BatchVertexCxformAcEAlphaInv:
                  result = 344i64;
                  break;
                case ST_InstancedVertexCxformAcEAlphaInv:
                  result = 345i64;
                  break;
                case ST_Position3dVertexCxformAcEAlphaInv:
                  result = 346i64;
                  break;
                case ST_BatchPosition3dVertexCxformAcEAlphaInv:
                  result = 347i64;
                  break;
                case ST_InstancedPosition3dVertexCxformAcEAlphaInv:
                  result = 348i64;
                  break;
                default:
                  return 0i64;
              }
            }
          }
          else if ( type == ST_VertexCxformAc )
          {
            return 313i64;
          }
          else
          {
            switch ( type )
            {
              case ST_VertexMul:
                result = 242i64;
                break;
              case ST_BatchVertex:
                result = 243i64;
                break;
              case ST_BatchVertexMul:
                result = 244i64;
                break;
              case ST_InstancedVertex:
                result = 245i64;
                break;
              case ST_InstancedVertexMul:
                result = 246i64;
                break;
              case ST_Position3dVertex:
                result = 247i64;
                break;
              case ST_Position3dVertexMul:
                result = 248i64;
                break;
              case ST_BatchPosition3dVertex:
                result = 249i64;
                break;
              case ST_BatchPosition3dVertexMul:
                result = 250i64;
                break;
              case ST_InstancedPosition3dVertex:
                result = 251i64;
                break;
              case ST_InstancedPosition3dVertexMul:
                result = 252i64;
                break;
              case ST_VertexCxform:
                result = 253i64;
                break;
              case ST_VertexCxformMul:
                result = 254i64;
                break;
              case ST_BatchVertexCxform:
                result = 255i64;
                break;
              case ST_BatchVertexCxformMul:
                result = 256i64;
                break;
              case ST_InstancedVertexCxform:
                result = 257i64;
                break;
              case ST_InstancedVertexCxformMul:
                result = 258i64;
                break;
              case ST_Position3dVertexCxform:
                result = 259i64;
                break;
              case ST_Position3dVertexCxformMul:
                result = 260i64;
                break;
              case ST_BatchPosition3dVertexCxform:
                result = 261i64;
                break;
              case ST_BatchPosition3dVertexCxformMul:
                result = 262i64;
                break;
              case ST_InstancedPosition3dVertexCxform:
                result = 263i64;
                break;
              case ST_InstancedPosition3dVertexCxformMul:
                result = 264i64;
                break;
              case ST_VertexEAlpha:
                result = 265i64;
                break;
              case ST_VertexEAlphaMul:
                result = 266i64;
                break;
              case ST_BatchVertexEAlpha:
                result = 267i64;
                break;
              case ST_BatchVertexEAlphaMul:
                result = 268i64;
                break;
              case ST_InstancedVertexEAlpha:
                result = 269i64;
                break;
              case ST_InstancedVertexEAlphaMul:
                result = 270i64;
                break;
              case ST_Position3dVertexEAlpha:
                result = 271i64;
                break;
              case ST_Position3dVertexEAlphaMul:
                result = 272i64;
                break;
              case ST_BatchPosition3dVertexEAlpha:
                result = 273i64;
                break;
              case ST_BatchPosition3dVertexEAlphaMul:
                result = 274i64;
                break;
              case ST_InstancedPosition3dVertexEAlpha:
                result = 275i64;
                break;
              case ST_InstancedPosition3dVertexEAlphaMul:
                result = 276i64;
                break;
              case ST_VertexCxformEAlpha:
                result = 277i64;
                break;
              case ST_VertexCxformEAlphaMul:
                result = 278i64;
                break;
              case ST_BatchVertexCxformEAlpha:
                result = 279i64;
                break;
              case ST_BatchVertexCxformEAlphaMul:
                result = 280i64;
                break;
              case ST_InstancedVertexCxformEAlpha:
                result = 281i64;
                break;
              case ST_InstancedVertexCxformEAlphaMul:
                result = 282i64;
                break;
              case ST_Position3dVertexCxformEAlpha:
                result = 283i64;
                break;
              case ST_Position3dVertexCxformEAlphaMul:
                result = 284i64;
                break;
              case ST_BatchPosition3dVertexCxformEAlpha:
                result = 285i64;
                break;
              case ST_BatchPosition3dVertexCxformEAlphaMul:
                result = 286i64;
                break;
              case ST_InstancedPosition3dVertexCxformEAlpha:
                result = 287i64;
                break;
              case ST_InstancedPosition3dVertexCxformEAlphaMul:
                result = 288i64;
                break;
              case ST_VertexInv:
                result = 289i64;
                break;
              case ST_BatchVertexInv:
                result = 290i64;
                break;
              case ST_InstancedVertexInv:
                result = 291i64;
                break;
              case ST_Position3dVertexInv:
                result = 292i64;
                break;
              case ST_BatchPosition3dVertexInv:
                result = 293i64;
                break;
              case ST_InstancedPosition3dVertexInv:
                result = 294i64;
                break;
              case ST_VertexCxformInv:
                result = 295i64;
                break;
              case ST_BatchVertexCxformInv:
                result = 296i64;
                break;
              case ST_InstancedVertexCxformInv:
                result = 297i64;
                break;
              case ST_Position3dVertexCxformInv:
                result = 298i64;
                break;
              case ST_BatchPosition3dVertexCxformInv:
                result = 299i64;
                break;
              case ST_InstancedPosition3dVertexCxformInv:
                result = 300i64;
                break;
              case ST_VertexEAlphaInv:
                result = 301i64;
                break;
              case ST_BatchVertexEAlphaInv:
                result = 302i64;
                break;
              case ST_InstancedVertexEAlphaInv:
                result = 303i64;
                break;
              case ST_Position3dVertexEAlphaInv:
                result = 304i64;
                break;
              case ST_BatchPosition3dVertexEAlphaInv:
                result = 305i64;
                break;
              case ST_InstancedPosition3dVertexEAlphaInv:
                result = 306i64;
                break;
              case ST_VertexCxformEAlphaInv:
                result = 307i64;
                break;
              case ST_BatchVertexCxformEAlphaInv:
                result = 308i64;
                break;
              case ST_InstancedVertexCxformEAlphaInv:
                result = 309i64;
                break;
              case ST_Position3dVertexCxformEAlphaInv:
                result = 310i64;
                break;
              case ST_BatchPosition3dVertexCxformEAlphaInv:
                result = 311i64;
                break;
              case ST_InstancedPosition3dVertexCxformEAlphaInv:
                result = 312i64;
                break;
              default:
                return 0i64;
            }
          }
        }
        else if ( type == ST_Vertex )
        {
          return 241i64;
        }
        else
        {
          switch ( type )
          {
            case ST_ATexTGCxformAcMul:
              result = 206i64;
              break;
            case ST_BatchATexTGCxformAc:
              result = 207i64;
              break;
            case ST_BatchATexTGCxformAcMul:
              result = 208i64;
              break;
            case ST_InstancedATexTGCxformAc:
              result = 209i64;
              break;
            case ST_InstancedATexTGCxformAcMul:
              result = 210i64;
              break;
            case ST_Position3dATexTGCxformAc:
              result = 211i64;
              break;
            case ST_Position3dATexTGCxformAcMul:
              result = 212i64;
              break;
            case ST_BatchPosition3dATexTGCxformAc:
              result = 213i64;
              break;
            case ST_BatchPosition3dATexTGCxformAcMul:
              result = 214i64;
              break;
            case ST_InstancedPosition3dATexTGCxformAc:
              result = 215i64;
              break;
            case ST_InstancedPosition3dATexTGCxformAcMul:
              result = 216i64;
              break;
            case ST_ATexTGCxformAcEAlpha:
              result = 217i64;
              break;
            case ST_ATexTGCxformAcEAlphaMul:
              result = 218i64;
              break;
            case ST_BatchATexTGCxformAcEAlpha:
              result = 219i64;
              break;
            case ST_BatchATexTGCxformAcEAlphaMul:
              result = 220i64;
              break;
            case ST_InstancedATexTGCxformAcEAlpha:
              result = 221i64;
              break;
            case ST_InstancedATexTGCxformAcEAlphaMul:
              result = 222i64;
              break;
            case ST_Position3dATexTGCxformAcEAlpha:
              result = 223i64;
              break;
            case ST_Position3dATexTGCxformAcEAlphaMul:
              result = 224i64;
              break;
            case ST_BatchPosition3dATexTGCxformAcEAlpha:
              result = 225i64;
              break;
            case ST_BatchPosition3dATexTGCxformAcEAlphaMul:
              result = 226i64;
              break;
            case ST_InstancedPosition3dATexTGCxformAcEAlpha:
              result = 227i64;
              break;
            case ST_InstancedPosition3dATexTGCxformAcEAlphaMul:
              result = 228i64;
              break;
            case ST_ATexTGCxformAcInv:
              result = 229i64;
              break;
            case ST_BatchATexTGCxformAcInv:
              result = 230i64;
              break;
            case ST_InstancedATexTGCxformAcInv:
              result = 231i64;
              break;
            case ST_Position3dATexTGCxformAcInv:
              result = 232i64;
              break;
            case ST_BatchPosition3dATexTGCxformAcInv:
              result = 233i64;
              break;
            case ST_InstancedPosition3dATexTGCxformAcInv:
              result = 234i64;
              break;
            case ST_ATexTGCxformAcEAlphaInv:
              result = 235i64;
              break;
            case ST_BatchATexTGCxformAcEAlphaInv:
              result = 236i64;
              break;
            case ST_InstancedATexTGCxformAcEAlphaInv:
              result = 237i64;
              break;
            case ST_Position3dATexTGCxformAcEAlphaInv:
              result = 238i64;
              break;
            case ST_BatchPosition3dATexTGCxformAcEAlphaInv:
              result = 239i64;
              break;
            case ST_InstancedPosition3dATexTGCxformAcEAlphaInv:
              result = 240i64;
              break;
            default:
              return 0i64;
          }
        }
      }
      else if ( type == ST_ATexTGCxformAc )
      {
        return 205i64;
      }
      else
      {
        switch ( type )
        {
          case ST_ATexTGMul:
            result = 122i64;
            break;
          case ST_BatchATexTG:
            result = 123i64;
            break;
          case ST_BatchATexTGMul:
            result = 124i64;
            break;
          case ST_InstancedATexTG:
            result = 125i64;
            break;
          case ST_InstancedATexTGMul:
            result = 126i64;
            break;
          case ST_Position3dATexTG:
            result = 127i64;
            break;
          case ST_Position3dATexTGMul:
            result = 128i64;
            break;
          case ST_BatchPosition3dATexTG:
            result = 129i64;
            break;
          case ST_BatchPosition3dATexTGMul:
            result = 130i64;
            break;
          case ST_InstancedPosition3dATexTG:
            result = 131i64;
            break;
          case ST_InstancedPosition3dATexTGMul:
            result = 132i64;
            break;
          case ST_ATexTGCxform:
            result = 133i64;
            break;
          case ST_ATexTGCxformMul:
            result = 134i64;
            break;
          case ST_BatchATexTGCxform:
            result = 135i64;
            break;
          case ST_BatchATexTGCxformMul:
            result = 136i64;
            break;
          case ST_InstancedATexTGCxform:
            result = 137i64;
            break;
          case ST_InstancedATexTGCxformMul:
            result = 138i64;
            break;
          case ST_Position3dATexTGCxform:
            result = 139i64;
            break;
          case ST_Position3dATexTGCxformMul:
            result = 140i64;
            break;
          case ST_BatchPosition3dATexTGCxform:
            result = 141i64;
            break;
          case ST_BatchPosition3dATexTGCxformMul:
            result = 142i64;
            break;
          case ST_InstancedPosition3dATexTGCxform:
            result = 143i64;
            break;
          case ST_InstancedPosition3dATexTGCxformMul:
            result = 144i64;
            break;
          case ST_ATexTGEAlpha:
            result = 145i64;
            break;
          case ST_ATexTGEAlphaMul:
            result = 146i64;
            break;
          case ST_BatchATexTGEAlpha:
            result = 147i64;
            break;
          case ST_BatchATexTGEAlphaMul:
            result = 148i64;
            break;
          case ST_InstancedATexTGEAlpha:
            result = 149i64;
            break;
          case ST_InstancedATexTGEAlphaMul:
            result = 150i64;
            break;
          case ST_Position3dATexTGEAlpha:
            result = 151i64;
            break;
          case ST_Position3dATexTGEAlphaMul:
            result = 152i64;
            break;
          case ST_BatchPosition3dATexTGEAlpha:
            result = 153i64;
            break;
          case ST_BatchPosition3dATexTGEAlphaMul:
            result = 154i64;
            break;
          case ST_InstancedPosition3dATexTGEAlpha:
            result = 155i64;
            break;
          case ST_InstancedPosition3dATexTGEAlphaMul:
            result = 156i64;
            break;
          case ST_ATexTGCxformEAlpha:
            result = 157i64;
            break;
          case ST_ATexTGCxformEAlphaMul:
            result = 158i64;
            break;
          case ST_BatchATexTGCxformEAlpha:
            result = 159i64;
            break;
          case ST_BatchATexTGCxformEAlphaMul:
            result = 160i64;
            break;
          case ST_InstancedATexTGCxformEAlpha:
            result = 161i64;
            break;
          case ST_InstancedATexTGCxformEAlphaMul:
            result = 162i64;
            break;
          case ST_Position3dATexTGCxformEAlpha:
            result = 163i64;
            break;
          case ST_Position3dATexTGCxformEAlphaMul:
            result = 164i64;
            break;
          case ST_BatchPosition3dATexTGCxformEAlpha:
            result = 165i64;
            break;
          case ST_BatchPosition3dATexTGCxformEAlphaMul:
            result = 166i64;
            break;
          case ST_InstancedPosition3dATexTGCxformEAlpha:
            result = 167i64;
            break;
          case ST_InstancedPosition3dATexTGCxformEAlphaMul:
            result = 168i64;
            break;
          case ST_ATexTGInv:
            result = 169i64;
            break;
          case ST_BatchATexTGInv:
            result = 170i64;
            break;
          case ST_InstancedATexTGInv:
            result = 171i64;
            break;
          case ST_Position3dATexTGInv:
            result = 172i64;
            break;
          case ST_BatchPosition3dATexTGInv:
            result = 173i64;
            break;
          case ST_InstancedPosition3dATexTGInv:
            result = 174i64;
            break;
          case ST_ATexTGCxformInv:
            result = 175i64;
            break;
          case ST_BatchATexTGCxformInv:
            result = 176i64;
            break;
          case ST_InstancedATexTGCxformInv:
            result = 177i64;
            break;
          case ST_Position3dATexTGCxformInv:
            result = 178i64;
            break;
          case ST_BatchPosition3dATexTGCxformInv:
            result = 179i64;
            break;
          case ST_InstancedPosition3dATexTGCxformInv:
            result = 180i64;
            break;
          case ST_ATexTGEAlphaInv:
            result = 181i64;
            break;
          case ST_BatchATexTGEAlphaInv:
            result = 182i64;
            break;
          case ST_InstancedATexTGEAlphaInv:
            result = 183i64;
            break;
          case ST_Position3dATexTGEAlphaInv:
            result = 184i64;
            break;
          case ST_BatchPosition3dATexTGEAlphaInv:
            result = 185i64;
            break;
          case ST_InstancedPosition3dATexTGEAlphaInv:
            result = 186i64;
            break;
          case ST_ATexTGCxformEAlphaInv:
            result = 187i64;
            break;
          case ST_BatchATexTGCxformEAlphaInv:
            result = 188i64;
            break;
          case ST_InstancedATexTGCxformEAlphaInv:
            result = 189i64;
            break;
          case ST_Position3dATexTGCxformEAlphaInv:
            result = 190i64;
            break;
          case ST_BatchPosition3dATexTGCxformEAlphaInv:
            result = 191i64;
            break;
          case ST_InstancedPosition3dATexTGCxformEAlphaInv:
            result = 192i64;
            break;
          case ST_ATexTGTexDensity:
            result = 193i64;
            break;
          case ST_BatchATexTGTexDensity:
            result = 194i64;
            break;
          case ST_InstancedATexTGTexDensity:
            result = 195i64;
            break;
          case ST_Position3dATexTGTexDensity:
            result = 196i64;
            break;
          case ST_BatchPosition3dATexTGTexDensity:
            result = 197i64;
            break;
          case ST_InstancedPosition3dATexTGTexDensity:
            result = 198i64;
            break;
          case ST_ATexTGEAlphaTexDensity:
            result = 199i64;
            break;
          case ST_BatchATexTGEAlphaTexDensity:
            result = 200i64;
            break;
          case ST_InstancedATexTGEAlphaTexDensity:
            result = 201i64;
            break;
          case ST_Position3dATexTGEAlphaTexDensity:
            result = 202i64;
            break;
          case ST_BatchPosition3dATexTGEAlphaTexDensity:
            result = 203i64;
            break;
          case ST_InstancedPosition3dATexTGEAlphaTexDensity:
            result = 204i64;
            break;
          default:
            return 0i64;
        }
      }
    }
    else if ( type == ST_ATexTG )
    {
      return 121i64;
    }
    else
    {
      switch ( type )
      {
        case ST_TexTGCxformAcMul:
          result = 86i64;
          break;
        case ST_BatchTexTGCxformAc:
          result = 87i64;
          break;
        case ST_BatchTexTGCxformAcMul:
          result = 88i64;
          break;
        case ST_InstancedTexTGCxformAc:
          result = 89i64;
          break;
        case ST_InstancedTexTGCxformAcMul:
          result = 90i64;
          break;
        case ST_Position3dTexTGCxformAc:
          result = 91i64;
          break;
        case ST_Position3dTexTGCxformAcMul:
          result = 92i64;
          break;
        case ST_BatchPosition3dTexTGCxformAc:
          result = 93i64;
          break;
        case ST_BatchPosition3dTexTGCxformAcMul:
          result = 94i64;
          break;
        case ST_InstancedPosition3dTexTGCxformAc:
          result = 95i64;
          break;
        case ST_InstancedPosition3dTexTGCxformAcMul:
          result = 96i64;
          break;
        case ST_TexTGCxformAcEAlpha:
          result = 97i64;
          break;
        case ST_TexTGCxformAcEAlphaMul:
          result = 98i64;
          break;
        case ST_BatchTexTGCxformAcEAlpha:
          result = 99i64;
          break;
        case ST_BatchTexTGCxformAcEAlphaMul:
          result = 100i64;
          break;
        case ST_InstancedTexTGCxformAcEAlpha:
          result = 101i64;
          break;
        case ST_InstancedTexTGCxformAcEAlphaMul:
          result = 102i64;
          break;
        case ST_Position3dTexTGCxformAcEAlpha:
          result = 103i64;
          break;
        case ST_Position3dTexTGCxformAcEAlphaMul:
          result = 104i64;
          break;
        case ST_BatchPosition3dTexTGCxformAcEAlpha:
          result = 105i64;
          break;
        case ST_BatchPosition3dTexTGCxformAcEAlphaMul:
          result = 106i64;
          break;
        case ST_InstancedPosition3dTexTGCxformAcEAlpha:
          result = 107i64;
          break;
        case ST_InstancedPosition3dTexTGCxformAcEAlphaMul:
          result = 108i64;
          break;
        case ST_TexTGCxformAcInv:
          result = 109i64;
          break;
        case ST_BatchTexTGCxformAcInv:
          result = 110i64;
          break;
        case ST_InstancedTexTGCxformAcInv:
          result = 111i64;
          break;
        case ST_Position3dTexTGCxformAcInv:
          result = 112i64;
          break;
        case ST_BatchPosition3dTexTGCxformAcInv:
          result = 113i64;
          break;
        case ST_InstancedPosition3dTexTGCxformAcInv:
          result = 114i64;
          break;
        case ST_TexTGCxformAcEAlphaInv:
          result = 115i64;
          break;
        case ST_BatchTexTGCxformAcEAlphaInv:
          result = 116i64;
          break;
        case ST_InstancedTexTGCxformAcEAlphaInv:
          result = 117i64;
          break;
        case ST_Position3dTexTGCxformAcEAlphaInv:
          result = 118i64;
          break;
        case ST_BatchPosition3dTexTGCxformAcEAlphaInv:
          result = 119i64;
          break;
        case ST_InstancedPosition3dTexTGCxformAcEAlphaInv:
          result = 120i64;
          break;
        default:
          return 0i64;
      }
    }
  }
  else if ( type == ST_TexTGCxformAc )
  {
    return 85i64;
  }
  else
  {
    switch ( type )
    {
      case ST_base_Mul:
        result = 1i64;
        break;
      case ST_base_Batch:
        result = 2i64;
        break;
      case ST_BatchTexTG:
        result = 3i64;
        break;
      case ST_base_Instanced:
        result = 4i64;
        break;
      case ST_InstancedTexTG:
        result = 5i64;
        break;
      case ST_InstancedTexTGMul:
        result = 6i64;
        break;
      case ST_Position3dTexTG:
        result = 7i64;
        break;
      case ST_Position3dTexTGMul:
        result = 8i64;
        break;
      case ST_BatchPosition3dTexTG:
        result = 9i64;
        break;
      case ST_BatchPosition3dTexTGMul:
        result = 10i64;
        break;
      case ST_InstancedPosition3dTexTG:
        result = 11i64;
        break;
      case ST_InstancedPosition3dTexTGMul:
        result = 12i64;
        break;
      case ST_TexTGCxform:
        result = 13i64;
        break;
      case ST_TexTGCxformMul:
        result = 14i64;
        break;
      case ST_BatchTexTGCxform:
        result = 15i64;
        break;
      case ST_BatchTexTGCxformMul:
        result = 16i64;
        break;
      case ST_InstancedTexTGCxform:
        result = 17i64;
        break;
      case ST_InstancedTexTGCxformMul:
        result = 18i64;
        break;
      case ST_Position3dTexTGCxform:
        result = 19i64;
        break;
      case ST_Position3dTexTGCxformMul:
        result = 20i64;
        break;
      case ST_BatchPosition3dTexTGCxform:
        result = 21i64;
        break;
      case ST_BatchPosition3dTexTGCxformMul:
        result = 22i64;
        break;
      case ST_InstancedPosition3dTexTGCxform:
        result = 23i64;
        break;
      case ST_InstancedPosition3dTexTGCxformMul:
        result = 24i64;
        break;
      case ST_TexTGEAlpha:
        result = 25i64;
        break;
      case ST_TexTGEAlphaMul:
        result = 26i64;
        break;
      case ST_BatchTexTGEAlpha:
        result = 27i64;
        break;
      case ST_BatchTexTGEAlphaMul:
        result = 28i64;
        break;
      case ST_InstancedTexTGEAlpha:
        result = 29i64;
        break;
      case ST_InstancedTexTGEAlphaMul:
        result = 30i64;
        break;
      case ST_Position3dTexTGEAlpha:
        result = 31i64;
        break;
      case ST_Position3dTexTGEAlphaMul:
        result = 32i64;
        break;
      case ST_BatchPosition3dTexTGEAlpha:
        result = 33i64;
        break;
      case ST_BatchPosition3dTexTGEAlphaMul:
        result = 34i64;
        break;
      case ST_InstancedPosition3dTexTGEAlpha:
        result = 35i64;
        break;
      case ST_InstancedPosition3dTexTGEAlphaMul:
        result = 36i64;
        break;
      case ST_TexTGCxformEAlpha:
        result = 37i64;
        break;
      case ST_TexTGCxformEAlphaMul:
        result = 38i64;
        break;
      case ST_BatchTexTGCxformEAlpha:
        result = 39i64;
        break;
      case ST_BatchTexTGCxformEAlphaMul:
        result = 40i64;
        break;
      case ST_InstancedTexTGCxformEAlpha:
        result = 41i64;
        break;
      case ST_InstancedTexTGCxformEAlphaMul:
        result = 42i64;
        break;
      case ST_Position3dTexTGCxformEAlpha:
        result = 43i64;
        break;
      case ST_Position3dTexTGCxformEAlphaMul:
        result = 44i64;
        break;
      case ST_BatchPosition3dTexTGCxformEAlpha:
        result = 45i64;
        break;
      case ST_BatchPosition3dTexTGCxformEAlphaMul:
        result = 46i64;
        break;
      case ST_InstancedPosition3dTexTGCxformEAlpha:
        result = 47i64;
        break;
      case ST_InstancedPosition3dTexTGCxformEAlphaMul:
        result = 48i64;
        break;
      case ST_TexTGInv:
        result = 49i64;
        break;
      case ST_BatchTexTGInv:
        result = 50i64;
        break;
      case ST_InstancedTexTGInv:
        result = 51i64;
        break;
      case ST_Position3dTexTGInv:
        result = 52i64;
        break;
      case ST_BatchPosition3dTexTGInv:
        result = 53i64;
        break;
      case ST_InstancedPosition3dTexTGInv:
        result = 54i64;
        break;
      case ST_TexTGCxformInv:
        result = 55i64;
        break;
      case ST_BatchTexTGCxformInv:
        result = 56i64;
        break;
      case ST_InstancedTexTGCxformInv:
        result = 57i64;
        break;
      case ST_Position3dTexTGCxformInv:
        result = 58i64;
        break;
      case ST_BatchPosition3dTexTGCxformInv:
        result = 59i64;
        break;
      case ST_InstancedPosition3dTexTGCxformInv:
        result = 60i64;
        break;
      case ST_TexTGEAlphaInv:
        result = 61i64;
        break;
      case ST_BatchTexTGEAlphaInv:
        result = 62i64;
        break;
      case ST_InstancedTexTGEAlphaInv:
        result = 63i64;
        break;
      case ST_Position3dTexTGEAlphaInv:
        result = 64i64;
        break;
      case ST_BatchPosition3dTexTGEAlphaInv:
        result = 65i64;
        break;
      case ST_InstancedPosition3dTexTGEAlphaInv:
        result = 66i64;
        break;
      case ST_TexTGCxformEAlphaInv:
        result = 67i64;
        break;
      case ST_BatchTexTGCxformEAlphaInv:
        result = 68i64;
        break;
      case ST_InstancedTexTGCxformEAlphaInv:
        result = 69i64;
        break;
      case ST_Position3dTexTGCxformEAlphaInv:
        result = 70i64;
        break;
      case ST_BatchPosition3dTexTGCxformEAlphaInv:
        result = 71i64;
        break;
      case ST_InstancedPosition3dTexTGCxformEAlphaInv:
        result = 72i64;
        break;
      case ST_TexTGTexDensity:
        result = 73i64;
        break;
      case ST_BatchTexTGTexDensity:
        result = 74i64;
        break;
      case ST_InstancedTexTGTexDensity:
        result = 75i64;
        break;
      case ST_Position3dTexTGTexDensity:
        result = 76i64;
        break;
      case ST_BatchPosition3dTexTGTexDensity:
        result = 77i64;
        break;
      case ST_InstancedPosition3dTexTGTexDensity:
        result = 78i64;
        break;
      case ST_TexTGEAlphaTexDensity:
        result = 79i64;
        break;
      case ST_BatchTexTGEAlphaTexDensity:
        result = 80i64;
        break;
      case ST_InstancedTexTGEAlphaTexDensity:
        result = 81i64;
        break;
      case ST_Position3dTexTGEAlphaTexDensity:
        result = 82i64;
        break;
      case ST_BatchPosition3dTexTGEAlphaTexDensity:
        result = 83i64;
        break;
      case ST_InstancedPosition3dTexTGEAlphaTexDensity:
        result = 84i64;
        break;
      default:
        return 0i64;
    }
  }
  return result;
}

__int64 __fastcall Scaleform::Render::GL::FragShaderDesc::GetShaderIndexForComboIndex(
        unsigned int index,
        Scaleform::Render::GL::ShaderDesc::ShaderVersion ver)
{
  __int32 v2; // edx
  __int64 result; // rax

  if ( ver )
  {
    v2 = ver - 1;
    if ( v2 )
    {
      if ( v2 == 1 )
      {
        switch ( 0x40000000u )
        {
          case 0u:
          case 0x4Fu:
          case 0x1DCu:
          case 0x1F1u:
            result = 653i64;
            break;
          case 1u:
          case 0x50u:
          case 0x1DDu:
          case 0x1F2u:
            result = 654i64;
            break;
          case 2u:
          case 0x51u:
          case 0x1DEu:
          case 0x1F3u:
            result = 655i64;
            break;
          case 3u:
          case 0x52u:
          case 0x1DFu:
          case 0x1F4u:
            result = 656i64;
            break;
          case 4u:
          case 0x53u:
            result = 657i64;
            break;
          case 5u:
          case 0x54u:
            result = 658i64;
            break;
          case 6u:
          case 0x55u:
            result = 659i64;
            break;
          case 7u:
          case 0x56u:
            result = 660i64;
            break;
          case 8u:
          case 0x57u:
          case 0x1E0u:
          case 0x1F5u:
            result = 661i64;
            break;
          case 9u:
          case 0x58u:
          case 0x1E1u:
          case 0x1F6u:
            result = 662i64;
            break;
          case 0xAu:
          case 0x59u:
          case 0x1E2u:
          case 0x1F7u:
            result = 663i64;
            break;
          case 0xBu:
          case 0x5Au:
            result = 664i64;
            break;
          case 0xCu:
          case 0x5Bu:
            result = 665i64;
            break;
          case 0xDu:
          case 0x5Cu:
            result = 666i64;
            break;
          case 0xEu:
          case 0x5Du:
            result = 667i64;
            break;
          case 0xFu:
          case 0x5Eu:
            result = 668i64;
            break;
          case 0x10u:
          case 0x5Fu:
            result = 669i64;
            break;
          case 0x11u:
          case 0x60u:
            result = 670i64;
            break;
          case 0x12u:
          case 0x61u:
            result = 671i64;
            break;
          case 0x13u:
          case 0x62u:
            result = 672i64;
            break;
          case 0x15u:
          case 0x63u:
            result = 673i64;
            break;
          case 0x16u:
          case 0x64u:
            result = 674i64;
            break;
          case 0x17u:
          case 0x65u:
            result = 675i64;
            break;
          case 0x18u:
          case 0x66u:
            result = 676i64;
            break;
          case 0x19u:
          case 0x67u:
            result = 677i64;
            break;
          case 0x1Au:
          case 0x68u:
            result = 678i64;
            break;
          case 0x1Bu:
          case 0x69u:
            result = 679i64;
            break;
          case 0x1Cu:
          case 0x6Au:
            result = 680i64;
            break;
          case 0x1Du:
          case 0x6Bu:
            result = 681i64;
            break;
          case 0x1Eu:
          case 0x6Cu:
            result = 682i64;
            break;
          case 0x1Fu:
          case 0x6Du:
            result = 683i64;
            break;
          case 0x20u:
          case 0x6Eu:
            result = 684i64;
            break;
          case 0x21u:
          case 0x6Fu:
            result = 685i64;
            break;
          case 0x22u:
          case 0x70u:
            result = 686i64;
            break;
          case 0x23u:
          case 0x71u:
            result = 687i64;
            break;
          case 0x24u:
          case 0x72u:
            result = 688i64;
            break;
          case 0x25u:
          case 0x73u:
            result = 689i64;
            break;
          case 0x26u:
          case 0x74u:
            result = 690i64;
            break;
          case 0x27u:
          case 0x75u:
            result = 691i64;
            break;
          case 0x28u:
          case 0x76u:
            result = 692i64;
            break;
          case 0x29u:
          case 0x77u:
            result = 693i64;
            break;
          case 0x2Au:
          case 0x78u:
            result = 694i64;
            break;
          case 0x2Bu:
          case 0x79u:
            result = 695i64;
            break;
          case 0x2Cu:
          case 0x7Au:
            result = 696i64;
            break;
          case 0x2Du:
          case 0x7Bu:
            result = 697i64;
            break;
          case 0x2Eu:
          case 0x7Cu:
            result = 698i64;
            break;
          case 0x2Fu:
          case 0x7Du:
            result = 699i64;
            break;
          case 0x30u:
          case 0x7Eu:
            result = 700i64;
            break;
          case 0x31u:
          case 0x7Fu:
            result = 701i64;
            break;
          case 0x32u:
          case 0x80u:
            result = 702i64;
            break;
          case 0x33u:
          case 0x81u:
            result = 703i64;
            break;
          case 0x34u:
          case 0x82u:
            result = 704i64;
            break;
          case 0x35u:
          case 0x83u:
            result = 705i64;
            break;
          case 0x36u:
          case 0x84u:
            result = 706i64;
            break;
          case 0x37u:
          case 0x85u:
            result = 707i64;
            break;
          case 0x38u:
          case 0x86u:
            result = 708i64;
            break;
          case 0x39u:
          case 0x87u:
            result = 709i64;
            break;
          case 0x3Au:
          case 0x88u:
            result = 710i64;
            break;
          case 0x3Bu:
          case 0x89u:
            result = 711i64;
            break;
          case 0x3Cu:
          case 0x8Au:
            result = 712i64;
            break;
          case 0x3Du:
          case 0x8Bu:
            result = 713i64;
            break;
          case 0x3Eu:
          case 0x8Cu:
            result = 714i64;
            break;
          case 0x3Fu:
          case 0x8Du:
            result = 715i64;
            break;
          case 0x40u:
          case 0x8Eu:
            result = 716i64;
            break;
          case 0x41u:
          case 0x8Fu:
            result = 717i64;
            break;
          case 0x42u:
          case 0x90u:
            result = 718i64;
            break;
          case 0x43u:
          case 0x91u:
            result = 719i64;
            break;
          case 0x44u:
          case 0x92u:
            result = 720i64;
            break;
          case 0x45u:
          case 0x93u:
            result = 721i64;
            break;
          case 0x46u:
          case 0x94u:
            result = 722i64;
            break;
          case 0x47u:
          case 0x95u:
            result = 723i64;
            break;
          case 0x48u:
          case 0x96u:
            result = 724i64;
            break;
          case 0x49u:
          case 0x97u:
            result = 725i64;
            break;
          case 0x4Au:
          case 0x98u:
            result = 726i64;
            break;
          case 0x4Bu:
          case 0x99u:
            result = 727i64;
            break;
          case 0x4Cu:
          case 0x9Au:
            result = 728i64;
            break;
          case 0x4Du:
          case 0x9Bu:
            result = 729i64;
            break;
          case 0x4Eu:
          case 0x9Cu:
            result = 730i64;
            break;
          case 0x9Du:
          case 0xEBu:
          case 0x206u:
          case 0x21Bu:
            result = 731i64;
            break;
          case 0x9Eu:
          case 0xECu:
          case 0x207u:
          case 0x21Cu:
            result = 732i64;
            break;
          case 0x9Fu:
          case 0xEDu:
          case 0x208u:
          case 0x21Du:
            result = 733i64;
            break;
          case 0xA0u:
          case 0xEEu:
          case 0x209u:
          case 0x21Eu:
            result = 734i64;
            break;
          case 0xA1u:
          case 0xEFu:
            result = 735i64;
            break;
          case 0xA2u:
          case 0xF0u:
            result = 736i64;
            break;
          case 0xA3u:
          case 0xF1u:
            result = 737i64;
            break;
          case 0xA4u:
          case 0xF2u:
            result = 738i64;
            break;
          case 0xA5u:
          case 0xF3u:
          case 0x20Au:
          case 0x21Fu:
            result = 739i64;
            break;
          case 0xA6u:
          case 0xF4u:
          case 0x20Bu:
          case 0x220u:
            result = 740i64;
            break;
          case 0xA7u:
          case 0xF5u:
          case 0x20Cu:
          case 0x221u:
            result = 741i64;
            break;
          case 0xA8u:
          case 0xF6u:
            result = 742i64;
            break;
          case 0xA9u:
          case 0xF7u:
            result = 743i64;
            break;
          case 0xAAu:
          case 0xF8u:
            result = 744i64;
            break;
          case 0xABu:
          case 0xF9u:
            result = 745i64;
            break;
          case 0xACu:
          case 0xFAu:
            result = 746i64;
            break;
          case 0xADu:
          case 0xFBu:
            result = 747i64;
            break;
          case 0xAEu:
          case 0xFCu:
            result = 748i64;
            break;
          case 0xAFu:
          case 0xFDu:
            result = 749i64;
            break;
          case 0xB0u:
          case 0xFEu:
            result = 750i64;
            break;
          case 0xB1u:
          case 0xFFu:
            result = 751i64;
            break;
          case 0xB2u:
          case 0x100u:
            result = 752i64;
            break;
          case 0xB3u:
          case 0x101u:
            result = 753i64;
            break;
          case 0xB4u:
          case 0x102u:
            result = 754i64;
            break;
          case 0xB5u:
          case 0x103u:
            result = 755i64;
            break;
          case 0xB6u:
          case 0x104u:
            result = 756i64;
            break;
          case 0xB7u:
          case 0x105u:
            result = 757i64;
            break;
          case 0xB8u:
          case 0x106u:
            result = 758i64;
            break;
          case 0xB9u:
          case 0x107u:
            result = 759i64;
            break;
          case 0xBAu:
          case 0x108u:
            result = 760i64;
            break;
          case 0xBBu:
          case 0x109u:
            result = 761i64;
            break;
          case 0xBCu:
          case 0x10Au:
            result = 762i64;
            break;
          case 0xBDu:
          case 0x10Bu:
            result = 763i64;
            break;
          case 0xBEu:
          case 0x10Cu:
            result = 764i64;
            break;
          case 0xBFu:
          case 0x10Du:
            result = 765i64;
            break;
          case 0xC0u:
          case 0x10Eu:
            result = 766i64;
            break;
          case 0xC1u:
          case 0x10Fu:
            result = 767i64;
            break;
          case 0xC2u:
          case 0x110u:
            result = 768i64;
            break;
          case 0xC3u:
          case 0x111u:
            result = 769i64;
            break;
          case 0xC4u:
          case 0x112u:
            result = 770i64;
            break;
          case 0xC5u:
          case 0x113u:
            result = 771i64;
            break;
          case 0xC6u:
          case 0x114u:
            result = 772i64;
            break;
          case 0xC7u:
          case 0x115u:
            result = 773i64;
            break;
          case 0xC8u:
          case 0x116u:
            result = 774i64;
            break;
          case 0xC9u:
          case 0x117u:
            result = 775i64;
            break;
          case 0xCAu:
          case 0x118u:
            result = 776i64;
            break;
          case 0xCBu:
          case 0x119u:
            result = 777i64;
            break;
          case 0xCCu:
          case 0x11Au:
            result = 778i64;
            break;
          case 0xCDu:
          case 0x11Bu:
            result = 779i64;
            break;
          case 0xCEu:
          case 0x11Cu:
            result = 780i64;
            break;
          case 0xCFu:
          case 0x11Du:
            result = 781i64;
            break;
          case 0xD0u:
          case 0x11Eu:
            result = 782i64;
            break;
          case 0xD1u:
          case 0x11Fu:
            result = 783i64;
            break;
          case 0xD2u:
          case 0x120u:
            result = 784i64;
            break;
          case 0xD3u:
          case 0x121u:
            result = 785i64;
            break;
          case 0xD4u:
          case 0x122u:
            result = 786i64;
            break;
          case 0xD5u:
          case 0x123u:
            result = 787i64;
            break;
          case 0xD6u:
          case 0x124u:
            result = 788i64;
            break;
          case 0xD7u:
          case 0x125u:
            result = 789i64;
            break;
          case 0xD8u:
          case 0x126u:
            result = 790i64;
            break;
          case 0xD9u:
          case 0x127u:
            result = 791i64;
            break;
          case 0xDAu:
          case 0x128u:
            result = 792i64;
            break;
          case 0xDBu:
          case 0x129u:
            result = 793i64;
            break;
          case 0xDCu:
          case 0x12Au:
            result = 794i64;
            break;
          case 0xDDu:
          case 0x12Bu:
            result = 795i64;
            break;
          case 0xDEu:
          case 0x12Cu:
            result = 796i64;
            break;
          case 0xDFu:
          case 0x12Du:
            result = 797i64;
            break;
          case 0xE0u:
          case 0x12Eu:
            result = 798i64;
            break;
          case 0xE1u:
          case 0x12Fu:
            result = 799i64;
            break;
          case 0xE2u:
          case 0x130u:
            result = 800i64;
            break;
          case 0xE3u:
          case 0x131u:
            result = 801i64;
            break;
          case 0xE4u:
          case 0x132u:
            result = 802i64;
            break;
          case 0xE5u:
          case 0x133u:
            result = 803i64;
            break;
          case 0xE6u:
          case 0x134u:
            result = 804i64;
            break;
          case 0xE7u:
          case 0x135u:
            result = 805i64;
            break;
          case 0xE8u:
          case 0x136u:
            result = 806i64;
            break;
          case 0xE9u:
          case 0x137u:
            result = 807i64;
            break;
          case 0xEAu:
          case 0x138u:
            result = 808i64;
            break;
          case 0x139u:
          case 0x187u:
          case 0x230u:
          case 0x245u:
            result = 809i64;
            break;
          case 0x13Au:
          case 0x188u:
          case 0x231u:
          case 0x246u:
            result = 810i64;
            break;
          case 0x13Bu:
          case 0x189u:
          case 0x232u:
          case 0x247u:
            result = 811i64;
            break;
          case 0x13Cu:
          case 0x18Au:
          case 0x233u:
          case 0x248u:
            result = 812i64;
            break;
          case 0x13Du:
          case 0x18Bu:
            result = 813i64;
            break;
          case 0x13Eu:
          case 0x18Cu:
            result = 814i64;
            break;
          case 0x13Fu:
          case 0x18Du:
            result = 815i64;
            break;
          case 0x140u:
          case 0x18Eu:
            result = 816i64;
            break;
          case 0x141u:
          case 0x18Fu:
          case 0x234u:
          case 0x249u:
            result = 817i64;
            break;
          case 0x142u:
          case 0x190u:
          case 0x235u:
          case 0x24Au:
            result = 818i64;
            break;
          case 0x143u:
          case 0x191u:
          case 0x236u:
          case 0x24Bu:
            result = 819i64;
            break;
          case 0x144u:
          case 0x192u:
            result = 820i64;
            break;
          case 0x145u:
          case 0x193u:
            result = 821i64;
            break;
          case 0x146u:
          case 0x194u:
            result = 822i64;
            break;
          case 0x147u:
          case 0x195u:
            result = 823i64;
            break;
          case 0x148u:
          case 0x196u:
            result = 824i64;
            break;
          case 0x149u:
          case 0x197u:
            result = 825i64;
            break;
          case 0x14Au:
          case 0x198u:
            result = 826i64;
            break;
          case 0x14Bu:
          case 0x199u:
            result = 827i64;
            break;
          case 0x14Cu:
          case 0x19Au:
            result = 828i64;
            break;
          case 0x14Du:
          case 0x19Bu:
            result = 829i64;
            break;
          case 0x14Eu:
          case 0x19Cu:
            result = 830i64;
            break;
          case 0x14Fu:
          case 0x19Du:
            result = 831i64;
            break;
          case 0x150u:
          case 0x19Eu:
            result = 832i64;
            break;
          case 0x151u:
          case 0x19Fu:
            result = 833i64;
            break;
          case 0x152u:
          case 0x1A0u:
            result = 834i64;
            break;
          case 0x153u:
          case 0x1A1u:
            result = 835i64;
            break;
          case 0x154u:
          case 0x1A2u:
            result = 836i64;
            break;
          case 0x155u:
          case 0x1A3u:
            result = 837i64;
            break;
          case 0x156u:
          case 0x1A4u:
            result = 838i64;
            break;
          case 0x157u:
          case 0x1A5u:
            result = 839i64;
            break;
          case 0x158u:
          case 0x1A6u:
            result = 840i64;
            break;
          case 0x159u:
          case 0x1A7u:
            result = 841i64;
            break;
          case 0x15Au:
          case 0x1A8u:
            result = 842i64;
            break;
          case 0x15Bu:
          case 0x1A9u:
            result = 843i64;
            break;
          case 0x15Cu:
          case 0x1AAu:
            result = 844i64;
            break;
          case 0x15Du:
          case 0x1ABu:
            result = 845i64;
            break;
          case 0x15Eu:
          case 0x1ACu:
            result = 846i64;
            break;
          case 0x15Fu:
          case 0x1ADu:
            result = 847i64;
            break;
          case 0x160u:
          case 0x1AEu:
            result = 848i64;
            break;
          case 0x161u:
          case 0x1AFu:
            result = 849i64;
            break;
          case 0x162u:
          case 0x1B0u:
            result = 850i64;
            break;
          case 0x163u:
          case 0x1B1u:
            result = 851i64;
            break;
          case 0x164u:
          case 0x1B2u:
            result = 852i64;
            break;
          case 0x165u:
          case 0x1B3u:
            result = 853i64;
            break;
          case 0x166u:
          case 0x1B4u:
            result = 854i64;
            break;
          case 0x167u:
          case 0x1B5u:
            result = 855i64;
            break;
          case 0x168u:
          case 0x1B6u:
            result = 856i64;
            break;
          case 0x169u:
          case 0x1B7u:
            result = 857i64;
            break;
          case 0x16Au:
          case 0x1B8u:
            result = 858i64;
            break;
          case 0x16Bu:
          case 0x1B9u:
            result = 859i64;
            break;
          case 0x16Cu:
          case 0x1BAu:
            result = 860i64;
            break;
          case 0x16Du:
          case 0x1BBu:
            result = 861i64;
            break;
          case 0x16Eu:
          case 0x1BCu:
            result = 862i64;
            break;
          case 0x16Fu:
          case 0x1BDu:
            result = 863i64;
            break;
          case 0x170u:
          case 0x1BEu:
            result = 864i64;
            break;
          case 0x171u:
          case 0x1BFu:
            result = 865i64;
            break;
          case 0x172u:
          case 0x1C0u:
            result = 866i64;
            break;
          case 0x173u:
          case 0x1C1u:
            result = 867i64;
            break;
          case 0x174u:
          case 0x1C2u:
            result = 868i64;
            break;
          case 0x175u:
          case 0x1C3u:
            result = 869i64;
            break;
          case 0x176u:
          case 0x1C4u:
            result = 870i64;
            break;
          case 0x177u:
          case 0x1C5u:
            result = 871i64;
            break;
          case 0x178u:
          case 0x1C6u:
            result = 872i64;
            break;
          case 0x179u:
          case 0x1C7u:
            result = 873i64;
            break;
          case 0x17Au:
          case 0x1C8u:
            result = 874i64;
            break;
          case 0x17Bu:
          case 0x1C9u:
            result = 875i64;
            break;
          case 0x17Cu:
          case 0x1CAu:
            result = 876i64;
            break;
          case 0x17Du:
          case 0x1CBu:
            result = 877i64;
            break;
          case 0x17Eu:
          case 0x1CCu:
            result = 878i64;
            break;
          case 0x17Fu:
          case 0x1CDu:
            result = 879i64;
            break;
          case 0x180u:
          case 0x1CEu:
            result = 880i64;
            break;
          case 0x181u:
          case 0x1CFu:
            result = 881i64;
            break;
          case 0x182u:
          case 0x1D0u:
            result = 882i64;
            break;
          case 0x183u:
          case 0x1D1u:
            result = 883i64;
            break;
          case 0x184u:
          case 0x1D2u:
            result = 884i64;
            break;
          case 0x185u:
          case 0x1D3u:
            result = 885i64;
            break;
          case 0x186u:
          case 0x1D4u:
            result = 886i64;
            break;
          case 0x1D5u:
          case 0x1EAu:
            result = 887i64;
            break;
          case 0x1D6u:
          case 0x1EBu:
            result = 888i64;
            break;
          case 0x1D7u:
          case 0x1ECu:
            result = 889i64;
            break;
          case 0x1D8u:
          case 0x1EDu:
            result = 890i64;
            break;
          case 0x1D9u:
          case 0x1EEu:
            result = 891i64;
            break;
          case 0x1DAu:
          case 0x1EFu:
            result = 892i64;
            break;
          case 0x1DBu:
          case 0x1F0u:
            result = 893i64;
            break;
          case 0x1E3u:
          case 0x1F8u:
            result = 894i64;
            break;
          case 0x1E4u:
          case 0x1F9u:
            result = 895i64;
            break;
          case 0x1E5u:
          case 0x1FAu:
            result = 896i64;
            break;
          case 0x1E6u:
          case 0x1FBu:
            result = 897i64;
            break;
          case 0x1E7u:
          case 0x1FCu:
            result = 898i64;
            break;
          case 0x1E8u:
          case 0x1FDu:
            result = 899i64;
            break;
          case 0x1E9u:
          case 0x1FEu:
            result = 900i64;
            break;
          case 0x1FFu:
          case 0x214u:
            result = 901i64;
            break;
          case 0x200u:
          case 0x215u:
            result = 902i64;
            break;
          case 0x201u:
          case 0x216u:
            result = 903i64;
            break;
          case 0x202u:
          case 0x217u:
            result = 904i64;
            break;
          case 0x203u:
          case 0x218u:
            result = 905i64;
            break;
          case 0x204u:
          case 0x219u:
            result = 906i64;
            break;
          case 0x205u:
          case 0x21Au:
            result = 907i64;
            break;
          case 0x20Du:
          case 0x222u:
            result = 908i64;
            break;
          case 0x20Eu:
          case 0x223u:
            result = 909i64;
            break;
          case 0x20Fu:
          case 0x224u:
            result = 910i64;
            break;
          case 0x210u:
          case 0x225u:
            result = 911i64;
            break;
          case 0x211u:
          case 0x226u:
            result = 912i64;
            break;
          case 0x212u:
          case 0x227u:
            result = 913i64;
            break;
          case 0x213u:
          case 0x228u:
            result = 914i64;
            break;
          case 0x229u:
          case 0x23Eu:
            result = 915i64;
            break;
          case 0x22Au:
          case 0x23Fu:
            result = 916i64;
            break;
          case 0x22Bu:
          case 0x240u:
            result = 917i64;
            break;
          case 0x22Cu:
          case 0x241u:
            result = 918i64;
            break;
          case 0x22Du:
          case 0x242u:
            result = 919i64;
            break;
          case 0x22Eu:
          case 0x243u:
            result = 920i64;
            break;
          case 0x22Fu:
          case 0x244u:
            result = 921i64;
            break;
          case 0x237u:
          case 0x24Cu:
            result = 922i64;
            break;
          case 0x238u:
          case 0x24Du:
            result = 923i64;
            break;
          case 0x239u:
          case 0x24Eu:
            result = 924i64;
            break;
          case 0x23Au:
          case 0x24Fu:
            result = 925i64;
            break;
          case 0x23Bu:
          case 0x250u:
            result = 926i64;
            break;
          case 0x23Cu:
          case 0x251u:
            result = 927i64;
            break;
          case 0x23Du:
          case 0x252u:
            result = 928i64;
            break;
          case 0x253u:
          case 0x275u:
            result = 929i64;
            break;
          case 0x254u:
          case 0x276u:
            result = 930i64;
            break;
          case 0x255u:
          case 0x277u:
            result = 931i64;
            break;
          case 0x256u:
          case 0x278u:
            result = 932i64;
            break;
          case 0x257u:
          case 0x279u:
            result = 933i64;
            break;
          case 0x258u:
          case 0x27Au:
            result = 934i64;
            break;
          case 0x259u:
          case 0x27Bu:
            result = 935i64;
            break;
          case 0x25Au:
          case 0x27Cu:
            result = 936i64;
            break;
          case 0x25Bu:
          case 0x27Du:
            result = 937i64;
            break;
          case 0x25Cu:
          case 0x27Eu:
            result = 938i64;
            break;
          case 0x25Du:
          case 0x27Fu:
            result = 939i64;
            break;
          case 0x25Eu:
          case 0x280u:
            result = 940i64;
            break;
          case 0x25Fu:
          case 0x281u:
            result = 941i64;
            break;
          case 0x260u:
          case 0x282u:
            result = 942i64;
            break;
          case 0x261u:
          case 0x283u:
            result = 943i64;
            break;
          case 0x262u:
          case 0x284u:
            result = 944i64;
            break;
          case 0x263u:
          case 0x285u:
            result = 945i64;
            break;
          case 0x264u:
          case 0x286u:
            result = 946i64;
            break;
          case 0x265u:
          case 0x287u:
            result = 947i64;
            break;
          case 0x266u:
          case 0x288u:
            result = 948i64;
            break;
          case 0x267u:
          case 0x289u:
            result = 949i64;
            break;
          case 0x268u:
          case 0x28Au:
            result = 950i64;
            break;
          case 0x269u:
          case 0x28Bu:
            result = 951i64;
            break;
          case 0x26Au:
          case 0x28Cu:
            result = 952i64;
            break;
          case 0x26Bu:
          case 0x28Du:
            result = 953i64;
            break;
          case 0x26Cu:
          case 0x28Eu:
            result = 954i64;
            break;
          case 0x26Du:
          case 0x28Fu:
            result = 955i64;
            break;
          case 0x26Eu:
          case 0x290u:
            result = 956i64;
            break;
          case 0x26Fu:
          case 0x291u:
            result = 957i64;
            break;
          case 0x270u:
          case 0x292u:
            result = 958i64;
            break;
          case 0x271u:
          case 0x293u:
            result = 959i64;
            break;
          case 0x272u:
          case 0x294u:
            result = 960i64;
            break;
          case 0x273u:
          case 0x295u:
            result = 961i64;
            break;
          case 0x274u:
          case 0x296u:
            result = 962i64;
            break;
          case 0x297u:
          case 0x2B9u:
            result = 963i64;
            break;
          case 0x298u:
          case 0x2BAu:
            result = 964i64;
            break;
          case 0x299u:
          case 0x2BBu:
            result = 965i64;
            break;
          case 0x29Au:
          case 0x2BCu:
            result = 966i64;
            break;
          case 0x29Bu:
          case 0x2BDu:
            result = 967i64;
            break;
          case 0x29Cu:
          case 0x2BEu:
            result = 968i64;
            break;
          case 0x29Du:
          case 0x2BFu:
            result = 969i64;
            break;
          case 0x29Eu:
          case 0x2C0u:
            result = 970i64;
            break;
          case 0x29Fu:
          case 0x2C1u:
            result = 971i64;
            break;
          case 0x2A0u:
          case 0x2C2u:
            result = 972i64;
            break;
          case 0x2A1u:
          case 0x2C3u:
            result = 973i64;
            break;
          case 0x2A2u:
          case 0x2C4u:
            result = 974i64;
            break;
          case 0x2A3u:
          case 0x2C5u:
            result = 975i64;
            break;
          case 0x2A4u:
          case 0x2C6u:
            result = 976i64;
            break;
          case 0x2A5u:
          case 0x2C7u:
            result = 977i64;
            break;
          case 0x2A6u:
          case 0x2C8u:
            result = 978i64;
            break;
          case 0x2A7u:
          case 0x2C9u:
            result = 979i64;
            break;
          case 0x2A8u:
          case 0x2CAu:
            result = 980i64;
            break;
          case 0x2A9u:
          case 0x2CBu:
            result = 981i64;
            break;
          case 0x2AAu:
          case 0x2CCu:
            result = 982i64;
            break;
          case 0x2ABu:
          case 0x2CDu:
            result = 983i64;
            break;
          case 0x2ACu:
          case 0x2CEu:
            result = 984i64;
            break;
          case 0x2ADu:
          case 0x2CFu:
            result = 985i64;
            break;
          case 0x2AEu:
          case 0x2D0u:
            result = 986i64;
            break;
          case 0x2AFu:
          case 0x2D1u:
            result = 987i64;
            break;
          case 0x2B0u:
          case 0x2D2u:
            result = 988i64;
            break;
          case 0x2B1u:
          case 0x2D3u:
            result = 989i64;
            break;
          case 0x2B2u:
          case 0x2D4u:
            result = 990i64;
            break;
          case 0x2B3u:
          case 0x2D5u:
            result = 991i64;
            break;
          case 0x2B4u:
          case 0x2D6u:
            result = 992i64;
            break;
          case 0x2B5u:
          case 0x2D7u:
            result = 993i64;
            break;
          case 0x2B6u:
          case 0x2D8u:
            result = 994i64;
            break;
          case 0x2B7u:
          case 0x2D9u:
            result = 995i64;
            break;
          case 0x2B8u:
          case 0x2DAu:
            result = 996i64;
            break;
          case 0x2DBu:
          case 0x2FDu:
            result = 997i64;
            break;
          case 0x2DCu:
          case 0x2FEu:
            result = 998i64;
            break;
          case 0x2DDu:
          case 0x2FFu:
            result = 999i64;
            break;
          case 0x2DEu:
          case 0x300u:
            result = 1000i64;
            break;
          case 0x2DFu:
          case 0x301u:
            result = 1001i64;
            break;
          case 0x2E0u:
          case 0x302u:
            result = 1002i64;
            break;
          case 0x2E1u:
          case 0x303u:
            result = 1003i64;
            break;
          case 0x2E2u:
          case 0x304u:
            result = 1004i64;
            break;
          case 0x2E3u:
          case 0x305u:
            result = 1005i64;
            break;
          case 0x2E4u:
          case 0x306u:
            result = 1006i64;
            break;
          case 0x2E5u:
          case 0x307u:
            result = 1007i64;
            break;
          case 0x2E6u:
          case 0x308u:
            result = 1008i64;
            break;
          case 0x2E7u:
          case 0x309u:
            result = 1009i64;
            break;
          case 0x2E8u:
          case 0x30Au:
            result = 1010i64;
            break;
          case 0x2E9u:
          case 0x30Bu:
            result = 1011i64;
            break;
          case 0x2EAu:
          case 0x30Cu:
            result = 1012i64;
            break;
          case 0x2EBu:
          case 0x30Du:
            result = 1013i64;
            break;
          case 0x2ECu:
          case 0x30Eu:
            result = 1014i64;
            break;
          case 0x2EDu:
          case 0x30Fu:
            result = 1015i64;
            break;
          case 0x2EEu:
          case 0x310u:
            result = 1016i64;
            break;
          case 0x2EFu:
          case 0x311u:
            result = 1017i64;
            break;
          case 0x2F0u:
          case 0x312u:
            result = 1018i64;
            break;
          case 0x2F1u:
          case 0x313u:
            result = 1019i64;
            break;
          case 0x2F2u:
          case 0x314u:
            result = 1020i64;
            break;
          case 0x2F3u:
          case 0x315u:
            result = 1021i64;
            break;
          case 0x2F4u:
          case 0x316u:
            result = 1022i64;
            break;
          case 0x2F5u:
          case 0x317u:
            result = 1023i64;
            break;
          case 0x2F6u:
          case 0x318u:
            result = 1024i64;
            break;
          case 0x2F7u:
          case 0x319u:
            result = 1025i64;
            break;
          case 0x2F8u:
          case 0x31Au:
            result = 1026i64;
            break;
          case 0x2F9u:
          case 0x31Bu:
            result = 1027i64;
            break;
          case 0x2FAu:
          case 0x31Cu:
            result = 1028i64;
            break;
          case 0x2FBu:
          case 0x31Du:
            result = 1029i64;
            break;
          case 0x2FCu:
          case 0x31Eu:
            result = 1030i64;
            break;
          case 0x31Fu:
            result = 1031i64;
            break;
          case 0x320u:
            result = 1032i64;
            break;
          case 0x321u:
            result = 1033i64;
            break;
          case 0x322u:
            result = 1034i64;
            break;
          case 0x323u:
            result = 1035i64;
            break;
          case 0x324u:
            result = 1036i64;
            break;
          case 0x325u:
            result = 1037i64;
            break;
          case 0x326u:
            result = 1038i64;
            break;
          case 0x327u:
            result = 1039i64;
            break;
          case 0x328u:
            result = 1040i64;
            break;
          case 0x329u:
            result = 1041i64;
            break;
          case 0x32Au:
            result = 1042i64;
            break;
          case 0x32Bu:
            result = 1043i64;
            break;
          case 0x32Cu:
            result = 1044i64;
            break;
          case 0x32Du:
            result = 1045i64;
            break;
          case 0x32Eu:
            result = 1046i64;
            break;
          case 0x32Fu:
            result = 1047i64;
            break;
          case 0x330u:
            result = 1048i64;
            break;
          case 0x331u:
            result = 1049i64;
            break;
          case 0x332u:
            result = 1050i64;
            break;
          case 0x333u:
            result = 1051i64;
            break;
          case 0x334u:
            result = 1052i64;
            break;
          case 0x335u:
            result = 1053i64;
            break;
          case 0x336u:
            result = 1054i64;
            break;
          case 0x337u:
            result = 1055i64;
            break;
          case 0x338u:
            result = 1056i64;
            break;
          case 0x339u:
            result = 1057i64;
            break;
          case 0x33Au:
            result = 1058i64;
            break;
          case 0x33Bu:
            result = 1059i64;
            break;
          case 0x33Cu:
            result = 1060i64;
            break;
          case 0x33Du:
            result = 1061i64;
            break;
          case 0x33Eu:
            result = 1062i64;
            break;
          case 0x33Fu:
            result = 1063i64;
            break;
          case 0x340u:
            result = 1064i64;
            break;
          case 0x341u:
            result = 1065i64;
            break;
          case 0x342u:
            result = 1066i64;
            break;
          case 0x343u:
            result = 1067i64;
            break;
          case 0x344u:
            result = 1068i64;
            break;
          case 0x345u:
            result = 1069i64;
            break;
          case 0x346u:
            result = 1070i64;
            break;
          case 0x347u:
            result = 1071i64;
            break;
          case 0x348u:
            result = 1072i64;
            break;
          case 0x349u:
            result = 1073i64;
            break;
          case 0x34Au:
            result = 1074i64;
            break;
          case 0x34Bu:
            result = 1075i64;
            break;
          case 0x34Cu:
            result = 1076i64;
            break;
          case 0x34Du:
            result = 1077i64;
            break;
          case 0x34Eu:
            result = 1078i64;
            break;
          case 0x34Fu:
            result = 1079i64;
            break;
          case 0x350u:
            result = 1080i64;
            break;
          case 0x351u:
            result = 1081i64;
            break;
          case 0x352u:
            result = 1082i64;
            break;
          case 0x353u:
            result = 1083i64;
            break;
          case 0x354u:
            result = 1084i64;
            break;
          case 0x355u:
            result = 1085i64;
            break;
          case 0x356u:
            result = 1086i64;
            break;
          case 0x357u:
            result = 1087i64;
            break;
          case 0x358u:
            result = 1088i64;
            break;
          case 0x359u:
            result = 1089i64;
            break;
          case 0x35Au:
            result = 1090i64;
            break;
          case 0x35Bu:
            result = 1091i64;
            break;
          case 0x35Cu:
            result = 1092i64;
            break;
          case 0x35Du:
            result = 1093i64;
            break;
          case 0x35Eu:
            result = 1094i64;
            break;
          case 0x35Fu:
            result = 1095i64;
            break;
          case 0x360u:
            result = 1096i64;
            break;
          case 0x361u:
            result = 1097i64;
            break;
          case 0x362u:
            result = 1098i64;
            break;
          case 0x363u:
            result = 1099i64;
            break;
          case 0x364u:
            result = 1100i64;
            break;
          case 0x365u:
            result = 1101i64;
            break;
          case 0x366u:
            result = 1102i64;
            break;
          case 0x367u:
            result = 1103i64;
            break;
          case 0x368u:
            result = 1104i64;
            break;
          default:
            return 0i64;
        }
      }
      else
      {
        return 0i64;
      }
    }
    else
    {
      switch ( 0x40000000u )
      {
        case 0u:
        case 0x4Fu:
        case 0x140u:
        case 0x155u:
          result = 327i64;
          break;
        case 1u:
        case 0x50u:
        case 0x141u:
        case 0x156u:
          result = 328i64;
          break;
        case 2u:
        case 0x51u:
        case 0x142u:
        case 0x157u:
          result = 329i64;
          break;
        case 3u:
        case 0x52u:
        case 0x143u:
        case 0x158u:
          result = 330i64;
          break;
        case 4u:
        case 0x53u:
          result = 331i64;
          break;
        case 5u:
        case 0x54u:
          result = 332i64;
          break;
        case 6u:
        case 0x55u:
          result = 333i64;
          break;
        case 7u:
        case 0x56u:
          result = 334i64;
          break;
        case 8u:
        case 0x57u:
        case 0x144u:
        case 0x159u:
          result = 335i64;
          break;
        case 9u:
        case 0x58u:
        case 0x145u:
        case 0x15Au:
          result = 336i64;
          break;
        case 0xAu:
        case 0x59u:
        case 0x146u:
        case 0x15Bu:
          result = 337i64;
          break;
        case 0xBu:
        case 0x5Au:
          result = 338i64;
          break;
        case 0xCu:
        case 0x5Bu:
          result = 339i64;
          break;
        case 0xDu:
        case 0x5Cu:
          result = 340i64;
          break;
        case 0xEu:
        case 0x5Du:
          result = 341i64;
          break;
        case 0xFu:
        case 0x5Eu:
          result = 342i64;
          break;
        case 0x10u:
        case 0x5Fu:
          result = 343i64;
          break;
        case 0x11u:
        case 0x60u:
          result = 344i64;
          break;
        case 0x12u:
        case 0x61u:
          result = 345i64;
          break;
        case 0x13u:
        case 0x62u:
          result = 346i64;
          break;
        case 0x15u:
        case 0x63u:
          result = 347i64;
          break;
        case 0x16u:
        case 0x64u:
          result = 348i64;
          break;
        case 0x17u:
        case 0x65u:
          result = 349i64;
          break;
        case 0x18u:
        case 0x66u:
          result = 350i64;
          break;
        case 0x19u:
        case 0x67u:
          result = 351i64;
          break;
        case 0x1Au:
        case 0x68u:
          result = 352i64;
          break;
        case 0x1Bu:
        case 0x69u:
          result = 353i64;
          break;
        case 0x1Cu:
        case 0x6Au:
          result = 354i64;
          break;
        case 0x1Du:
        case 0x6Bu:
          result = 355i64;
          break;
        case 0x1Eu:
        case 0x6Cu:
          result = 356i64;
          break;
        case 0x1Fu:
        case 0x6Du:
          result = 357i64;
          break;
        case 0x20u:
        case 0x6Eu:
          result = 358i64;
          break;
        case 0x21u:
        case 0x6Fu:
          result = 359i64;
          break;
        case 0x22u:
        case 0x70u:
          result = 360i64;
          break;
        case 0x23u:
        case 0x71u:
          result = 361i64;
          break;
        case 0x24u:
        case 0x72u:
          result = 362i64;
          break;
        case 0x25u:
        case 0x73u:
          result = 363i64;
          break;
        case 0x26u:
        case 0x74u:
          result = 364i64;
          break;
        case 0x27u:
        case 0x75u:
          result = 365i64;
          break;
        case 0x28u:
        case 0x76u:
          result = 366i64;
          break;
        case 0x29u:
        case 0x77u:
          result = 367i64;
          break;
        case 0x2Au:
        case 0x78u:
          result = 368i64;
          break;
        case 0x2Bu:
        case 0x79u:
          result = 369i64;
          break;
        case 0x2Cu:
        case 0x7Au:
          result = 370i64;
          break;
        case 0x2Du:
        case 0x7Bu:
          result = 371i64;
          break;
        case 0x2Eu:
        case 0x7Cu:
          result = 372i64;
          break;
        case 0x2Fu:
        case 0x7Du:
          result = 373i64;
          break;
        case 0x30u:
        case 0x7Eu:
          result = 374i64;
          break;
        case 0x31u:
        case 0x7Fu:
          result = 375i64;
          break;
        case 0x32u:
        case 0x80u:
          result = 376i64;
          break;
        case 0x33u:
        case 0x81u:
          result = 377i64;
          break;
        case 0x34u:
        case 0x82u:
          result = 378i64;
          break;
        case 0x35u:
        case 0x83u:
          result = 379i64;
          break;
        case 0x36u:
        case 0x84u:
          result = 380i64;
          break;
        case 0x37u:
        case 0x85u:
          result = 381i64;
          break;
        case 0x38u:
        case 0x86u:
          result = 382i64;
          break;
        case 0x39u:
        case 0x87u:
          result = 383i64;
          break;
        case 0x3Au:
        case 0x88u:
          result = 384i64;
          break;
        case 0x3Bu:
        case 0x89u:
          result = 385i64;
          break;
        case 0x3Cu:
        case 0x8Au:
          result = 386i64;
          break;
        case 0x3Du:
        case 0x8Bu:
          result = 387i64;
          break;
        case 0x3Eu:
        case 0x8Cu:
          result = 388i64;
          break;
        case 0x3Fu:
        case 0x8Du:
          result = 389i64;
          break;
        case 0x40u:
        case 0x8Eu:
          result = 390i64;
          break;
        case 0x41u:
        case 0x8Fu:
          result = 391i64;
          break;
        case 0x42u:
        case 0x90u:
          result = 392i64;
          break;
        case 0x43u:
        case 0x91u:
          result = 393i64;
          break;
        case 0x44u:
        case 0x92u:
          result = 394i64;
          break;
        case 0x45u:
        case 0x93u:
          result = 395i64;
          break;
        case 0x46u:
        case 0x94u:
          result = 396i64;
          break;
        case 0x47u:
        case 0x95u:
          result = 397i64;
          break;
        case 0x48u:
        case 0x96u:
          result = 398i64;
          break;
        case 0x49u:
        case 0x97u:
          result = 399i64;
          break;
        case 0x4Au:
        case 0x98u:
          result = 400i64;
          break;
        case 0x4Bu:
        case 0x99u:
          result = 401i64;
          break;
        case 0x4Cu:
        case 0x9Au:
          result = 402i64;
          break;
        case 0x4Du:
        case 0x9Bu:
          result = 403i64;
          break;
        case 0x4Eu:
        case 0x9Cu:
          result = 404i64;
          break;
        case 0x9Du:
        case 0xEBu:
        case 0x16Au:
        case 0x17Fu:
          result = 405i64;
          break;
        case 0x9Eu:
        case 0xECu:
        case 0x16Bu:
        case 0x180u:
          result = 406i64;
          break;
        case 0x9Fu:
        case 0xEDu:
        case 0x16Cu:
        case 0x181u:
          result = 407i64;
          break;
        case 0xA0u:
        case 0xEEu:
        case 0x16Du:
        case 0x182u:
          result = 408i64;
          break;
        case 0xA1u:
        case 0xEFu:
          result = 409i64;
          break;
        case 0xA2u:
        case 0xF0u:
          result = 410i64;
          break;
        case 0xA3u:
        case 0xF1u:
          result = 411i64;
          break;
        case 0xA4u:
        case 0xF2u:
          result = 412i64;
          break;
        case 0xA5u:
        case 0xF3u:
        case 0x16Eu:
        case 0x183u:
          result = 413i64;
          break;
        case 0xA6u:
        case 0xF4u:
        case 0x16Fu:
        case 0x184u:
          result = 414i64;
          break;
        case 0xA7u:
        case 0xF5u:
        case 0x170u:
        case 0x185u:
          result = 415i64;
          break;
        case 0xA8u:
        case 0xF6u:
          result = 416i64;
          break;
        case 0xA9u:
        case 0xF7u:
          result = 417i64;
          break;
        case 0xAAu:
        case 0xF8u:
          result = 418i64;
          break;
        case 0xABu:
        case 0xF9u:
          result = 419i64;
          break;
        case 0xACu:
        case 0xFAu:
          result = 420i64;
          break;
        case 0xADu:
        case 0xFBu:
          result = 421i64;
          break;
        case 0xAEu:
        case 0xFCu:
          result = 422i64;
          break;
        case 0xAFu:
        case 0xFDu:
          result = 423i64;
          break;
        case 0xB0u:
        case 0xFEu:
          result = 424i64;
          break;
        case 0xB1u:
        case 0xFFu:
          result = 425i64;
          break;
        case 0xB2u:
        case 0x100u:
          result = 426i64;
          break;
        case 0xB3u:
        case 0x101u:
          result = 427i64;
          break;
        case 0xB4u:
        case 0x102u:
          result = 428i64;
          break;
        case 0xB5u:
        case 0x103u:
          result = 429i64;
          break;
        case 0xB6u:
        case 0x104u:
          result = 430i64;
          break;
        case 0xB7u:
        case 0x105u:
          result = 431i64;
          break;
        case 0xB8u:
        case 0x106u:
          result = 432i64;
          break;
        case 0xB9u:
        case 0x107u:
          result = 433i64;
          break;
        case 0xBAu:
        case 0x108u:
          result = 434i64;
          break;
        case 0xBBu:
        case 0x109u:
          result = 435i64;
          break;
        case 0xBCu:
        case 0x10Au:
          result = 436i64;
          break;
        case 0xBDu:
        case 0x10Bu:
          result = 437i64;
          break;
        case 0xBEu:
        case 0x10Cu:
          result = 438i64;
          break;
        case 0xBFu:
        case 0x10Du:
          result = 439i64;
          break;
        case 0xC0u:
        case 0x10Eu:
          result = 440i64;
          break;
        case 0xC1u:
        case 0x10Fu:
          result = 441i64;
          break;
        case 0xC2u:
        case 0x110u:
          result = 442i64;
          break;
        case 0xC3u:
        case 0x111u:
          result = 443i64;
          break;
        case 0xC4u:
        case 0x112u:
          result = 444i64;
          break;
        case 0xC5u:
        case 0x113u:
          result = 445i64;
          break;
        case 0xC6u:
        case 0x114u:
          result = 446i64;
          break;
        case 0xC7u:
        case 0x115u:
          result = 447i64;
          break;
        case 0xC8u:
        case 0x116u:
          result = 448i64;
          break;
        case 0xC9u:
        case 0x117u:
          result = 449i64;
          break;
        case 0xCAu:
        case 0x118u:
          result = 450i64;
          break;
        case 0xCBu:
        case 0x119u:
          result = 451i64;
          break;
        case 0xCCu:
        case 0x11Au:
          result = 452i64;
          break;
        case 0xCDu:
        case 0x11Bu:
          result = 453i64;
          break;
        case 0xCEu:
        case 0x11Cu:
          result = 454i64;
          break;
        case 0xCFu:
        case 0x11Du:
          result = 455i64;
          break;
        case 0xD0u:
        case 0x11Eu:
          result = 456i64;
          break;
        case 0xD1u:
        case 0x11Fu:
          result = 457i64;
          break;
        case 0xD2u:
        case 0x120u:
          result = 458i64;
          break;
        case 0xD3u:
        case 0x121u:
          result = 459i64;
          break;
        case 0xD4u:
        case 0x122u:
          result = 460i64;
          break;
        case 0xD5u:
        case 0x123u:
          result = 461i64;
          break;
        case 0xD6u:
        case 0x124u:
          result = 462i64;
          break;
        case 0xD7u:
        case 0x125u:
          result = 463i64;
          break;
        case 0xD8u:
        case 0x126u:
          result = 464i64;
          break;
        case 0xD9u:
        case 0x127u:
          result = 465i64;
          break;
        case 0xDAu:
        case 0x128u:
          result = 466i64;
          break;
        case 0xDBu:
        case 0x129u:
          result = 467i64;
          break;
        case 0xDCu:
        case 0x12Au:
          result = 468i64;
          break;
        case 0xDDu:
        case 0x12Bu:
          result = 469i64;
          break;
        case 0xDEu:
        case 0x12Cu:
          result = 470i64;
          break;
        case 0xDFu:
        case 0x12Du:
          result = 471i64;
          break;
        case 0xE0u:
        case 0x12Eu:
          result = 472i64;
          break;
        case 0xE1u:
        case 0x12Fu:
          result = 473i64;
          break;
        case 0xE2u:
        case 0x130u:
          result = 474i64;
          break;
        case 0xE3u:
        case 0x131u:
          result = 475i64;
          break;
        case 0xE4u:
        case 0x132u:
          result = 476i64;
          break;
        case 0xE5u:
        case 0x133u:
          result = 477i64;
          break;
        case 0xE6u:
        case 0x134u:
          result = 478i64;
          break;
        case 0xE7u:
        case 0x135u:
          result = 479i64;
          break;
        case 0xE8u:
        case 0x136u:
          result = 480i64;
          break;
        case 0xE9u:
        case 0x137u:
          result = 481i64;
          break;
        case 0xEAu:
        case 0x138u:
          result = 482i64;
          break;
        case 0x139u:
        case 0x14Eu:
          result = 483i64;
          break;
        case 0x13Au:
        case 0x14Fu:
          result = 484i64;
          break;
        case 0x13Bu:
        case 0x150u:
          result = 485i64;
          break;
        case 0x13Cu:
        case 0x151u:
          result = 486i64;
          break;
        case 0x13Du:
        case 0x152u:
          result = 487i64;
          break;
        case 0x13Eu:
        case 0x153u:
          result = 488i64;
          break;
        case 0x13Fu:
        case 0x154u:
          result = 489i64;
          break;
        case 0x147u:
        case 0x15Cu:
          result = 490i64;
          break;
        case 0x148u:
        case 0x15Du:
          result = 491i64;
          break;
        case 0x149u:
        case 0x15Eu:
          result = 492i64;
          break;
        case 0x14Au:
        case 0x15Fu:
          result = 493i64;
          break;
        case 0x14Bu:
        case 0x160u:
          result = 494i64;
          break;
        case 0x14Cu:
        case 0x161u:
          result = 495i64;
          break;
        case 0x14Du:
        case 0x162u:
          result = 496i64;
          break;
        case 0x163u:
        case 0x178u:
          result = 497i64;
          break;
        case 0x164u:
        case 0x179u:
          result = 498i64;
          break;
        case 0x165u:
        case 0x17Au:
          result = 499i64;
          break;
        case 0x166u:
        case 0x17Bu:
          result = 500i64;
          break;
        case 0x167u:
        case 0x17Cu:
          result = 501i64;
          break;
        case 0x168u:
        case 0x17Du:
          result = 502i64;
          break;
        case 0x169u:
        case 0x17Eu:
          result = 503i64;
          break;
        case 0x171u:
        case 0x186u:
          result = 504i64;
          break;
        case 0x172u:
        case 0x187u:
          result = 505i64;
          break;
        case 0x173u:
        case 0x188u:
          result = 506i64;
          break;
        case 0x174u:
        case 0x189u:
          result = 507i64;
          break;
        case 0x175u:
        case 0x18Au:
          result = 508i64;
          break;
        case 0x176u:
        case 0x18Bu:
          result = 509i64;
          break;
        case 0x177u:
        case 0x18Cu:
          result = 510i64;
          break;
        case 0x18Du:
        case 0x1AFu:
          result = 511i64;
          break;
        case 0x18Eu:
        case 0x1B0u:
          result = 512i64;
          break;
        case 0x18Fu:
        case 0x1B1u:
          result = 513i64;
          break;
        case 0x190u:
        case 0x1B2u:
          result = 514i64;
          break;
        case 0x191u:
        case 0x1B3u:
          result = 515i64;
          break;
        case 0x192u:
        case 0x1B4u:
          result = 516i64;
          break;
        case 0x193u:
        case 0x1B5u:
          result = 517i64;
          break;
        case 0x194u:
        case 0x1B6u:
          result = 518i64;
          break;
        case 0x195u:
        case 0x1B7u:
          result = 519i64;
          break;
        case 0x196u:
        case 0x1B8u:
          result = 520i64;
          break;
        case 0x197u:
        case 0x1B9u:
          result = 521i64;
          break;
        case 0x198u:
        case 0x1BAu:
          result = 522i64;
          break;
        case 0x199u:
        case 0x1BBu:
          result = 523i64;
          break;
        case 0x19Au:
        case 0x1BCu:
          result = 524i64;
          break;
        case 0x19Bu:
        case 0x1BDu:
          result = 525i64;
          break;
        case 0x19Cu:
        case 0x1BEu:
          result = 526i64;
          break;
        case 0x19Du:
        case 0x1BFu:
          result = 527i64;
          break;
        case 0x19Eu:
        case 0x1C0u:
          result = 528i64;
          break;
        case 0x19Fu:
        case 0x1C1u:
          result = 529i64;
          break;
        case 0x1A0u:
        case 0x1C2u:
          result = 530i64;
          break;
        case 0x1A1u:
        case 0x1C3u:
          result = 531i64;
          break;
        case 0x1A2u:
        case 0x1C4u:
          result = 532i64;
          break;
        case 0x1A3u:
        case 0x1C5u:
          result = 533i64;
          break;
        case 0x1A4u:
        case 0x1C6u:
          result = 534i64;
          break;
        case 0x1A5u:
        case 0x1C7u:
          result = 535i64;
          break;
        case 0x1A6u:
        case 0x1C8u:
          result = 536i64;
          break;
        case 0x1A7u:
        case 0x1C9u:
          result = 537i64;
          break;
        case 0x1A8u:
        case 0x1CAu:
          result = 538i64;
          break;
        case 0x1A9u:
        case 0x1CBu:
          result = 539i64;
          break;
        case 0x1AAu:
        case 0x1CCu:
          result = 540i64;
          break;
        case 0x1ABu:
        case 0x1CDu:
          result = 541i64;
          break;
        case 0x1ACu:
        case 0x1CEu:
          result = 542i64;
          break;
        case 0x1ADu:
        case 0x1CFu:
          result = 543i64;
          break;
        case 0x1AEu:
        case 0x1D0u:
          result = 544i64;
          break;
        case 0x1D1u:
        case 0x1F3u:
          result = 545i64;
          break;
        case 0x1D2u:
        case 0x1F4u:
          result = 546i64;
          break;
        case 0x1D3u:
        case 0x1F5u:
          result = 547i64;
          break;
        case 0x1D4u:
        case 0x1F6u:
          result = 548i64;
          break;
        case 0x1D5u:
        case 0x1F7u:
          result = 549i64;
          break;
        case 0x1D6u:
        case 0x1F8u:
          result = 550i64;
          break;
        case 0x1D7u:
        case 0x1F9u:
          result = 551i64;
          break;
        case 0x1D8u:
        case 0x1FAu:
          result = 552i64;
          break;
        case 0x1D9u:
        case 0x1FBu:
          result = 553i64;
          break;
        case 0x1DAu:
        case 0x1FCu:
          result = 554i64;
          break;
        case 0x1DBu:
        case 0x1FDu:
          result = 555i64;
          break;
        case 0x1DCu:
        case 0x1FEu:
          result = 556i64;
          break;
        case 0x1DDu:
        case 0x1FFu:
          result = 557i64;
          break;
        case 0x1DEu:
        case 0x200u:
          result = 558i64;
          break;
        case 0x1DFu:
        case 0x201u:
          result = 559i64;
          break;
        case 0x1E0u:
        case 0x202u:
          result = 560i64;
          break;
        case 0x1E1u:
        case 0x203u:
          result = 561i64;
          break;
        case 0x1E2u:
        case 0x204u:
          result = 562i64;
          break;
        case 0x1E3u:
        case 0x205u:
          result = 563i64;
          break;
        case 0x1E4u:
        case 0x206u:
          result = 564i64;
          break;
        case 0x1E5u:
        case 0x207u:
          result = 565i64;
          break;
        case 0x1E6u:
        case 0x208u:
          result = 566i64;
          break;
        case 0x1E7u:
        case 0x209u:
          result = 567i64;
          break;
        case 0x1E8u:
        case 0x20Au:
          result = 568i64;
          break;
        case 0x1E9u:
        case 0x20Bu:
          result = 569i64;
          break;
        case 0x1EAu:
        case 0x20Cu:
          result = 570i64;
          break;
        case 0x1EBu:
        case 0x20Du:
          result = 571i64;
          break;
        case 0x1ECu:
        case 0x20Eu:
          result = 572i64;
          break;
        case 0x1EDu:
        case 0x20Fu:
          result = 573i64;
          break;
        case 0x1EEu:
        case 0x210u:
          result = 574i64;
          break;
        case 0x1EFu:
        case 0x211u:
          result = 575i64;
          break;
        case 0x1F0u:
        case 0x212u:
          result = 576i64;
          break;
        case 0x1F1u:
        case 0x213u:
          result = 577i64;
          break;
        case 0x1F2u:
        case 0x214u:
          result = 578i64;
          break;
        case 0x215u:
          result = 579i64;
          break;
        case 0x216u:
          result = 580i64;
          break;
        case 0x217u:
          result = 581i64;
          break;
        case 0x218u:
          result = 582i64;
          break;
        case 0x219u:
          result = 583i64;
          break;
        case 0x21Au:
          result = 584i64;
          break;
        case 0x21Bu:
          result = 585i64;
          break;
        case 0x21Cu:
          result = 586i64;
          break;
        case 0x21Du:
          result = 587i64;
          break;
        case 0x21Eu:
          result = 588i64;
          break;
        case 0x21Fu:
          result = 589i64;
          break;
        case 0x220u:
          result = 590i64;
          break;
        case 0x221u:
          result = 591i64;
          break;
        case 0x222u:
          result = 592i64;
          break;
        case 0x223u:
          result = 593i64;
          break;
        case 0x224u:
          result = 594i64;
          break;
        case 0x225u:
          result = 595i64;
          break;
        case 0x226u:
          result = 596i64;
          break;
        case 0x227u:
          result = 597i64;
          break;
        case 0x228u:
          result = 598i64;
          break;
        case 0x229u:
          result = 599i64;
          break;
        case 0x22Au:
          result = 600i64;
          break;
        case 0x22Bu:
          result = 601i64;
          break;
        case 0x22Cu:
          result = 602i64;
          break;
        case 0x22Du:
          result = 603i64;
          break;
        case 0x22Eu:
          result = 604i64;
          break;
        case 0x22Fu:
          result = 605i64;
          break;
        case 0x230u:
          result = 606i64;
          break;
        case 0x231u:
          result = 607i64;
          break;
        case 0x232u:
          result = 608i64;
          break;
        case 0x233u:
          result = 609i64;
          break;
        case 0x234u:
          result = 610i64;
          break;
        case 0x235u:
          result = 611i64;
          break;
        case 0x236u:
          result = 612i64;
          break;
        case 0x237u:
          result = 613i64;
          break;
        case 0x238u:
          result = 614i64;
          break;
        case 0x239u:
          result = 615i64;
          break;
        case 0x23Au:
          result = 616i64;
          break;
        case 0x23Bu:
          result = 617i64;
          break;
        case 0x23Cu:
          result = 618i64;
          break;
        case 0x23Du:
          result = 619i64;
          break;
        case 0x23Eu:
          result = 620i64;
          break;
        case 0x23Fu:
          result = 621i64;
          break;
        case 0x240u:
          result = 622i64;
          break;
        case 0x241u:
          result = 623i64;
          break;
        case 0x242u:
          result = 624i64;
          break;
        case 0x243u:
          result = 625i64;
          break;
        case 0x244u:
          result = 626i64;
          break;
        case 0x245u:
          result = 627i64;
          break;
        case 0x246u:
          result = 628i64;
          break;
        case 0x247u:
          result = 629i64;
          break;
        case 0x248u:
          result = 630i64;
          break;
        case 0x249u:
          result = 631i64;
          break;
        case 0x24Au:
          result = 632i64;
          break;
        case 0x24Bu:
          result = 633i64;
          break;
        case 0x24Cu:
          result = 634i64;
          break;
        case 0x24Du:
          result = 635i64;
          break;
        case 0x24Eu:
          result = 636i64;
          break;
        case 0x24Fu:
          result = 637i64;
          break;
        case 0x250u:
          result = 638i64;
          break;
        case 0x251u:
          result = 639i64;
          break;
        case 0x252u:
          result = 640i64;
          break;
        case 0x253u:
          result = 641i64;
          break;
        case 0x254u:
          result = 642i64;
          break;
        case 0x255u:
          result = 643i64;
          break;
        case 0x256u:
          result = 644i64;
          break;
        case 0x257u:
          result = 645i64;
          break;
        case 0x258u:
          result = 646i64;
          break;
        case 0x259u:
          result = 647i64;
          break;
        case 0x25Au:
          result = 648i64;
          break;
        case 0x25Bu:
          result = 649i64;
          break;
        case 0x25Cu:
          result = 650i64;
          break;
        case 0x25Du:
          result = 651i64;
          break;
        case 0x25Eu:
          result = 652i64;
          break;
        default:
          return 0i64;
      }
    }
  }
  else
  {
    switch ( 0x40000000u )
    {
      case 0u:
      case 0x4Fu:
      case 0x140u:
      case 0x155u:
        result = 1i64;
        break;
      case 1u:
      case 0x50u:
      case 0x141u:
      case 0x156u:
        result = 2i64;
        break;
      case 2u:
      case 0x51u:
      case 0x142u:
      case 0x157u:
        result = 3i64;
        break;
      case 3u:
      case 0x52u:
      case 0x143u:
      case 0x158u:
        result = 4i64;
        break;
      case 4u:
      case 0x53u:
        result = 5i64;
        break;
      case 5u:
      case 0x54u:
        result = 6i64;
        break;
      case 6u:
      case 0x55u:
        result = 7i64;
        break;
      case 7u:
      case 0x56u:
        result = 8i64;
        break;
      case 8u:
      case 0x57u:
      case 0x144u:
      case 0x159u:
        result = 9i64;
        break;
      case 9u:
      case 0x58u:
      case 0x145u:
      case 0x15Au:
        result = 10i64;
        break;
      case 0xAu:
      case 0x59u:
      case 0x146u:
      case 0x15Bu:
        result = 11i64;
        break;
      case 0xBu:
      case 0x5Au:
        result = 12i64;
        break;
      case 0xCu:
      case 0x5Bu:
        result = 13i64;
        break;
      case 0xDu:
      case 0x5Cu:
        result = 14i64;
        break;
      case 0xEu:
      case 0x5Du:
        result = 15i64;
        break;
      case 0xFu:
      case 0x5Eu:
        result = 16i64;
        break;
      case 0x10u:
      case 0x5Fu:
        result = 17i64;
        break;
      case 0x11u:
      case 0x60u:
        result = 18i64;
        break;
      case 0x12u:
      case 0x61u:
        result = 19i64;
        break;
      case 0x13u:
      case 0x62u:
        result = 20i64;
        break;
      case 0x15u:
      case 0x63u:
        result = 21i64;
        break;
      case 0x16u:
      case 0x64u:
        result = 22i64;
        break;
      case 0x17u:
      case 0x65u:
        result = 23i64;
        break;
      case 0x18u:
      case 0x66u:
        result = 24i64;
        break;
      case 0x19u:
      case 0x67u:
        result = 25i64;
        break;
      case 0x1Au:
      case 0x68u:
        result = 26i64;
        break;
      case 0x1Bu:
      case 0x69u:
        result = 27i64;
        break;
      case 0x1Cu:
      case 0x6Au:
        result = 28i64;
        break;
      case 0x1Du:
      case 0x6Bu:
        result = 29i64;
        break;
      case 0x1Eu:
      case 0x6Cu:
        result = 30i64;
        break;
      case 0x1Fu:
      case 0x6Du:
        result = 31i64;
        break;
      case 0x20u:
      case 0x6Eu:
        result = 32i64;
        break;
      case 0x21u:
      case 0x6Fu:
        result = 33i64;
        break;
      case 0x22u:
      case 0x70u:
        result = 34i64;
        break;
      case 0x23u:
      case 0x71u:
        result = 35i64;
        break;
      case 0x24u:
      case 0x72u:
        result = 36i64;
        break;
      case 0x25u:
      case 0x73u:
        result = 37i64;
        break;
      case 0x26u:
      case 0x74u:
        result = 38i64;
        break;
      case 0x27u:
      case 0x75u:
        result = 39i64;
        break;
      case 0x28u:
      case 0x76u:
        result = 40i64;
        break;
      case 0x29u:
      case 0x77u:
        result = 41i64;
        break;
      case 0x2Au:
      case 0x78u:
        result = 42i64;
        break;
      case 0x2Bu:
      case 0x79u:
        result = 43i64;
        break;
      case 0x2Cu:
      case 0x7Au:
        result = 44i64;
        break;
      case 0x2Du:
      case 0x7Bu:
        result = 45i64;
        break;
      case 0x2Eu:
      case 0x7Cu:
        result = 46i64;
        break;
      case 0x2Fu:
      case 0x7Du:
        result = 47i64;
        break;
      case 0x30u:
      case 0x7Eu:
        result = 48i64;
        break;
      case 0x31u:
      case 0x7Fu:
        result = 49i64;
        break;
      case 0x32u:
      case 0x80u:
        result = 50i64;
        break;
      case 0x33u:
      case 0x81u:
        result = 51i64;
        break;
      case 0x34u:
      case 0x82u:
        result = 52i64;
        break;
      case 0x35u:
      case 0x83u:
        result = 53i64;
        break;
      case 0x36u:
      case 0x84u:
        result = 54i64;
        break;
      case 0x37u:
      case 0x85u:
        result = 55i64;
        break;
      case 0x38u:
      case 0x86u:
        result = 56i64;
        break;
      case 0x39u:
      case 0x87u:
        result = 57i64;
        break;
      case 0x3Au:
      case 0x88u:
        result = 58i64;
        break;
      case 0x3Bu:
      case 0x89u:
        result = 59i64;
        break;
      case 0x3Cu:
      case 0x8Au:
        result = 60i64;
        break;
      case 0x3Du:
      case 0x8Bu:
        result = 61i64;
        break;
      case 0x3Eu:
      case 0x8Cu:
        result = 62i64;
        break;
      case 0x3Fu:
      case 0x8Du:
        result = 63i64;
        break;
      case 0x40u:
      case 0x8Eu:
        result = 64i64;
        break;
      case 0x41u:
      case 0x8Fu:
        result = 65i64;
        break;
      case 0x42u:
      case 0x90u:
        result = 66i64;
        break;
      case 0x43u:
      case 0x91u:
        result = 67i64;
        break;
      case 0x44u:
      case 0x92u:
        result = 68i64;
        break;
      case 0x45u:
      case 0x93u:
        result = 69i64;
        break;
      case 0x46u:
      case 0x94u:
        result = 70i64;
        break;
      case 0x47u:
      case 0x95u:
        result = 71i64;
        break;
      case 0x48u:
      case 0x96u:
        result = 72i64;
        break;
      case 0x49u:
      case 0x97u:
        result = 73i64;
        break;
      case 0x4Au:
      case 0x98u:
        result = 74i64;
        break;
      case 0x4Bu:
      case 0x99u:
        result = 75i64;
        break;
      case 0x4Cu:
      case 0x9Au:
        result = 76i64;
        break;
      case 0x4Du:
      case 0x9Bu:
        result = 77i64;
        break;
      case 0x4Eu:
      case 0x9Cu:
        result = 78i64;
        break;
      case 0x9Du:
      case 0xEBu:
      case 0x16Au:
      case 0x17Fu:
        result = 79i64;
        break;
      case 0x9Eu:
      case 0xECu:
      case 0x16Bu:
      case 0x180u:
        result = 80i64;
        break;
      case 0x9Fu:
      case 0xEDu:
      case 0x16Cu:
      case 0x181u:
        result = 81i64;
        break;
      case 0xA0u:
      case 0xEEu:
      case 0x16Du:
      case 0x182u:
        result = 82i64;
        break;
      case 0xA1u:
      case 0xEFu:
        result = 83i64;
        break;
      case 0xA2u:
      case 0xF0u:
        result = 84i64;
        break;
      case 0xA3u:
      case 0xF1u:
        result = 85i64;
        break;
      case 0xA4u:
      case 0xF2u:
        result = 86i64;
        break;
      case 0xA5u:
      case 0xF3u:
      case 0x16Eu:
      case 0x183u:
        result = 87i64;
        break;
      case 0xA6u:
      case 0xF4u:
      case 0x16Fu:
      case 0x184u:
        result = 88i64;
        break;
      case 0xA7u:
      case 0xF5u:
      case 0x170u:
      case 0x185u:
        result = 89i64;
        break;
      case 0xA8u:
      case 0xF6u:
        result = 90i64;
        break;
      case 0xA9u:
      case 0xF7u:
        result = 91i64;
        break;
      case 0xAAu:
      case 0xF8u:
        result = 92i64;
        break;
      case 0xABu:
      case 0xF9u:
        result = 93i64;
        break;
      case 0xACu:
      case 0xFAu:
        result = 94i64;
        break;
      case 0xADu:
      case 0xFBu:
        result = 95i64;
        break;
      case 0xAEu:
      case 0xFCu:
        result = 96i64;
        break;
      case 0xAFu:
      case 0xFDu:
        result = 97i64;
        break;
      case 0xB0u:
      case 0xFEu:
        result = 98i64;
        break;
      case 0xB1u:
      case 0xFFu:
        result = 99i64;
        break;
      case 0xB2u:
      case 0x100u:
        result = 100i64;
        break;
      case 0xB3u:
      case 0x101u:
        result = 101i64;
        break;
      case 0xB4u:
      case 0x102u:
        result = 102i64;
        break;
      case 0xB5u:
      case 0x103u:
        result = 103i64;
        break;
      case 0xB6u:
      case 0x104u:
        result = 104i64;
        break;
      case 0xB7u:
      case 0x105u:
        result = 105i64;
        break;
      case 0xB8u:
      case 0x106u:
        result = 106i64;
        break;
      case 0xB9u:
      case 0x107u:
        result = 107i64;
        break;
      case 0xBAu:
      case 0x108u:
        result = 108i64;
        break;
      case 0xBBu:
      case 0x109u:
        result = 109i64;
        break;
      case 0xBCu:
      case 0x10Au:
        result = 110i64;
        break;
      case 0xBDu:
      case 0x10Bu:
        result = 111i64;
        break;
      case 0xBEu:
      case 0x10Cu:
        result = 112i64;
        break;
      case 0xBFu:
      case 0x10Du:
        result = 113i64;
        break;
      case 0xC0u:
      case 0x10Eu:
        result = 114i64;
        break;
      case 0xC1u:
      case 0x10Fu:
        result = 115i64;
        break;
      case 0xC2u:
      case 0x110u:
        result = 116i64;
        break;
      case 0xC3u:
      case 0x111u:
        result = 117i64;
        break;
      case 0xC4u:
      case 0x112u:
        result = 118i64;
        break;
      case 0xC5u:
      case 0x113u:
        result = 119i64;
        break;
      case 0xC6u:
      case 0x114u:
        result = 120i64;
        break;
      case 0xC7u:
      case 0x115u:
        result = 121i64;
        break;
      case 0xC8u:
      case 0x116u:
        result = 122i64;
        break;
      case 0xC9u:
      case 0x117u:
        result = 123i64;
        break;
      case 0xCAu:
      case 0x118u:
        result = 124i64;
        break;
      case 0xCBu:
      case 0x119u:
        result = 125i64;
        break;
      case 0xCCu:
      case 0x11Au:
        result = 126i64;
        break;
      case 0xCDu:
      case 0x11Bu:
        result = 127i64;
        break;
      case 0xCEu:
      case 0x11Cu:
        result = 128i64;
        break;
      case 0xCFu:
      case 0x11Du:
        result = 129i64;
        break;
      case 0xD0u:
      case 0x11Eu:
        result = 130i64;
        break;
      case 0xD1u:
      case 0x11Fu:
        result = 131i64;
        break;
      case 0xD2u:
      case 0x120u:
        result = 132i64;
        break;
      case 0xD3u:
      case 0x121u:
        result = 133i64;
        break;
      case 0xD4u:
      case 0x122u:
        result = 134i64;
        break;
      case 0xD5u:
      case 0x123u:
        result = 135i64;
        break;
      case 0xD6u:
      case 0x124u:
        result = 136i64;
        break;
      case 0xD7u:
      case 0x125u:
        result = 137i64;
        break;
      case 0xD8u:
      case 0x126u:
        result = 138i64;
        break;
      case 0xD9u:
      case 0x127u:
        result = 139i64;
        break;
      case 0xDAu:
      case 0x128u:
        result = 140i64;
        break;
      case 0xDBu:
      case 0x129u:
        result = 141i64;
        break;
      case 0xDCu:
      case 0x12Au:
        result = 142i64;
        break;
      case 0xDDu:
      case 0x12Bu:
        result = 143i64;
        break;
      case 0xDEu:
      case 0x12Cu:
        result = 144i64;
        break;
      case 0xDFu:
      case 0x12Du:
        result = 145i64;
        break;
      case 0xE0u:
      case 0x12Eu:
        result = 146i64;
        break;
      case 0xE1u:
      case 0x12Fu:
        result = 147i64;
        break;
      case 0xE2u:
      case 0x130u:
        result = 148i64;
        break;
      case 0xE3u:
      case 0x131u:
        result = 149i64;
        break;
      case 0xE4u:
      case 0x132u:
        result = 150i64;
        break;
      case 0xE5u:
      case 0x133u:
        result = 151i64;
        break;
      case 0xE6u:
      case 0x134u:
        result = 152i64;
        break;
      case 0xE7u:
      case 0x135u:
        result = 153i64;
        break;
      case 0xE8u:
      case 0x136u:
        result = 154i64;
        break;
      case 0xE9u:
      case 0x137u:
        result = 155i64;
        break;
      case 0xEAu:
      case 0x138u:
        result = 156i64;
        break;
      case 0x139u:
      case 0x14Eu:
        result = 157i64;
        break;
      case 0x13Au:
      case 0x14Fu:
        result = 158i64;
        break;
      case 0x13Bu:
      case 0x150u:
        result = 159i64;
        break;
      case 0x13Cu:
      case 0x151u:
        result = 160i64;
        break;
      case 0x13Du:
      case 0x152u:
        result = 161i64;
        break;
      case 0x13Eu:
      case 0x153u:
        result = 162i64;
        break;
      case 0x13Fu:
      case 0x154u:
        result = 163i64;
        break;
      case 0x147u:
      case 0x15Cu:
        result = 164i64;
        break;
      case 0x148u:
      case 0x15Du:
        result = 165i64;
        break;
      case 0x149u:
      case 0x15Eu:
        result = 166i64;
        break;
      case 0x14Au:
      case 0x15Fu:
        result = 167i64;
        break;
      case 0x14Bu:
      case 0x160u:
        result = 168i64;
        break;
      case 0x14Cu:
      case 0x161u:
        result = 169i64;
        break;
      case 0x14Du:
      case 0x162u:
        result = 170i64;
        break;
      case 0x163u:
      case 0x178u:
        result = 171i64;
        break;
      case 0x164u:
      case 0x179u:
        result = 172i64;
        break;
      case 0x165u:
      case 0x17Au:
        result = 173i64;
        break;
      case 0x166u:
      case 0x17Bu:
        result = 174i64;
        break;
      case 0x167u:
      case 0x17Cu:
        result = 175i64;
        break;
      case 0x168u:
      case 0x17Du:
        result = 176i64;
        break;
      case 0x169u:
      case 0x17Eu:
        result = 177i64;
        break;
      case 0x171u:
      case 0x186u:
        result = 178i64;
        break;
      case 0x172u:
      case 0x187u:
        result = 179i64;
        break;
      case 0x173u:
      case 0x188u:
        result = 180i64;
        break;
      case 0x174u:
      case 0x189u:
        result = 181i64;
        break;
      case 0x175u:
      case 0x18Au:
        result = 182i64;
        break;
      case 0x176u:
      case 0x18Bu:
        result = 183i64;
        break;
      case 0x177u:
      case 0x18Cu:
        result = 184i64;
        break;
      case 0x18Du:
      case 0x1AFu:
        result = 185i64;
        break;
      case 0x18Eu:
      case 0x1B0u:
        result = 186i64;
        break;
      case 0x18Fu:
      case 0x1B1u:
        result = 187i64;
        break;
      case 0x190u:
      case 0x1B2u:
        result = 188i64;
        break;
      case 0x191u:
      case 0x1B3u:
        result = 189i64;
        break;
      case 0x192u:
      case 0x1B4u:
        result = 190i64;
        break;
      case 0x193u:
      case 0x1B5u:
        result = 191i64;
        break;
      case 0x194u:
      case 0x1B6u:
        result = 192i64;
        break;
      case 0x195u:
      case 0x1B7u:
        result = 193i64;
        break;
      case 0x196u:
      case 0x1B8u:
        result = 194i64;
        break;
      case 0x197u:
      case 0x1B9u:
        result = 195i64;
        break;
      case 0x198u:
      case 0x1BAu:
        result = 196i64;
        break;
      case 0x199u:
      case 0x1BBu:
        result = 197i64;
        break;
      case 0x19Au:
      case 0x1BCu:
        result = 198i64;
        break;
      case 0x19Bu:
      case 0x1BDu:
        result = 199i64;
        break;
      case 0x19Cu:
      case 0x1BEu:
        result = 200i64;
        break;
      case 0x19Du:
      case 0x1BFu:
        result = 201i64;
        break;
      case 0x19Eu:
      case 0x1C0u:
        result = 202i64;
        break;
      case 0x19Fu:
      case 0x1C1u:
        result = 203i64;
        break;
      case 0x1A0u:
      case 0x1C2u:
        result = 204i64;
        break;
      case 0x1A1u:
      case 0x1C3u:
        result = 205i64;
        break;
      case 0x1A2u:
      case 0x1C4u:
        result = 206i64;
        break;
      case 0x1A3u:
      case 0x1C5u:
        result = 207i64;
        break;
      case 0x1A4u:
      case 0x1C6u:
        result = 208i64;
        break;
      case 0x1A5u:
      case 0x1C7u:
        result = 209i64;
        break;
      case 0x1A6u:
      case 0x1C8u:
        result = 210i64;
        break;
      case 0x1A7u:
      case 0x1C9u:
        result = 211i64;
        break;
      case 0x1A8u:
      case 0x1CAu:
        result = 212i64;
        break;
      case 0x1A9u:
      case 0x1CBu:
        result = 213i64;
        break;
      case 0x1AAu:
      case 0x1CCu:
        result = 214i64;
        break;
      case 0x1ABu:
      case 0x1CDu:
        result = 215i64;
        break;
      case 0x1ACu:
      case 0x1CEu:
        result = 216i64;
        break;
      case 0x1ADu:
      case 0x1CFu:
        result = 217i64;
        break;
      case 0x1AEu:
      case 0x1D0u:
        result = 218i64;
        break;
      case 0x1D1u:
      case 0x1F3u:
        result = 219i64;
        break;
      case 0x1D2u:
      case 0x1F4u:
        result = 220i64;
        break;
      case 0x1D3u:
      case 0x1F5u:
        result = 221i64;
        break;
      case 0x1D4u:
      case 0x1F6u:
        result = 222i64;
        break;
      case 0x1D5u:
      case 0x1F7u:
        result = 223i64;
        break;
      case 0x1D6u:
      case 0x1F8u:
        result = 224i64;
        break;
      case 0x1D7u:
      case 0x1F9u:
        result = 225i64;
        break;
      case 0x1D8u:
      case 0x1FAu:
        result = 226i64;
        break;
      case 0x1D9u:
      case 0x1FBu:
        result = 227i64;
        break;
      case 0x1DAu:
      case 0x1FCu:
        result = 228i64;
        break;
      case 0x1DBu:
      case 0x1FDu:
        result = 229i64;
        break;
      case 0x1DCu:
      case 0x1FEu:
        result = 230i64;
        break;
      case 0x1DDu:
      case 0x1FFu:
        result = 231i64;
        break;
      case 0x1DEu:
      case 0x200u:
        result = 232i64;
        break;
      case 0x1DFu:
      case 0x201u:
        result = 233i64;
        break;
      case 0x1E0u:
      case 0x202u:
        result = 234i64;
        break;
      case 0x1E1u:
      case 0x203u:
        result = 235i64;
        break;
      case 0x1E2u:
      case 0x204u:
        result = 236i64;
        break;
      case 0x1E3u:
      case 0x205u:
        result = 237i64;
        break;
      case 0x1E4u:
      case 0x206u:
        result = 238i64;
        break;
      case 0x1E5u:
      case 0x207u:
        result = 239i64;
        break;
      case 0x1E6u:
      case 0x208u:
        result = 240i64;
        break;
      case 0x1E7u:
      case 0x209u:
        result = 241i64;
        break;
      case 0x1E8u:
      case 0x20Au:
        result = 242i64;
        break;
      case 0x1E9u:
      case 0x20Bu:
        result = 243i64;
        break;
      case 0x1EAu:
      case 0x20Cu:
        result = 244i64;
        break;
      case 0x1EBu:
      case 0x20Du:
        result = 245i64;
        break;
      case 0x1ECu:
      case 0x20Eu:
        result = 246i64;
        break;
      case 0x1EDu:
      case 0x20Fu:
        result = 247i64;
        break;
      case 0x1EEu:
      case 0x210u:
        result = 248i64;
        break;
      case 0x1EFu:
      case 0x211u:
        result = 249i64;
        break;
      case 0x1F0u:
      case 0x212u:
        result = 250i64;
        break;
      case 0x1F1u:
      case 0x213u:
        result = 251i64;
        break;
      case 0x1F2u:
      case 0x214u:
        result = 252i64;
        break;
      case 0x215u:
        result = 253i64;
        break;
      case 0x216u:
        result = 254i64;
        break;
      case 0x217u:
        result = 255i64;
        break;
      case 0x218u:
        result = 256i64;
        break;
      case 0x219u:
        result = 257i64;
        break;
      case 0x21Au:
        result = 258i64;
        break;
      case 0x21Bu:
        result = 259i64;
        break;
      case 0x21Cu:
        result = 260i64;
        break;
      case 0x21Du:
        result = 261i64;
        break;
      case 0x21Eu:
        result = 262i64;
        break;
      case 0x21Fu:
        result = 263i64;
        break;
      case 0x220u:
        result = 264i64;
        break;
      case 0x221u:
        result = 265i64;
        break;
      case 0x222u:
        result = 266i64;
        break;
      case 0x223u:
        result = 267i64;
        break;
      case 0x224u:
        result = 268i64;
        break;
      case 0x225u:
        result = 269i64;
        break;
      case 0x226u:
        result = 270i64;
        break;
      case 0x227u:
        result = 271i64;
        break;
      case 0x228u:
        result = 272i64;
        break;
      case 0x229u:
        result = 273i64;
        break;
      case 0x22Au:
        result = 274i64;
        break;
      case 0x22Bu:
        result = 275i64;
        break;
      case 0x22Cu:
        result = 276i64;
        break;
      case 0x22Du:
        result = 277i64;
        break;
      case 0x22Eu:
        result = 278i64;
        break;
      case 0x22Fu:
        result = 279i64;
        break;
      case 0x230u:
        result = 280i64;
        break;
      case 0x231u:
        result = 281i64;
        break;
      case 0x232u:
        result = 282i64;
        break;
      case 0x233u:
        result = 283i64;
        break;
      case 0x234u:
        result = 284i64;
        break;
      case 0x235u:
        result = 285i64;
        break;
      case 0x236u:
        result = 286i64;
        break;
      case 0x237u:
        result = 287i64;
        break;
      case 0x238u:
        result = 288i64;
        break;
      case 0x239u:
        result = 289i64;
        break;
      case 0x23Au:
        result = 290i64;
        break;
      case 0x23Bu:
        result = 291i64;
        break;
      case 0x23Cu:
        result = 292i64;
        break;
      case 0x23Du:
        result = 293i64;
        break;
      case 0x23Eu:
        result = 294i64;
        break;
      case 0x23Fu:
        result = 295i64;
        break;
      case 0x240u:
        result = 296i64;
        break;
      case 0x241u:
        result = 297i64;
        break;
      case 0x242u:
        result = 298i64;
        break;
      case 0x243u:
        result = 299i64;
        break;
      case 0x244u:
        result = 300i64;
        break;
      case 0x245u:
        result = 301i64;
        break;
      case 0x246u:
        result = 302i64;
        break;
      case 0x247u:
        result = 303i64;
        break;
      case 0x248u:
        result = 304i64;
        break;
      case 0x249u:
        result = 305i64;
        break;
      case 0x24Au:
        result = 306i64;
        break;
      case 0x24Bu:
        result = 307i64;
        break;
      case 0x24Cu:
        result = 308i64;
        break;
      case 0x24Du:
        result = 309i64;
        break;
      case 0x24Eu:
        result = 310i64;
        break;
      case 0x24Fu:
        result = 311i64;
        break;
      case 0x250u:
        result = 312i64;
        break;
      case 0x251u:
        result = 313i64;
        break;
      case 0x252u:
        result = 314i64;
        break;
      case 0x253u:
        result = 315i64;
        break;
      case 0x254u:
        result = 316i64;
        break;
      case 0x255u:
        result = 317i64;
        break;
      case 0x256u:
        result = 318i64;
        break;
      case 0x257u:
        result = 319i64;
        break;
      case 0x258u:
        result = 320i64;
        break;
      case 0x259u:
        result = 321i64;
        break;
      case 0x25Au:
        result = 322i64;
        break;
      case 0x25Bu:
        result = 323i64;
        break;
      case 0x25Cu:
        result = 324i64;
        break;
      case 0x25Du:
        result = 325i64;
        break;
      case 0x25Eu:
        result = 326i64;
        break;
      default:
        return 0i64;
    }
  }
  return result;
}

__int64 __fastcall Scaleform::Render::GL::VertexShaderDesc::GetShaderIndexForComboIndex(
        unsigned int index,
        Scaleform::Render::GL::ShaderDesc::ShaderVersion ver)
{
  __int32 v2; // edx
  __int64 result; // rax

  if ( ver )
  {
    v2 = ver - 1;
    if ( v2 )
    {
      if ( v2 == 1 )
      {
        switch ( 0x40000000u )
        {
          case 0u:
          case 2u:
          case 3u:
            result = 233i64;
            break;
          case 1u:
            result = 234i64;
            break;
          case 4u:
          case 6u:
          case 7u:
            result = 235i64;
            break;
          case 5u:
            result = 236i64;
            break;
          case 8u:
          case 9u:
          case 0xAu:
          case 0xEu:
          case 0xFu:
          case 0x10u:
            result = 237i64;
            break;
          case 0xBu:
          case 0xCu:
          case 0xDu:
          case 0x11u:
          case 0x12u:
          case 0x13u:
            result = 238i64;
            break;
          case 0x15u:
          case 0x16u:
          case 0x17u:
            result = 239i64;
            break;
          case 0x18u:
          case 0x19u:
          case 0x1Au:
            result = 240i64;
            break;
          case 0x1Bu:
          case 0x1Cu:
          case 0x1Du:
          case 0x21u:
          case 0x22u:
          case 0x23u:
            result = 241i64;
            break;
          case 0x1Eu:
          case 0x1Fu:
          case 0x20u:
          case 0x24u:
          case 0x25u:
          case 0x26u:
            result = 242i64;
            break;
          case 0x27u:
          case 0x29u:
          case 0x2Au:
          case 0x2Bu:
          case 0x2Du:
          case 0x2Eu:
            result = 243i64;
            break;
          case 0x28u:
          case 0x2Cu:
            result = 244i64;
            break;
          case 0x2Fu:
          case 0x30u:
          case 0x31u:
          case 0x32u:
          case 0x33u:
          case 0x34u:
          case 0x35u:
          case 0x36u:
          case 0x37u:
          case 0x38u:
          case 0x39u:
          case 0x3Au:
            result = 245i64;
            break;
          case 0x3Bu:
          case 0x3Du:
          case 0x3Eu:
          case 0x3Fu:
          case 0x41u:
          case 0x42u:
            result = 246i64;
            break;
          case 0x3Cu:
          case 0x40u:
            result = 247i64;
            break;
          case 0x43u:
          case 0x44u:
          case 0x45u:
          case 0x46u:
          case 0x47u:
          case 0x48u:
          case 0x49u:
          case 0x4Au:
          case 0x4Bu:
          case 0x4Cu:
          case 0x4Du:
          case 0x4Eu:
            result = 248i64;
            break;
          case 0x4Fu:
          case 0x51u:
          case 0x52u:
            result = 249i64;
            break;
          case 0x50u:
            result = 250i64;
            break;
          case 0x53u:
          case 0x55u:
          case 0x56u:
            result = 251i64;
            break;
          case 0x54u:
            result = 252i64;
            break;
          case 0x57u:
          case 0x58u:
          case 0x59u:
          case 0x5Du:
          case 0x5Eu:
          case 0x5Fu:
            result = 253i64;
            break;
          case 0x5Au:
          case 0x5Bu:
          case 0x5Cu:
          case 0x60u:
          case 0x61u:
          case 0x62u:
            result = 254i64;
            break;
          case 0x63u:
          case 0x64u:
          case 0x65u:
            result = 255i64;
            break;
          case 0x66u:
          case 0x67u:
          case 0x68u:
            result = 256i64;
            break;
          case 0x69u:
          case 0x6Au:
          case 0x6Bu:
          case 0x6Fu:
          case 0x70u:
          case 0x71u:
            result = 257i64;
            break;
          case 0x6Cu:
          case 0x6Du:
          case 0x6Eu:
          case 0x72u:
          case 0x73u:
          case 0x74u:
            result = 258i64;
            break;
          case 0x75u:
          case 0x77u:
          case 0x78u:
          case 0x79u:
          case 0x7Bu:
          case 0x7Cu:
            result = 259i64;
            break;
          case 0x76u:
          case 0x7Au:
            result = 260i64;
            break;
          case 0x7Du:
          case 0x7Eu:
          case 0x7Fu:
          case 0x80u:
          case 0x81u:
          case 0x82u:
          case 0x83u:
          case 0x84u:
          case 0x85u:
          case 0x86u:
          case 0x87u:
          case 0x88u:
            result = 261i64;
            break;
          case 0x89u:
          case 0x8Bu:
          case 0x8Cu:
          case 0x8Du:
          case 0x8Fu:
          case 0x90u:
            result = 262i64;
            break;
          case 0x8Au:
          case 0x8Eu:
            result = 263i64;
            break;
          case 0x91u:
          case 0x92u:
          case 0x93u:
          case 0x94u:
          case 0x95u:
          case 0x96u:
          case 0x97u:
          case 0x98u:
          case 0x99u:
          case 0x9Au:
          case 0x9Bu:
          case 0x9Cu:
            result = 264i64;
            break;
          case 0x9Du:
          case 0x9Fu:
          case 0xA0u:
          case 0x31Fu:
          case 0x320u:
          case 0x357u:
          case 0x358u:
          case 0x359u:
          case 0x362u:
            result = 265i64;
            break;
          case 0x9Eu:
            result = 266i64;
            break;
          case 0xA1u:
          case 0xA3u:
          case 0xA4u:
          case 0x321u:
          case 0x322u:
            result = 267i64;
            break;
          case 0xA2u:
            result = 268i64;
            break;
          case 0xA5u:
          case 0xA6u:
          case 0xA7u:
          case 0xABu:
          case 0xACu:
          case 0xADu:
            result = 269i64;
            break;
          case 0xA8u:
          case 0xA9u:
          case 0xAAu:
          case 0xAEu:
          case 0xAFu:
          case 0xB0u:
            result = 270i64;
            break;
          case 0xB1u:
          case 0xB2u:
          case 0xB3u:
            result = 271i64;
            break;
          case 0xB4u:
          case 0xB5u:
          case 0xB6u:
            result = 272i64;
            break;
          case 0xB7u:
          case 0xB8u:
          case 0xB9u:
          case 0xBDu:
          case 0xBEu:
          case 0xBFu:
            result = 273i64;
            break;
          case 0xBAu:
          case 0xBBu:
          case 0xBCu:
          case 0xC0u:
          case 0xC1u:
          case 0xC2u:
            result = 274i64;
            break;
          case 0xC3u:
          case 0xC5u:
          case 0xC6u:
          case 0xC7u:
          case 0xC9u:
          case 0xCAu:
            result = 275i64;
            break;
          case 0xC4u:
          case 0xC8u:
            result = 276i64;
            break;
          case 0xCBu:
          case 0xCCu:
          case 0xCDu:
          case 0xCEu:
          case 0xCFu:
          case 0xD0u:
          case 0xD1u:
          case 0xD2u:
          case 0xD3u:
          case 0xD4u:
          case 0xD5u:
          case 0xD6u:
            result = 277i64;
            break;
          case 0xD7u:
          case 0xD9u:
          case 0xDAu:
          case 0xDBu:
          case 0xDDu:
          case 0xDEu:
            result = 278i64;
            break;
          case 0xD8u:
          case 0xDCu:
            result = 279i64;
            break;
          case 0xDFu:
          case 0xE0u:
          case 0xE1u:
          case 0xE2u:
          case 0xE3u:
          case 0xE4u:
          case 0xE5u:
          case 0xE6u:
          case 0xE7u:
          case 0xE8u:
          case 0xE9u:
          case 0xEAu:
            result = 280i64;
            break;
          case 0xEBu:
          case 0xEDu:
          case 0xEEu:
            result = 281i64;
            break;
          case 0xECu:
            result = 282i64;
            break;
          case 0xEFu:
          case 0xF1u:
          case 0xF2u:
            result = 283i64;
            break;
          case 0xF0u:
            result = 284i64;
            break;
          case 0xF3u:
          case 0xF4u:
          case 0xF5u:
          case 0xF9u:
          case 0xFAu:
          case 0xFBu:
            result = 285i64;
            break;
          case 0xF6u:
          case 0xF7u:
          case 0xF8u:
          case 0xFCu:
          case 0xFDu:
          case 0xFEu:
            result = 286i64;
            break;
          case 0xFFu:
          case 0x100u:
          case 0x101u:
            result = 287i64;
            break;
          case 0x102u:
          case 0x103u:
          case 0x104u:
            result = 288i64;
            break;
          case 0x105u:
          case 0x106u:
          case 0x107u:
          case 0x10Bu:
          case 0x10Cu:
          case 0x10Du:
            result = 289i64;
            break;
          case 0x108u:
          case 0x109u:
          case 0x10Au:
          case 0x10Eu:
          case 0x10Fu:
          case 0x110u:
            result = 290i64;
            break;
          case 0x111u:
          case 0x113u:
          case 0x114u:
          case 0x115u:
          case 0x117u:
          case 0x118u:
            result = 291i64;
            break;
          case 0x112u:
          case 0x116u:
            result = 292i64;
            break;
          case 0x119u:
          case 0x11Au:
          case 0x11Bu:
          case 0x11Cu:
          case 0x11Du:
          case 0x11Eu:
          case 0x11Fu:
          case 0x120u:
          case 0x121u:
          case 0x122u:
          case 0x123u:
          case 0x124u:
            result = 293i64;
            break;
          case 0x125u:
          case 0x127u:
          case 0x128u:
          case 0x129u:
          case 0x12Bu:
          case 0x12Cu:
            result = 294i64;
            break;
          case 0x126u:
          case 0x12Au:
            result = 295i64;
            break;
          case 0x12Du:
          case 0x12Eu:
          case 0x12Fu:
          case 0x130u:
          case 0x131u:
          case 0x132u:
          case 0x133u:
          case 0x134u:
          case 0x135u:
          case 0x136u:
          case 0x137u:
          case 0x138u:
            result = 296i64;
            break;
          case 0x139u:
          case 0x13Bu:
          case 0x13Cu:
            result = 297i64;
            break;
          case 0x13Au:
            result = 298i64;
            break;
          case 0x13Du:
          case 0x13Fu:
          case 0x140u:
            result = 299i64;
            break;
          case 0x13Eu:
            result = 300i64;
            break;
          case 0x141u:
          case 0x142u:
          case 0x143u:
          case 0x147u:
          case 0x148u:
          case 0x149u:
            result = 301i64;
            break;
          case 0x144u:
          case 0x145u:
          case 0x146u:
          case 0x14Au:
          case 0x14Bu:
          case 0x14Cu:
            result = 302i64;
            break;
          case 0x14Du:
          case 0x14Eu:
          case 0x14Fu:
            result = 303i64;
            break;
          case 0x150u:
          case 0x151u:
          case 0x152u:
            result = 304i64;
            break;
          case 0x153u:
          case 0x154u:
          case 0x155u:
          case 0x159u:
          case 0x15Au:
          case 0x15Bu:
            result = 305i64;
            break;
          case 0x156u:
          case 0x157u:
          case 0x158u:
          case 0x15Cu:
          case 0x15Du:
          case 0x15Eu:
            result = 306i64;
            break;
          case 0x15Fu:
          case 0x161u:
          case 0x162u:
          case 0x163u:
          case 0x165u:
          case 0x166u:
            result = 307i64;
            break;
          case 0x160u:
          case 0x164u:
            result = 308i64;
            break;
          case 0x167u:
          case 0x168u:
          case 0x169u:
          case 0x16Au:
          case 0x16Bu:
          case 0x16Cu:
          case 0x16Du:
          case 0x16Eu:
          case 0x16Fu:
          case 0x170u:
          case 0x171u:
          case 0x172u:
            result = 309i64;
            break;
          case 0x173u:
          case 0x175u:
          case 0x176u:
          case 0x177u:
          case 0x179u:
          case 0x17Au:
            result = 310i64;
            break;
          case 0x174u:
          case 0x178u:
            result = 311i64;
            break;
          case 0x17Bu:
          case 0x17Cu:
          case 0x17Du:
          case 0x17Eu:
          case 0x17Fu:
          case 0x180u:
          case 0x181u:
          case 0x182u:
          case 0x183u:
          case 0x184u:
          case 0x185u:
          case 0x186u:
            result = 312i64;
            break;
          case 0x187u:
          case 0x189u:
          case 0x18Au:
            result = 313i64;
            break;
          case 0x188u:
            result = 314i64;
            break;
          case 0x18Bu:
          case 0x18Du:
          case 0x18Eu:
            result = 315i64;
            break;
          case 0x18Cu:
            result = 316i64;
            break;
          case 0x18Fu:
          case 0x190u:
          case 0x191u:
          case 0x195u:
          case 0x196u:
          case 0x197u:
            result = 317i64;
            break;
          case 0x192u:
          case 0x193u:
          case 0x194u:
          case 0x198u:
          case 0x199u:
          case 0x19Au:
            result = 318i64;
            break;
          case 0x19Bu:
          case 0x19Cu:
          case 0x19Du:
            result = 319i64;
            break;
          case 0x19Eu:
          case 0x19Fu:
          case 0x1A0u:
            result = 320i64;
            break;
          case 0x1A1u:
          case 0x1A2u:
          case 0x1A3u:
          case 0x1A7u:
          case 0x1A8u:
          case 0x1A9u:
            result = 321i64;
            break;
          case 0x1A4u:
          case 0x1A5u:
          case 0x1A6u:
          case 0x1AAu:
          case 0x1ABu:
          case 0x1ACu:
            result = 322i64;
            break;
          case 0x1ADu:
          case 0x1AFu:
          case 0x1B0u:
          case 0x1B1u:
          case 0x1B3u:
          case 0x1B4u:
            result = 323i64;
            break;
          case 0x1AEu:
          case 0x1B2u:
            result = 324i64;
            break;
          case 0x1B5u:
          case 0x1B6u:
          case 0x1B7u:
          case 0x1B8u:
          case 0x1B9u:
          case 0x1BAu:
          case 0x1BBu:
          case 0x1BCu:
          case 0x1BDu:
          case 0x1BEu:
          case 0x1BFu:
          case 0x1C0u:
            result = 325i64;
            break;
          case 0x1C1u:
          case 0x1C3u:
          case 0x1C4u:
          case 0x1C5u:
          case 0x1C7u:
          case 0x1C8u:
            result = 326i64;
            break;
          case 0x1C2u:
          case 0x1C6u:
            result = 327i64;
            break;
          case 0x1C9u:
          case 0x1CAu:
          case 0x1CBu:
          case 0x1CCu:
          case 0x1CDu:
          case 0x1CEu:
          case 0x1CFu:
          case 0x1D0u:
          case 0x1D1u:
          case 0x1D2u:
          case 0x1D3u:
          case 0x1D4u:
            result = 328i64;
            break;
          case 0x1D5u:
          case 0x1D6u:
          case 0x1D7u:
            result = 329i64;
            break;
          case 0x1D8u:
          case 0x1DAu:
          case 0x1DBu:
            result = 330i64;
            break;
          case 0x1D9u:
            result = 331i64;
            break;
          case 0x1DCu:
          case 0x1DEu:
          case 0x1DFu:
          case 0x1E3u:
          case 0x1E5u:
          case 0x1E6u:
            result = 332i64;
            break;
          case 0x1DDu:
          case 0x1E4u:
            result = 333i64;
            break;
          case 0x1E0u:
          case 0x1E1u:
          case 0x1E2u:
          case 0x1E7u:
          case 0x1E8u:
          case 0x1E9u:
            result = 334i64;
            break;
          case 0x1EAu:
          case 0x1EBu:
          case 0x1ECu:
            result = 335i64;
            break;
          case 0x1EDu:
          case 0x1EFu:
          case 0x1F0u:
            result = 336i64;
            break;
          case 0x1EEu:
            result = 337i64;
            break;
          case 0x1F1u:
          case 0x1F3u:
          case 0x1F4u:
          case 0x1F8u:
          case 0x1FAu:
          case 0x1FBu:
            result = 338i64;
            break;
          case 0x1F2u:
          case 0x1F9u:
            result = 339i64;
            break;
          case 0x1F5u:
          case 0x1F6u:
          case 0x1F7u:
          case 0x1FCu:
          case 0x1FDu:
          case 0x1FEu:
            result = 340i64;
            break;
          case 0x1FFu:
          case 0x200u:
          case 0x201u:
            result = 341i64;
            break;
          case 0x202u:
          case 0x204u:
          case 0x205u:
            result = 342i64;
            break;
          case 0x203u:
            result = 343i64;
            break;
          case 0x206u:
          case 0x208u:
          case 0x209u:
          case 0x20Du:
          case 0x20Fu:
          case 0x210u:
            result = 344i64;
            break;
          case 0x207u:
          case 0x20Eu:
            result = 345i64;
            break;
          case 0x20Au:
          case 0x20Bu:
          case 0x20Cu:
          case 0x211u:
          case 0x212u:
          case 0x213u:
            result = 346i64;
            break;
          case 0x214u:
          case 0x215u:
          case 0x216u:
            result = 347i64;
            break;
          case 0x217u:
          case 0x219u:
          case 0x21Au:
            result = 348i64;
            break;
          case 0x218u:
            result = 349i64;
            break;
          case 0x21Bu:
          case 0x21Du:
          case 0x21Eu:
          case 0x222u:
          case 0x224u:
          case 0x225u:
            result = 350i64;
            break;
          case 0x21Cu:
          case 0x223u:
            result = 351i64;
            break;
          case 0x21Fu:
          case 0x220u:
          case 0x221u:
          case 0x226u:
          case 0x227u:
          case 0x228u:
            result = 352i64;
            break;
          case 0x229u:
          case 0x22Au:
          case 0x22Bu:
            result = 353i64;
            break;
          case 0x22Cu:
          case 0x22Eu:
          case 0x22Fu:
            result = 354i64;
            break;
          case 0x22Du:
            result = 355i64;
            break;
          case 0x230u:
          case 0x232u:
          case 0x233u:
          case 0x237u:
          case 0x239u:
          case 0x23Au:
            result = 356i64;
            break;
          case 0x231u:
          case 0x238u:
            result = 357i64;
            break;
          case 0x234u:
          case 0x235u:
          case 0x236u:
          case 0x23Bu:
          case 0x23Cu:
          case 0x23Du:
            result = 358i64;
            break;
          case 0x23Eu:
          case 0x23Fu:
          case 0x240u:
            result = 359i64;
            break;
          case 0x241u:
          case 0x243u:
          case 0x244u:
            result = 360i64;
            break;
          case 0x242u:
            result = 361i64;
            break;
          case 0x245u:
          case 0x247u:
          case 0x248u:
          case 0x24Cu:
          case 0x24Eu:
          case 0x24Fu:
            result = 362i64;
            break;
          case 0x246u:
          case 0x24Du:
            result = 363i64;
            break;
          case 0x249u:
          case 0x24Au:
          case 0x24Bu:
          case 0x250u:
          case 0x251u:
          case 0x252u:
            result = 364i64;
            break;
          case 0x253u:
          case 0x255u:
          case 0x261u:
          case 0x263u:
          case 0x264u:
            result = 365i64;
            break;
          case 0x254u:
          case 0x262u:
            result = 366i64;
            break;
          case 0x256u:
          case 0x258u:
          case 0x265u:
          case 0x267u:
          case 0x268u:
            result = 367i64;
            break;
          case 0x257u:
          case 0x266u:
            result = 368i64;
            break;
          case 0x259u:
          case 0x25Au:
          case 0x25Du:
          case 0x25Eu:
          case 0x269u:
          case 0x26Au:
          case 0x26Bu:
          case 0x26Fu:
          case 0x270u:
          case 0x271u:
            result = 369i64;
            break;
          case 0x25Bu:
          case 0x25Cu:
          case 0x25Fu:
          case 0x260u:
          case 0x26Cu:
          case 0x26Du:
          case 0x26Eu:
          case 0x272u:
          case 0x273u:
          case 0x274u:
            result = 370i64;
            break;
          case 0x275u:
          case 0x277u:
          case 0x283u:
          case 0x285u:
          case 0x286u:
            result = 371i64;
            break;
          case 0x276u:
          case 0x284u:
            result = 372i64;
            break;
          case 0x278u:
          case 0x27Au:
          case 0x287u:
          case 0x289u:
          case 0x28Au:
            result = 373i64;
            break;
          case 0x279u:
          case 0x288u:
            result = 374i64;
            break;
          case 0x27Bu:
          case 0x27Cu:
          case 0x27Fu:
          case 0x280u:
          case 0x28Bu:
          case 0x28Cu:
          case 0x28Du:
          case 0x291u:
          case 0x292u:
          case 0x293u:
            result = 375i64;
            break;
          case 0x27Du:
          case 0x27Eu:
          case 0x281u:
          case 0x282u:
          case 0x28Eu:
          case 0x28Fu:
          case 0x290u:
          case 0x294u:
          case 0x295u:
          case 0x296u:
            result = 376i64;
            break;
          case 0x297u:
          case 0x299u:
          case 0x2A5u:
          case 0x2A7u:
          case 0x2A8u:
            result = 377i64;
            break;
          case 0x298u:
          case 0x2A6u:
            result = 378i64;
            break;
          case 0x29Au:
          case 0x29Cu:
          case 0x2A9u:
          case 0x2ABu:
          case 0x2ACu:
            result = 379i64;
            break;
          case 0x29Bu:
          case 0x2AAu:
            result = 380i64;
            break;
          case 0x29Du:
          case 0x29Eu:
          case 0x2A1u:
          case 0x2A2u:
          case 0x2ADu:
          case 0x2AEu:
          case 0x2AFu:
          case 0x2B3u:
          case 0x2B4u:
          case 0x2B5u:
            result = 381i64;
            break;
          case 0x29Fu:
          case 0x2A0u:
          case 0x2A3u:
          case 0x2A4u:
          case 0x2B0u:
          case 0x2B1u:
          case 0x2B2u:
          case 0x2B6u:
          case 0x2B7u:
          case 0x2B8u:
            result = 382i64;
            break;
          case 0x2B9u:
          case 0x2BBu:
          case 0x2C7u:
          case 0x2C9u:
          case 0x2CAu:
            result = 383i64;
            break;
          case 0x2BAu:
          case 0x2C8u:
            result = 384i64;
            break;
          case 0x2BCu:
          case 0x2BEu:
          case 0x2CBu:
          case 0x2CDu:
          case 0x2CEu:
            result = 385i64;
            break;
          case 0x2BDu:
          case 0x2CCu:
            result = 386i64;
            break;
          case 0x2BFu:
          case 0x2C0u:
          case 0x2C3u:
          case 0x2C4u:
          case 0x2CFu:
          case 0x2D0u:
          case 0x2D1u:
          case 0x2D5u:
          case 0x2D6u:
          case 0x2D7u:
            result = 387i64;
            break;
          case 0x2C1u:
          case 0x2C2u:
          case 0x2C5u:
          case 0x2C6u:
          case 0x2D2u:
          case 0x2D3u:
          case 0x2D4u:
          case 0x2D8u:
          case 0x2D9u:
          case 0x2DAu:
            result = 388i64;
            break;
          case 0x2DBu:
          case 0x2DDu:
          case 0x2E9u:
          case 0x2EBu:
          case 0x2ECu:
            result = 389i64;
            break;
          case 0x2DCu:
          case 0x2EAu:
            result = 390i64;
            break;
          case 0x2DEu:
          case 0x2E0u:
          case 0x2EDu:
          case 0x2EFu:
          case 0x2F0u:
            result = 391i64;
            break;
          case 0x2DFu:
          case 0x2EEu:
            result = 392i64;
            break;
          case 0x2E1u:
          case 0x2E2u:
          case 0x2E5u:
          case 0x2E6u:
          case 0x2F1u:
          case 0x2F2u:
          case 0x2F3u:
          case 0x2F7u:
          case 0x2F8u:
          case 0x2F9u:
            result = 393i64;
            break;
          case 0x2E3u:
          case 0x2E4u:
          case 0x2E7u:
          case 0x2E8u:
          case 0x2F4u:
          case 0x2F5u:
          case 0x2F6u:
          case 0x2FAu:
          case 0x2FBu:
          case 0x2FCu:
            result = 394i64;
            break;
          case 0x2FDu:
          case 0x2FFu:
          case 0x30Bu:
          case 0x30Du:
          case 0x30Eu:
            result = 395i64;
            break;
          case 0x2FEu:
          case 0x30Cu:
            result = 396i64;
            break;
          case 0x300u:
          case 0x302u:
          case 0x30Fu:
          case 0x311u:
          case 0x312u:
            result = 397i64;
            break;
          case 0x301u:
          case 0x310u:
            result = 398i64;
            break;
          case 0x303u:
          case 0x304u:
          case 0x307u:
          case 0x308u:
          case 0x313u:
          case 0x314u:
          case 0x315u:
          case 0x319u:
          case 0x31Au:
          case 0x31Bu:
            result = 399i64;
            break;
          case 0x305u:
          case 0x306u:
          case 0x309u:
          case 0x30Au:
          case 0x316u:
          case 0x317u:
          case 0x318u:
          case 0x31Cu:
          case 0x31Du:
          case 0x31Eu:
            result = 400i64;
            break;
          case 0x323u:
          case 0x324u:
          case 0x325u:
          case 0x326u:
          case 0x327u:
          case 0x328u:
          case 0x329u:
          case 0x32Au:
          case 0x32Bu:
          case 0x32Cu:
          case 0x32Du:
          case 0x32Eu:
          case 0x32Fu:
          case 0x330u:
          case 0x331u:
          case 0x332u:
          case 0x333u:
          case 0x334u:
          case 0x335u:
          case 0x336u:
          case 0x337u:
          case 0x338u:
          case 0x339u:
          case 0x33Au:
          case 0x33Bu:
          case 0x33Cu:
          case 0x33Du:
          case 0x33Eu:
          case 0x33Fu:
          case 0x340u:
          case 0x341u:
          case 0x342u:
          case 0x343u:
          case 0x344u:
          case 0x345u:
          case 0x346u:
          case 0x347u:
          case 0x348u:
          case 0x349u:
          case 0x34Au:
          case 0x34Bu:
          case 0x34Cu:
          case 0x34Du:
          case 0x34Eu:
          case 0x34Fu:
          case 0x350u:
          case 0x351u:
          case 0x352u:
          case 0x353u:
          case 0x354u:
          case 0x355u:
          case 0x356u:
            result = 401i64;
            break;
          case 0x35Au:
          case 0x35Bu:
          case 0x35Cu:
          case 0x360u:
          case 0x361u:
          case 0x363u:
          case 0x364u:
          case 0x365u:
          case 0x366u:
          case 0x367u:
            result = 402i64;
            break;
          case 0x35Du:
          case 0x35Eu:
          case 0x35Fu:
            result = 403i64;
            break;
          case 0x368u:
            result = 404i64;
            break;
          default:
            return 0i64;
        }
      }
      else
      {
        return 0i64;
      }
    }
    else
    {
      switch ( 0x40000000u )
      {
        case 0u:
        case 2u:
        case 3u:
          result = 117i64;
          break;
        case 1u:
          result = 118i64;
          break;
        case 4u:
        case 6u:
        case 7u:
          result = 119i64;
          break;
        case 5u:
          result = 120i64;
          break;
        case 8u:
        case 9u:
        case 0xAu:
        case 0xEu:
        case 0xFu:
        case 0x10u:
          result = 121i64;
          break;
        case 0xBu:
        case 0xCu:
        case 0xDu:
        case 0x11u:
        case 0x12u:
        case 0x13u:
          result = 122i64;
          break;
        case 0x15u:
        case 0x16u:
        case 0x17u:
          result = 123i64;
          break;
        case 0x18u:
        case 0x19u:
        case 0x1Au:
          result = 124i64;
          break;
        case 0x1Bu:
        case 0x1Cu:
        case 0x1Du:
        case 0x21u:
        case 0x22u:
        case 0x23u:
          result = 125i64;
          break;
        case 0x1Eu:
        case 0x1Fu:
        case 0x20u:
        case 0x24u:
        case 0x25u:
        case 0x26u:
          result = 126i64;
          break;
        case 0x27u:
        case 0x29u:
        case 0x2Au:
        case 0x2Bu:
        case 0x2Du:
        case 0x2Eu:
          result = 127i64;
          break;
        case 0x28u:
        case 0x2Cu:
          result = 128i64;
          break;
        case 0x2Fu:
        case 0x30u:
        case 0x31u:
        case 0x32u:
        case 0x33u:
        case 0x34u:
        case 0x35u:
        case 0x36u:
        case 0x37u:
        case 0x38u:
        case 0x39u:
        case 0x3Au:
          result = 129i64;
          break;
        case 0x3Bu:
        case 0x3Du:
        case 0x3Eu:
        case 0x3Fu:
        case 0x41u:
        case 0x42u:
          result = 130i64;
          break;
        case 0x3Cu:
        case 0x40u:
          result = 131i64;
          break;
        case 0x43u:
        case 0x44u:
        case 0x45u:
        case 0x46u:
        case 0x47u:
        case 0x48u:
        case 0x49u:
        case 0x4Au:
        case 0x4Bu:
        case 0x4Cu:
        case 0x4Du:
        case 0x4Eu:
          result = 132i64;
          break;
        case 0x4Fu:
        case 0x51u:
        case 0x52u:
          result = 133i64;
          break;
        case 0x50u:
          result = 134i64;
          break;
        case 0x53u:
        case 0x55u:
        case 0x56u:
          result = 135i64;
          break;
        case 0x54u:
          result = 136i64;
          break;
        case 0x57u:
        case 0x58u:
        case 0x59u:
        case 0x5Du:
        case 0x5Eu:
        case 0x5Fu:
          result = 137i64;
          break;
        case 0x5Au:
        case 0x5Bu:
        case 0x5Cu:
        case 0x60u:
        case 0x61u:
        case 0x62u:
          result = 138i64;
          break;
        case 0x63u:
        case 0x64u:
        case 0x65u:
          result = 139i64;
          break;
        case 0x66u:
        case 0x67u:
        case 0x68u:
          result = 140i64;
          break;
        case 0x69u:
        case 0x6Au:
        case 0x6Bu:
        case 0x6Fu:
        case 0x70u:
        case 0x71u:
          result = 141i64;
          break;
        case 0x6Cu:
        case 0x6Du:
        case 0x6Eu:
        case 0x72u:
        case 0x73u:
        case 0x74u:
          result = 142i64;
          break;
        case 0x75u:
        case 0x77u:
        case 0x78u:
        case 0x79u:
        case 0x7Bu:
        case 0x7Cu:
          result = 143i64;
          break;
        case 0x76u:
        case 0x7Au:
          result = 144i64;
          break;
        case 0x7Du:
        case 0x7Eu:
        case 0x7Fu:
        case 0x80u:
        case 0x81u:
        case 0x82u:
        case 0x83u:
        case 0x84u:
        case 0x85u:
        case 0x86u:
        case 0x87u:
        case 0x88u:
          result = 145i64;
          break;
        case 0x89u:
        case 0x8Bu:
        case 0x8Cu:
        case 0x8Du:
        case 0x8Fu:
        case 0x90u:
          result = 146i64;
          break;
        case 0x8Au:
        case 0x8Eu:
          result = 147i64;
          break;
        case 0x91u:
        case 0x92u:
        case 0x93u:
        case 0x94u:
        case 0x95u:
        case 0x96u:
        case 0x97u:
        case 0x98u:
        case 0x99u:
        case 0x9Au:
        case 0x9Bu:
        case 0x9Cu:
          result = 148i64;
          break;
        case 0x9Du:
        case 0x9Fu:
        case 0xA0u:
        case 0x215u:
        case 0x216u:
        case 0x24Du:
        case 0x24Eu:
        case 0x24Fu:
        case 0x258u:
          result = 149i64;
          break;
        case 0x9Eu:
          result = 150i64;
          break;
        case 0xA1u:
        case 0xA3u:
        case 0xA4u:
        case 0x217u:
        case 0x218u:
          result = 151i64;
          break;
        case 0xA2u:
          result = 152i64;
          break;
        case 0xA5u:
        case 0xA6u:
        case 0xA7u:
        case 0xABu:
        case 0xACu:
        case 0xADu:
          result = 153i64;
          break;
        case 0xA8u:
        case 0xA9u:
        case 0xAAu:
        case 0xAEu:
        case 0xAFu:
        case 0xB0u:
          result = 154i64;
          break;
        case 0xB1u:
        case 0xB2u:
        case 0xB3u:
          result = 155i64;
          break;
        case 0xB4u:
        case 0xB5u:
        case 0xB6u:
          result = 156i64;
          break;
        case 0xB7u:
        case 0xB8u:
        case 0xB9u:
        case 0xBDu:
        case 0xBEu:
        case 0xBFu:
          result = 157i64;
          break;
        case 0xBAu:
        case 0xBBu:
        case 0xBCu:
        case 0xC0u:
        case 0xC1u:
        case 0xC2u:
          result = 158i64;
          break;
        case 0xC3u:
        case 0xC5u:
        case 0xC6u:
        case 0xC7u:
        case 0xC9u:
        case 0xCAu:
          result = 159i64;
          break;
        case 0xC4u:
        case 0xC8u:
          result = 160i64;
          break;
        case 0xCBu:
        case 0xCCu:
        case 0xCDu:
        case 0xCEu:
        case 0xCFu:
        case 0xD0u:
        case 0xD1u:
        case 0xD2u:
        case 0xD3u:
        case 0xD4u:
        case 0xD5u:
        case 0xD6u:
          result = 161i64;
          break;
        case 0xD7u:
        case 0xD9u:
        case 0xDAu:
        case 0xDBu:
        case 0xDDu:
        case 0xDEu:
          result = 162i64;
          break;
        case 0xD8u:
        case 0xDCu:
          result = 163i64;
          break;
        case 0xDFu:
        case 0xE0u:
        case 0xE1u:
        case 0xE2u:
        case 0xE3u:
        case 0xE4u:
        case 0xE5u:
        case 0xE6u:
        case 0xE7u:
        case 0xE8u:
        case 0xE9u:
        case 0xEAu:
          result = 164i64;
          break;
        case 0xEBu:
        case 0xEDu:
        case 0xEEu:
          result = 165i64;
          break;
        case 0xECu:
          result = 166i64;
          break;
        case 0xEFu:
        case 0xF1u:
        case 0xF2u:
          result = 167i64;
          break;
        case 0xF0u:
          result = 168i64;
          break;
        case 0xF3u:
        case 0xF4u:
        case 0xF5u:
        case 0xF9u:
        case 0xFAu:
        case 0xFBu:
          result = 169i64;
          break;
        case 0xF6u:
        case 0xF7u:
        case 0xF8u:
        case 0xFCu:
        case 0xFDu:
        case 0xFEu:
          result = 170i64;
          break;
        case 0xFFu:
        case 0x100u:
        case 0x101u:
          result = 171i64;
          break;
        case 0x102u:
        case 0x103u:
        case 0x104u:
          result = 172i64;
          break;
        case 0x105u:
        case 0x106u:
        case 0x107u:
        case 0x10Bu:
        case 0x10Cu:
        case 0x10Du:
          result = 173i64;
          break;
        case 0x108u:
        case 0x109u:
        case 0x10Au:
        case 0x10Eu:
        case 0x10Fu:
        case 0x110u:
          result = 174i64;
          break;
        case 0x111u:
        case 0x113u:
        case 0x114u:
        case 0x115u:
        case 0x117u:
        case 0x118u:
          result = 175i64;
          break;
        case 0x112u:
        case 0x116u:
          result = 176i64;
          break;
        case 0x119u:
        case 0x11Au:
        case 0x11Bu:
        case 0x11Cu:
        case 0x11Du:
        case 0x11Eu:
        case 0x11Fu:
        case 0x120u:
        case 0x121u:
        case 0x122u:
        case 0x123u:
        case 0x124u:
          result = 177i64;
          break;
        case 0x125u:
        case 0x127u:
        case 0x128u:
        case 0x129u:
        case 0x12Bu:
        case 0x12Cu:
          result = 178i64;
          break;
        case 0x126u:
        case 0x12Au:
          result = 179i64;
          break;
        case 0x12Du:
        case 0x12Eu:
        case 0x12Fu:
        case 0x130u:
        case 0x131u:
        case 0x132u:
        case 0x133u:
        case 0x134u:
        case 0x135u:
        case 0x136u:
        case 0x137u:
        case 0x138u:
          result = 180i64;
          break;
        case 0x139u:
        case 0x13Au:
        case 0x13Bu:
          result = 181i64;
          break;
        case 0x13Cu:
        case 0x13Eu:
        case 0x13Fu:
          result = 182i64;
          break;
        case 0x13Du:
          result = 183i64;
          break;
        case 0x140u:
        case 0x142u:
        case 0x143u:
        case 0x147u:
        case 0x149u:
        case 0x14Au:
          result = 184i64;
          break;
        case 0x141u:
        case 0x148u:
          result = 185i64;
          break;
        case 0x144u:
        case 0x145u:
        case 0x146u:
        case 0x14Bu:
        case 0x14Cu:
        case 0x14Du:
          result = 186i64;
          break;
        case 0x14Eu:
        case 0x14Fu:
        case 0x150u:
          result = 187i64;
          break;
        case 0x151u:
        case 0x153u:
        case 0x154u:
          result = 188i64;
          break;
        case 0x152u:
          result = 189i64;
          break;
        case 0x155u:
        case 0x157u:
        case 0x158u:
        case 0x15Cu:
        case 0x15Eu:
        case 0x15Fu:
          result = 190i64;
          break;
        case 0x156u:
        case 0x15Du:
          result = 191i64;
          break;
        case 0x159u:
        case 0x15Au:
        case 0x15Bu:
        case 0x160u:
        case 0x161u:
        case 0x162u:
          result = 192i64;
          break;
        case 0x163u:
        case 0x164u:
        case 0x165u:
          result = 193i64;
          break;
        case 0x166u:
        case 0x168u:
        case 0x169u:
          result = 194i64;
          break;
        case 0x167u:
          result = 195i64;
          break;
        case 0x16Au:
        case 0x16Cu:
        case 0x16Du:
        case 0x171u:
        case 0x173u:
        case 0x174u:
          result = 196i64;
          break;
        case 0x16Bu:
        case 0x172u:
          result = 197i64;
          break;
        case 0x16Eu:
        case 0x16Fu:
        case 0x170u:
        case 0x175u:
        case 0x176u:
        case 0x177u:
          result = 198i64;
          break;
        case 0x178u:
        case 0x179u:
        case 0x17Au:
          result = 199i64;
          break;
        case 0x17Bu:
        case 0x17Du:
        case 0x17Eu:
          result = 200i64;
          break;
        case 0x17Cu:
          result = 201i64;
          break;
        case 0x17Fu:
        case 0x181u:
        case 0x182u:
        case 0x186u:
        case 0x188u:
        case 0x189u:
          result = 202i64;
          break;
        case 0x180u:
        case 0x187u:
          result = 203i64;
          break;
        case 0x183u:
        case 0x184u:
        case 0x185u:
        case 0x18Au:
        case 0x18Bu:
        case 0x18Cu:
          result = 204i64;
          break;
        case 0x18Du:
        case 0x18Fu:
        case 0x19Bu:
        case 0x19Du:
        case 0x19Eu:
          result = 205i64;
          break;
        case 0x18Eu:
        case 0x19Cu:
          result = 206i64;
          break;
        case 0x190u:
        case 0x192u:
        case 0x19Fu:
        case 0x1A1u:
        case 0x1A2u:
          result = 207i64;
          break;
        case 0x191u:
        case 0x1A0u:
          result = 208i64;
          break;
        case 0x193u:
        case 0x194u:
        case 0x197u:
        case 0x198u:
        case 0x1A3u:
        case 0x1A4u:
        case 0x1A5u:
        case 0x1A9u:
        case 0x1AAu:
        case 0x1ABu:
          result = 209i64;
          break;
        case 0x195u:
        case 0x196u:
        case 0x199u:
        case 0x19Au:
        case 0x1A6u:
        case 0x1A7u:
        case 0x1A8u:
        case 0x1ACu:
        case 0x1ADu:
        case 0x1AEu:
          result = 210i64;
          break;
        case 0x1AFu:
        case 0x1B1u:
        case 0x1BDu:
        case 0x1BFu:
        case 0x1C0u:
          result = 211i64;
          break;
        case 0x1B0u:
        case 0x1BEu:
          result = 212i64;
          break;
        case 0x1B2u:
        case 0x1B4u:
        case 0x1C1u:
        case 0x1C3u:
        case 0x1C4u:
          result = 213i64;
          break;
        case 0x1B3u:
        case 0x1C2u:
          result = 214i64;
          break;
        case 0x1B5u:
        case 0x1B6u:
        case 0x1B9u:
        case 0x1BAu:
        case 0x1C5u:
        case 0x1C6u:
        case 0x1C7u:
        case 0x1CBu:
        case 0x1CCu:
        case 0x1CDu:
          result = 215i64;
          break;
        case 0x1B7u:
        case 0x1B8u:
        case 0x1BBu:
        case 0x1BCu:
        case 0x1C8u:
        case 0x1C9u:
        case 0x1CAu:
        case 0x1CEu:
        case 0x1CFu:
        case 0x1D0u:
          result = 216i64;
          break;
        case 0x1D1u:
        case 0x1D3u:
        case 0x1DFu:
        case 0x1E1u:
        case 0x1E2u:
          result = 217i64;
          break;
        case 0x1D2u:
        case 0x1E0u:
          result = 218i64;
          break;
        case 0x1D4u:
        case 0x1D6u:
        case 0x1E3u:
        case 0x1E5u:
        case 0x1E6u:
          result = 219i64;
          break;
        case 0x1D5u:
        case 0x1E4u:
          result = 220i64;
          break;
        case 0x1D7u:
        case 0x1D8u:
        case 0x1DBu:
        case 0x1DCu:
        case 0x1E7u:
        case 0x1E8u:
        case 0x1E9u:
        case 0x1EDu:
        case 0x1EEu:
        case 0x1EFu:
          result = 221i64;
          break;
        case 0x1D9u:
        case 0x1DAu:
        case 0x1DDu:
        case 0x1DEu:
        case 0x1EAu:
        case 0x1EBu:
        case 0x1ECu:
        case 0x1F0u:
        case 0x1F1u:
        case 0x1F2u:
          result = 222i64;
          break;
        case 0x1F3u:
        case 0x1F5u:
        case 0x201u:
        case 0x203u:
        case 0x204u:
          result = 223i64;
          break;
        case 0x1F4u:
        case 0x202u:
          result = 224i64;
          break;
        case 0x1F6u:
        case 0x1F8u:
        case 0x205u:
        case 0x207u:
        case 0x208u:
          result = 225i64;
          break;
        case 0x1F7u:
        case 0x206u:
          result = 226i64;
          break;
        case 0x1F9u:
        case 0x1FAu:
        case 0x1FDu:
        case 0x1FEu:
        case 0x209u:
        case 0x20Au:
        case 0x20Bu:
        case 0x20Fu:
        case 0x210u:
        case 0x211u:
          result = 227i64;
          break;
        case 0x1FBu:
        case 0x1FCu:
        case 0x1FFu:
        case 0x200u:
        case 0x20Cu:
        case 0x20Du:
        case 0x20Eu:
        case 0x212u:
        case 0x213u:
        case 0x214u:
          result = 228i64;
          break;
        case 0x219u:
        case 0x21Au:
        case 0x21Bu:
        case 0x21Cu:
        case 0x21Du:
        case 0x21Eu:
        case 0x21Fu:
        case 0x220u:
        case 0x221u:
        case 0x222u:
        case 0x223u:
        case 0x224u:
        case 0x225u:
        case 0x226u:
        case 0x227u:
        case 0x228u:
        case 0x229u:
        case 0x22Au:
        case 0x22Bu:
        case 0x22Cu:
        case 0x22Du:
        case 0x22Eu:
        case 0x22Fu:
        case 0x230u:
        case 0x231u:
        case 0x232u:
        case 0x233u:
        case 0x234u:
        case 0x235u:
        case 0x236u:
        case 0x237u:
        case 0x238u:
        case 0x239u:
        case 0x23Au:
        case 0x23Bu:
        case 0x23Cu:
        case 0x23Du:
        case 0x23Eu:
        case 0x23Fu:
        case 0x240u:
        case 0x241u:
        case 0x242u:
        case 0x243u:
        case 0x244u:
        case 0x245u:
        case 0x246u:
        case 0x247u:
        case 0x248u:
        case 0x249u:
        case 0x24Au:
        case 0x24Bu:
        case 0x24Cu:
          result = 229i64;
          break;
        case 0x250u:
        case 0x251u:
        case 0x252u:
        case 0x256u:
        case 0x257u:
        case 0x259u:
        case 0x25Au:
        case 0x25Bu:
        case 0x25Cu:
        case 0x25Du:
          result = 230i64;
          break;
        case 0x253u:
        case 0x254u:
        case 0x255u:
          result = 231i64;
          break;
        case 0x25Eu:
          result = 232i64;
          break;
        default:
          return 0i64;
      }
    }
  }
  else
  {
    switch ( 0x40000000u )
    {
      case 0u:
      case 2u:
      case 3u:
        result = 1i64;
        break;
      case 1u:
        result = 2i64;
        break;
      case 4u:
      case 6u:
      case 7u:
        result = 3i64;
        break;
      case 5u:
        result = 4i64;
        break;
      case 8u:
      case 9u:
      case 0xAu:
      case 0xEu:
      case 0xFu:
      case 0x10u:
        result = 5i64;
        break;
      case 0xBu:
      case 0xCu:
      case 0xDu:
      case 0x11u:
      case 0x12u:
      case 0x13u:
        result = 6i64;
        break;
      case 0x15u:
      case 0x16u:
      case 0x17u:
        result = 7i64;
        break;
      case 0x18u:
      case 0x19u:
      case 0x1Au:
        result = 8i64;
        break;
      case 0x1Bu:
      case 0x1Cu:
      case 0x1Du:
      case 0x21u:
      case 0x22u:
      case 0x23u:
        result = 9i64;
        break;
      case 0x1Eu:
      case 0x1Fu:
      case 0x20u:
      case 0x24u:
      case 0x25u:
      case 0x26u:
        result = 10i64;
        break;
      case 0x27u:
      case 0x29u:
      case 0x2Au:
      case 0x2Bu:
      case 0x2Du:
      case 0x2Eu:
        result = 11i64;
        break;
      case 0x28u:
      case 0x2Cu:
        result = 12i64;
        break;
      case 0x2Fu:
      case 0x30u:
      case 0x31u:
      case 0x32u:
      case 0x33u:
      case 0x34u:
      case 0x35u:
      case 0x36u:
      case 0x37u:
      case 0x38u:
      case 0x39u:
      case 0x3Au:
        result = 13i64;
        break;
      case 0x3Bu:
      case 0x3Du:
      case 0x3Eu:
      case 0x3Fu:
      case 0x41u:
      case 0x42u:
        result = 14i64;
        break;
      case 0x3Cu:
      case 0x40u:
        result = 15i64;
        break;
      case 0x43u:
      case 0x44u:
      case 0x45u:
      case 0x46u:
      case 0x47u:
      case 0x48u:
      case 0x49u:
      case 0x4Au:
      case 0x4Bu:
      case 0x4Cu:
      case 0x4Du:
      case 0x4Eu:
        result = 16i64;
        break;
      case 0x4Fu:
      case 0x51u:
      case 0x52u:
        result = 17i64;
        break;
      case 0x50u:
        result = 18i64;
        break;
      case 0x53u:
      case 0x55u:
      case 0x56u:
        result = 19i64;
        break;
      case 0x54u:
        result = 20i64;
        break;
      case 0x57u:
      case 0x58u:
      case 0x59u:
      case 0x5Du:
      case 0x5Eu:
      case 0x5Fu:
        result = 21i64;
        break;
      case 0x5Au:
      case 0x5Bu:
      case 0x5Cu:
      case 0x60u:
      case 0x61u:
      case 0x62u:
        result = 22i64;
        break;
      case 0x63u:
      case 0x64u:
      case 0x65u:
        result = 23i64;
        break;
      case 0x66u:
      case 0x67u:
      case 0x68u:
        result = 24i64;
        break;
      case 0x69u:
      case 0x6Au:
      case 0x6Bu:
      case 0x6Fu:
      case 0x70u:
      case 0x71u:
        result = 25i64;
        break;
      case 0x6Cu:
      case 0x6Du:
      case 0x6Eu:
      case 0x72u:
      case 0x73u:
      case 0x74u:
        result = 26i64;
        break;
      case 0x75u:
      case 0x77u:
      case 0x78u:
      case 0x79u:
      case 0x7Bu:
      case 0x7Cu:
        result = 27i64;
        break;
      case 0x76u:
      case 0x7Au:
        result = 28i64;
        break;
      case 0x7Du:
      case 0x7Eu:
      case 0x7Fu:
      case 0x80u:
      case 0x81u:
      case 0x82u:
      case 0x83u:
      case 0x84u:
      case 0x85u:
      case 0x86u:
      case 0x87u:
      case 0x88u:
        result = 29i64;
        break;
      case 0x89u:
      case 0x8Bu:
      case 0x8Cu:
      case 0x8Du:
      case 0x8Fu:
      case 0x90u:
        result = 30i64;
        break;
      case 0x8Au:
      case 0x8Eu:
        result = 31i64;
        break;
      case 0x91u:
      case 0x92u:
      case 0x93u:
      case 0x94u:
      case 0x95u:
      case 0x96u:
      case 0x97u:
      case 0x98u:
      case 0x99u:
      case 0x9Au:
      case 0x9Bu:
      case 0x9Cu:
        result = 32i64;
        break;
      case 0x9Du:
      case 0x9Fu:
      case 0xA0u:
      case 0x215u:
      case 0x216u:
      case 0x24Du:
      case 0x24Eu:
      case 0x24Fu:
      case 0x258u:
        result = 33i64;
        break;
      case 0x9Eu:
        result = 34i64;
        break;
      case 0xA1u:
      case 0xA3u:
      case 0xA4u:
      case 0x217u:
      case 0x218u:
        result = 35i64;
        break;
      case 0xA2u:
        result = 36i64;
        break;
      case 0xA5u:
      case 0xA6u:
      case 0xA7u:
      case 0xABu:
      case 0xACu:
      case 0xADu:
        result = 37i64;
        break;
      case 0xA8u:
      case 0xA9u:
      case 0xAAu:
      case 0xAEu:
      case 0xAFu:
      case 0xB0u:
        result = 38i64;
        break;
      case 0xB1u:
      case 0xB2u:
      case 0xB3u:
        result = 39i64;
        break;
      case 0xB4u:
      case 0xB5u:
      case 0xB6u:
        result = 40i64;
        break;
      case 0xB7u:
      case 0xB8u:
      case 0xB9u:
      case 0xBDu:
      case 0xBEu:
      case 0xBFu:
        result = 41i64;
        break;
      case 0xBAu:
      case 0xBBu:
      case 0xBCu:
      case 0xC0u:
      case 0xC1u:
      case 0xC2u:
        result = 42i64;
        break;
      case 0xC3u:
      case 0xC5u:
      case 0xC6u:
      case 0xC7u:
      case 0xC9u:
      case 0xCAu:
        result = 43i64;
        break;
      case 0xC4u:
      case 0xC8u:
        result = 44i64;
        break;
      case 0xCBu:
      case 0xCCu:
      case 0xCDu:
      case 0xCEu:
      case 0xCFu:
      case 0xD0u:
      case 0xD1u:
      case 0xD2u:
      case 0xD3u:
      case 0xD4u:
      case 0xD5u:
      case 0xD6u:
        result = 45i64;
        break;
      case 0xD7u:
      case 0xD9u:
      case 0xDAu:
      case 0xDBu:
      case 0xDDu:
      case 0xDEu:
        result = 46i64;
        break;
      case 0xD8u:
      case 0xDCu:
        result = 47i64;
        break;
      case 0xDFu:
      case 0xE0u:
      case 0xE1u:
      case 0xE2u:
      case 0xE3u:
      case 0xE4u:
      case 0xE5u:
      case 0xE6u:
      case 0xE7u:
      case 0xE8u:
      case 0xE9u:
      case 0xEAu:
        result = 48i64;
        break;
      case 0xEBu:
      case 0xEDu:
      case 0xEEu:
        result = 49i64;
        break;
      case 0xECu:
        result = 50i64;
        break;
      case 0xEFu:
      case 0xF1u:
      case 0xF2u:
        result = 51i64;
        break;
      case 0xF0u:
        result = 52i64;
        break;
      case 0xF3u:
      case 0xF4u:
      case 0xF5u:
      case 0xF9u:
      case 0xFAu:
      case 0xFBu:
        result = 53i64;
        break;
      case 0xF6u:
      case 0xF7u:
      case 0xF8u:
      case 0xFCu:
      case 0xFDu:
      case 0xFEu:
        result = 54i64;
        break;
      case 0xFFu:
      case 0x100u:
      case 0x101u:
        result = 55i64;
        break;
      case 0x102u:
      case 0x103u:
      case 0x104u:
        result = 56i64;
        break;
      case 0x105u:
      case 0x106u:
      case 0x107u:
      case 0x10Bu:
      case 0x10Cu:
      case 0x10Du:
        result = 57i64;
        break;
      case 0x108u:
      case 0x109u:
      case 0x10Au:
      case 0x10Eu:
      case 0x10Fu:
      case 0x110u:
        result = 58i64;
        break;
      case 0x111u:
      case 0x113u:
      case 0x114u:
      case 0x115u:
      case 0x117u:
      case 0x118u:
        result = 59i64;
        break;
      case 0x112u:
      case 0x116u:
        result = 60i64;
        break;
      case 0x119u:
      case 0x11Au:
      case 0x11Bu:
      case 0x11Cu:
      case 0x11Du:
      case 0x11Eu:
      case 0x11Fu:
      case 0x120u:
      case 0x121u:
      case 0x122u:
      case 0x123u:
      case 0x124u:
        result = 61i64;
        break;
      case 0x125u:
      case 0x127u:
      case 0x128u:
      case 0x129u:
      case 0x12Bu:
      case 0x12Cu:
        result = 62i64;
        break;
      case 0x126u:
      case 0x12Au:
        result = 63i64;
        break;
      case 0x12Du:
      case 0x12Eu:
      case 0x12Fu:
      case 0x130u:
      case 0x131u:
      case 0x132u:
      case 0x133u:
      case 0x134u:
      case 0x135u:
      case 0x136u:
      case 0x137u:
      case 0x138u:
        result = 64i64;
        break;
      case 0x139u:
      case 0x13Au:
      case 0x13Bu:
        result = 65i64;
        break;
      case 0x13Cu:
      case 0x13Eu:
      case 0x13Fu:
        result = 66i64;
        break;
      case 0x13Du:
        result = 67i64;
        break;
      case 0x140u:
      case 0x142u:
      case 0x143u:
      case 0x147u:
      case 0x149u:
      case 0x14Au:
        result = 68i64;
        break;
      case 0x141u:
      case 0x148u:
        result = 69i64;
        break;
      case 0x144u:
      case 0x145u:
      case 0x146u:
      case 0x14Bu:
      case 0x14Cu:
      case 0x14Du:
        result = 70i64;
        break;
      case 0x14Eu:
      case 0x14Fu:
      case 0x150u:
        result = 71i64;
        break;
      case 0x151u:
      case 0x153u:
      case 0x154u:
        result = 72i64;
        break;
      case 0x152u:
        result = 73i64;
        break;
      case 0x155u:
      case 0x157u:
      case 0x158u:
      case 0x15Cu:
      case 0x15Eu:
      case 0x15Fu:
        result = 74i64;
        break;
      case 0x156u:
      case 0x15Du:
        result = 75i64;
        break;
      case 0x159u:
      case 0x15Au:
      case 0x15Bu:
      case 0x160u:
      case 0x161u:
      case 0x162u:
        result = 76i64;
        break;
      case 0x163u:
      case 0x164u:
      case 0x165u:
        result = 77i64;
        break;
      case 0x166u:
      case 0x168u:
      case 0x169u:
        result = 78i64;
        break;
      case 0x167u:
        result = 79i64;
        break;
      case 0x16Au:
      case 0x16Cu:
      case 0x16Du:
      case 0x171u:
      case 0x173u:
      case 0x174u:
        result = 80i64;
        break;
      case 0x16Bu:
      case 0x172u:
        result = 81i64;
        break;
      case 0x16Eu:
      case 0x16Fu:
      case 0x170u:
      case 0x175u:
      case 0x176u:
      case 0x177u:
        result = 82i64;
        break;
      case 0x178u:
      case 0x179u:
      case 0x17Au:
        result = 83i64;
        break;
      case 0x17Bu:
      case 0x17Du:
      case 0x17Eu:
        result = 84i64;
        break;
      case 0x17Cu:
        result = 85i64;
        break;
      case 0x17Fu:
      case 0x181u:
      case 0x182u:
      case 0x186u:
      case 0x188u:
      case 0x189u:
        result = 86i64;
        break;
      case 0x180u:
      case 0x187u:
        result = 87i64;
        break;
      case 0x183u:
      case 0x184u:
      case 0x185u:
      case 0x18Au:
      case 0x18Bu:
      case 0x18Cu:
        result = 88i64;
        break;
      case 0x18Du:
      case 0x18Fu:
      case 0x19Bu:
      case 0x19Du:
      case 0x19Eu:
        result = 89i64;
        break;
      case 0x18Eu:
      case 0x19Cu:
        result = 90i64;
        break;
      case 0x190u:
      case 0x192u:
      case 0x19Fu:
      case 0x1A1u:
      case 0x1A2u:
        result = 91i64;
        break;
      case 0x191u:
      case 0x1A0u:
        result = 92i64;
        break;
      case 0x193u:
      case 0x194u:
      case 0x197u:
      case 0x198u:
      case 0x1A3u:
      case 0x1A4u:
      case 0x1A5u:
      case 0x1A9u:
      case 0x1AAu:
      case 0x1ABu:
        result = 93i64;
        break;
      case 0x195u:
      case 0x196u:
      case 0x199u:
      case 0x19Au:
      case 0x1A6u:
      case 0x1A7u:
      case 0x1A8u:
      case 0x1ACu:
      case 0x1ADu:
      case 0x1AEu:
        result = 94i64;
        break;
      case 0x1AFu:
      case 0x1B1u:
      case 0x1BDu:
      case 0x1BFu:
      case 0x1C0u:
        result = 95i64;
        break;
      case 0x1B0u:
      case 0x1BEu:
        result = 96i64;
        break;
      case 0x1B2u:
      case 0x1B4u:
      case 0x1C1u:
      case 0x1C3u:
      case 0x1C4u:
        result = 97i64;
        break;
      case 0x1B3u:
      case 0x1C2u:
        result = 98i64;
        break;
      case 0x1B5u:
      case 0x1B6u:
      case 0x1B9u:
      case 0x1BAu:
      case 0x1C5u:
      case 0x1C6u:
      case 0x1C7u:
      case 0x1CBu:
      case 0x1CCu:
      case 0x1CDu:
        result = 99i64;
        break;
      case 0x1B7u:
      case 0x1B8u:
      case 0x1BBu:
      case 0x1BCu:
      case 0x1C8u:
      case 0x1C9u:
      case 0x1CAu:
      case 0x1CEu:
      case 0x1CFu:
      case 0x1D0u:
        result = 100i64;
        break;
      case 0x1D1u:
      case 0x1D3u:
      case 0x1DFu:
      case 0x1E1u:
      case 0x1E2u:
        result = 101i64;
        break;
      case 0x1D2u:
      case 0x1E0u:
        result = 102i64;
        break;
      case 0x1D4u:
      case 0x1D6u:
      case 0x1E3u:
      case 0x1E5u:
      case 0x1E6u:
        result = 103i64;
        break;
      case 0x1D5u:
      case 0x1E4u:
        result = 104i64;
        break;
      case 0x1D7u:
      case 0x1D8u:
      case 0x1DBu:
      case 0x1DCu:
      case 0x1E7u:
      case 0x1E8u:
      case 0x1E9u:
      case 0x1EDu:
      case 0x1EEu:
      case 0x1EFu:
        result = 105i64;
        break;
      case 0x1D9u:
      case 0x1DAu:
      case 0x1DDu:
      case 0x1DEu:
      case 0x1EAu:
      case 0x1EBu:
      case 0x1ECu:
      case 0x1F0u:
      case 0x1F1u:
      case 0x1F2u:
        result = 106i64;
        break;
      case 0x1F3u:
      case 0x1F5u:
      case 0x201u:
      case 0x203u:
      case 0x204u:
        result = 107i64;
        break;
      case 0x1F4u:
      case 0x202u:
        result = 108i64;
        break;
      case 0x1F6u:
      case 0x1F8u:
      case 0x205u:
      case 0x207u:
      case 0x208u:
        result = 109i64;
        break;
      case 0x1F7u:
      case 0x206u:
        result = 110i64;
        break;
      case 0x1F9u:
      case 0x1FAu:
      case 0x1FDu:
      case 0x1FEu:
      case 0x209u:
      case 0x20Au:
      case 0x20Bu:
      case 0x20Fu:
      case 0x210u:
      case 0x211u:
        result = 111i64;
        break;
      case 0x1FBu:
      case 0x1FCu:
      case 0x1FFu:
      case 0x200u:
      case 0x20Cu:
      case 0x20Du:
      case 0x20Eu:
      case 0x212u:
      case 0x213u:
      case 0x214u:
        result = 112i64;
        break;
      case 0x219u:
      case 0x21Au:
      case 0x21Bu:
      case 0x21Cu:
      case 0x21Du:
      case 0x21Eu:
      case 0x21Fu:
      case 0x220u:
      case 0x221u:
      case 0x222u:
      case 0x223u:
      case 0x224u:
      case 0x225u:
      case 0x226u:
      case 0x227u:
      case 0x228u:
      case 0x229u:
      case 0x22Au:
      case 0x22Bu:
      case 0x22Cu:
      case 0x22Du:
      case 0x22Eu:
      case 0x22Fu:
      case 0x230u:
      case 0x231u:
      case 0x232u:
      case 0x233u:
      case 0x234u:
      case 0x235u:
      case 0x236u:
      case 0x237u:
      case 0x238u:
      case 0x239u:
      case 0x23Au:
      case 0x23Bu:
      case 0x23Cu:
      case 0x23Du:
      case 0x23Eu:
      case 0x23Fu:
      case 0x240u:
      case 0x241u:
      case 0x242u:
      case 0x243u:
      case 0x244u:
      case 0x245u:
      case 0x246u:
      case 0x247u:
      case 0x248u:
      case 0x249u:
      case 0x24Au:
      case 0x24Bu:
      case 0x24Cu:
        result = 113i64;
        break;
      case 0x250u:
      case 0x251u:
      case 0x252u:
      case 0x256u:
      case 0x257u:
      case 0x259u:
      case 0x25Au:
      case 0x25Bu:
      case 0x25Cu:
      case 0x25Du:
        result = 114i64;
        break;
      case 0x253u:
      case 0x254u:
      case 0x255u:
        result = 115i64;
        break;
      case 0x25Eu:
        result = 116i64;
        break;
      default:
        return 0i64;
    }
  }
  return result;
}

__int64 __fastcall Scaleform::Render::GL::ShaderDesc::GetShaderTypeForComboIndex(
        unsigned int comboIndex,
        Scaleform::Render::GL::ShaderDesc::ShaderVersion ver)
{
  __int32 v2; // edx
  __int64 result; // rax

  if ( ver )
  {
    v2 = ver - 1;
    if ( !v2 )
    {
      switch ( 0x40000000u )
      {
        case 0u:
          goto $LN11_159;
        case 1u:
          goto $LN620_4;
        case 2u:
          goto $LN13_145;
        case 3u:
          goto $LN14_123;
        case 4u:
          goto $LN15_133;
        case 5u:
          goto $LN16_110;
        case 6u:
          goto $LN17_96;
        case 7u:
          goto $LN18_93;
        case 8u:
          goto $LN19_145;
        case 9u:
          goto $LN20_78;
        case 0xAu:
          goto $LN21_69;
        case 0xBu:
          goto $LN22_62;
        case 0xCu:
          goto $LN23_70;
        case 0xDu:
          goto $LN24_67;
        case 0xEu:
          goto $LN25_51;
        case 0xFu:
          goto $LN26_55;
        case 0x10u:
          goto $LN27_55;
        case 0x11u:
          goto $LN28_47;
        case 0x12u:
          goto $LN29_45;
        case 0x13u:
          goto $LN30_49;
        case 0x15u:
          goto $LN31_33;
        case 0x16u:
          goto $LN32_34;
        case 0x17u:
          goto $LN33_29;
        case 0x18u:
          goto $LN34_27;
        case 0x19u:
          goto $LN35_24;
        case 0x1Au:
          goto $LN36_29;
        case 0x1Bu:
          goto $LN37_36;
        case 0x1Cu:
          goto $LN38_29;
        case 0x1Du:
          goto $LN39_28;
        case 0x1Eu:
          goto $LN40_28;
        case 0x1Fu:
          goto $LN41_23;
        case 0x20u:
          goto $LN42_26;
        case 0x21u:
          goto $LN43_23;
        case 0x22u:
          goto $LN44_25;
        case 0x23u:
          goto $LN45_28;
        case 0x24u:
          goto $LN46_20;
        case 0x25u:
          goto $LN47_19;
        case 0x26u:
          goto $LN48_17;
        case 0x27u:
          goto $LN49_20;
        case 0x28u:
          goto $LN50_18;
        case 0x29u:
          goto $LN51_16;
        case 0x2Au:
          goto $LN52_17;
        case 0x2Bu:
          goto $LN53_24;
        case 0x2Cu:
          goto $LN54_20;
        case 0x2Du:
          goto $LN55_15;
        case 0x2Eu:
          goto $LN56_15;
        case 0x2Fu:
          goto $LN57_16;
        case 0x30u:
          goto $LN58_17;
        case 0x31u:
          goto $LN59_15;
        case 0x32u:
          goto $LN60_12;
        case 0x33u:
          goto $LN61_12;
        case 0x34u:
          goto $LN62_16;
        case 0x35u:
          goto $LN63_17;
        case 0x36u:
          goto $LN64_22;
        case 0x37u:
          goto $LN65_20;
        case 0x38u:
          goto $LN66_17;
        case 0x39u:
          goto $LN67_18;
        case 0x3Au:
          goto $LN68_17;
        case 0x3Bu:
          goto $LN69_14;
        case 0x3Cu:
          goto $LN70_12;
        case 0x3Du:
          goto $LN71_19;
        case 0x3Eu:
          goto $LN72_15;
        case 0x3Fu:
          goto $LN73_11;
        case 0x40u:
          goto $LN74_16;
        case 0x41u:
          goto $LN75_19;
        case 0x42u:
          goto $LN76_18;
        case 0x43u:
          goto $LN77_21;
        case 0x44u:
          goto $LN78_14;
        case 0x45u:
          goto $LN79_16;
        case 0x46u:
          goto $LN80_14;
        case 0x47u:
          goto $LN81_17;
        case 0x48u:
          goto $LN82_15;
        case 0x49u:
          goto $LN83_11;
        case 0x4Au:
          goto $LN84_17;
        case 0x4Bu:
          goto $LN85_15;
        case 0x4Cu:
          goto $LN86_16;
        case 0x4Du:
          goto $LN87_13;
        case 0x4Eu:
          goto $LN88_12;
        case 0x4Fu:
          goto $LN89_18;
        case 0x50u:
          goto $LN90_14;
        case 0x51u:
          goto $LN91_11;
        case 0x52u:
          goto $LN92_10;
        case 0x53u:
          goto $LN93_12;
        case 0x54u:
          goto $LN94_10;
        case 0x55u:
          goto $LN95_9;
        case 0x56u:
          goto $LN96_8;
        case 0x57u:
          goto $LN97_10;
        case 0x58u:
          goto $LN98_11;
        case 0x59u:
          goto $LN99_10;
        case 0x5Au:
          goto $LN100_9;
        case 0x5Bu:
          goto $LN101_9;
        case 0x5Cu:
          goto $LN102_12;
        case 0x5Du:
          goto $LN103_8;
        case 0x5Eu:
          goto $LN104_9;
        case 0x5Fu:
          goto $LN105_10;
        case 0x60u:
          goto $LN106_11;
        case 0x61u:
          goto $LN107_10;
        case 0x62u:
          goto $LN108_9;
        case 0x63u:
          goto $LN109_13;
        case 0x64u:
          goto $LN110_9;
        case 0x65u:
          goto $LN111_9;
        case 0x66u:
          goto $LN112_11;
        case 0x67u:
          goto $LN113_12;
        case 0x68u:
          goto $LN114_9;
        case 0x69u:
          goto $LN115_16;
        case 0x6Au:
          goto $LN116_9;
        case 0x6Bu:
          goto $LN117_10;
        case 0x6Cu:
          goto $LN118_11;
        case 0x6Du:
          goto $LN119_11;
        case 0x6Eu:
          goto $LN120_9;
        case 0x6Fu:
          goto $LN121_8;
        case 0x70u:
          goto $LN122_8;
        case 0x71u:
          goto $LN123_9;
        case 0x72u:
          goto $LN124_8;
        case 0x73u:
          goto $LN125_9;
        case 0x74u:
          goto $LN126_8;
        case 0x75u:
          goto $LN127_8;
        case 0x76u:
          goto $LN128_7;
        case 0x77u:
          goto $LN129_7;
        case 0x78u:
          goto $LN130_11;
        case 0x79u:
          goto $LN131_8;
        case 0x7Au:
          goto $LN132_8;
        case 0x7Bu:
          goto $LN133_41;
        case 0x7Cu:
          goto $LN134_10;
        case 0x7Du:
          goto $LN135_4;
        case 0x7Eu:
          goto $LN136_9;
        case 0x7Fu:
          goto $LN137_5;
        case 0x80u:
          goto $LN138_7;
        case 0x81u:
          goto $LN139_5;
        case 0x82u:
          goto $LN140_6;
        case 0x83u:
          goto $LN141_4;
        case 0x84u:
          goto $LN142_4;
        case 0x85u:
          goto $LN143_8;
        case 0x86u:
          goto $LN144_3;
        case 0x87u:
          goto $LN145_6;
        case 0x88u:
          goto $LN146_4;
        case 0x89u:
          goto $LN147_4;
        case 0x8Au:
          goto $LN148_6;
        case 0x8Bu:
          goto $LN149_7;
        case 0x8Cu:
          goto $LN150_10;
        case 0x8Du:
          goto $LN151_7;
        case 0x8Eu:
          goto $LN152_6;
        case 0x8Fu:
          goto $LN153_3;
        case 0x90u:
          goto $LN154_9;
        case 0x91u:
          goto $LN155_6;
        case 0x92u:
          goto $LN156_12;
        case 0x93u:
          goto $LN157_5;
        case 0x94u:
          goto $LN158_5;
        case 0x95u:
          goto $LN159_6;
        case 0x96u:
          goto $LN160_6;
        case 0x97u:
          goto $LN161_6;
        case 0x98u:
          goto $LN162_3;
        case 0x99u:
          goto $LN163_3;
        case 0x9Au:
          goto $LN164_6;
        case 0x9Bu:
          goto $LN165_4;
        case 0x9Cu:
          goto $LN166_7;
        case 0x9Du:
          goto $LN167_7;
        case 0x9Eu:
          goto $LN168_8;
        case 0x9Fu:
          goto $LN169_14;
        case 0xA0u:
          goto $LN170_7;
        case 0xA1u:
          goto $LN171_9;
        case 0xA2u:
          goto $LN172_11;
        case 0xA3u:
          goto $LN173_8;
        case 0xA4u:
          goto $LN174_5;
        case 0xA5u:
          goto $LN175_9;
        case 0xA6u:
          goto $LN176_7;
        case 0xA7u:
          goto $LN177_5;
        case 0xA8u:
          goto $LN178_6;
        case 0xA9u:
          goto $LN179_5;
        case 0xAAu:
          goto $LN180_4;
        case 0xABu:
          goto $LN181_3;
        case 0xACu:
          goto $LN182_8;
        case 0xADu:
          goto $LN183_5;
        case 0xAEu:
          goto $LN184_6;
        case 0xAFu:
          goto $LN185_6;
        case 0xB0u:
          goto $LN186_4;
        case 0xB1u:
          goto $LN187_6;
        case 0xB2u:
          goto $LN188_11;
        case 0xB3u:
          goto $LN189_8;
        case 0xB4u:
          goto $LN190_10;
        case 0xB5u:
          goto $LN191_7;
        case 0xB6u:
          goto $LN192_5;
        case 0xB7u:
          goto $LN193_7;
        case 0xB8u:
          goto $LN194_5;
        case 0xB9u:
          goto $LN195_10;
        case 0xBAu:
          goto $LN196_8;
        case 0xBBu:
          goto $LN197_11;
        case 0xBCu:
          goto $LN198_11;
        case 0xBDu:
          goto $LN199_6;
        case 0xBEu:
          goto $LN200_6;
        case 0xBFu:
          goto $LN201_6;
        case 0xC0u:
          goto $LN202_9;
        case 0xC1u:
          goto $LN203_7;
        case 0xC2u:
          goto $LN204_7;
        case 0xC3u:
          goto $LN205_7;
        case 0xC4u:
          goto $LN206_8;
        case 0xC5u:
          goto $LN207_4;
        case 0xC6u:
          goto $LN208_3;
        case 0xC7u:
          goto $LN209_4;
        case 0xC8u:
          goto $LN210_4;
        case 0xC9u:
          goto $LN211_3;
        case 0xCAu:
          goto $LN212_3;
        case 0xCBu:
          goto $LN213_5;
        case 0xCCu:
          goto $LN214_4;
        case 0xCDu:
          goto $LN215_6;
        case 0xCEu:
          goto $LN216_4;
        case 0xCFu:
          goto $LN217_4;
        case 0xD0u:
          goto $LN218_3;
        case 0xD1u:
          goto $LN219_7;
        case 0xD2u:
          goto $LN220_4;
        case 0xD3u:
          goto $LN221_4;
        case 0xD4u:
          goto $LN222_5;
        case 0xD5u:
          goto $LN223_7;
        case 0xD6u:
          goto $LN224_3;
        case 0xD7u:
          goto $LN225_6;
        case 0xD8u:
          goto $LN226_4;
        case 0xD9u:
          goto $LN227_4;
        case 0xDAu:
          goto $LN228_4;
        case 0xDBu:
          goto $LN229_3;
        case 0xDCu:
          goto $LN230_3;
        case 0xDDu:
          goto $LN231_4;
        case 0xDEu:
          goto $LN232_3;
        case 0xDFu:
          goto $LN233_7;
        case 0xE0u:
          goto $LN234_4;
        case 0xE1u:
          goto $LN235_3;
        case 0xE2u:
          goto $LN236_3;
        case 0xE3u:
          goto $LN237_4;
        case 0xE4u:
          goto $LN238_4;
        case 0xE5u:
          goto $LN239_4;
        case 0xE6u:
          goto $LN240_4;
        case 0xE7u:
          goto $LN241_3;
        case 0xE8u:
          goto $LN242_3;
        case 0xE9u:
          goto $LN243_3;
        case 0xEAu:
          goto $LN244_4;
        case 0xEBu:
          goto $LN245_3;
        case 0xECu:
          goto $LN246_5;
        case 0xEDu:
          goto $LN247_4;
        case 0xEEu:
          goto $LN248_3;
        case 0xEFu:
          goto $LN249_4;
        case 0xF0u:
          goto $LN250_4;
        case 0xF1u:
          goto $LN251_7;
        case 0xF2u:
          goto $LN252_3;
        case 0xF3u:
          goto $LN253_4;
        case 0xF4u:
          goto $LN254_6;
        case 0xF5u:
          goto $LN255_3;
        case 0xF6u:
          goto $LN256_5;
        case 0xF7u:
          goto $LN257_3;
        case 0xF8u:
          goto $LN258_2;
        case 0xF9u:
          goto $LN259_4;
        case 0xFAu:
          goto $LN260_3;
        case 0xFBu:
          goto $LN261_2;
        case 0xFCu:
          goto $LN262_5;
        case 0xFDu:
          goto $LN263_3;
        case 0xFEu:
          goto $LN264_4;
        case 0xFFu:
          goto $LN265_4;
        case 0x100u:
          goto $LN266_3;
        case 0x101u:
          goto $LN267_3;
        case 0x102u:
          goto $LN268_3;
        case 0x103u:
          goto $LN269_4;
        case 0x104u:
          goto $LN270_3;
        case 0x105u:
          goto $LN271_4;
        case 0x106u:
          goto $LN272_3;
        case 0x107u:
          goto $LN273_4;
        case 0x108u:
          goto $LN274_3;
        case 0x109u:
          goto $LN275_4;
        case 0x10Au:
          goto $LN276_2;
        case 0x10Bu:
          goto $LN277_2;
        case 0x10Cu:
          goto $LN278_3;
        case 0x10Du:
          goto $LN279_6;
        case 0x10Eu:
          goto $LN280_4;
        case 0x10Fu:
          goto $LN281_3;
        case 0x110u:
          goto $LN282_4;
        case 0x111u:
          goto $LN283_5;
        case 0x112u:
          goto $LN284_4;
        case 0x113u:
          goto $LN285_4;
        case 0x114u:
          goto $LN286_4;
        case 0x115u:
          goto $LN287_4;
        case 0x116u:
          goto $LN288_2;
        case 0x117u:
          goto $LN289_3;
        case 0x118u:
          goto $LN290_3;
        case 0x119u:
          goto $LN291_6;
        case 0x11Au:
          goto $LN292_4;
        case 0x11Bu:
          goto $LN293_3;
        case 0x11Cu:
          goto $LN294_4;
        case 0x11Du:
          goto $LN295_3;
        case 0x11Eu:
          goto $LN296_9;
        case 0x11Fu:
          goto $LN297_3;
        case 0x120u:
          goto $LN298_4;
        case 0x121u:
          goto $LN299_3;
        case 0x122u:
          goto $LN300_4;
        case 0x123u:
          goto $LN301_1;
        case 0x124u:
          goto $LN302_2;
        case 0x125u:
          goto $LN303_4;
        case 0x126u:
          goto $LN304_4;
        case 0x127u:
          goto $LN305_4;
        case 0x128u:
          goto $LN306_3;
        case 0x129u:
          goto $LN307_4;
        case 0x12Au:
          goto $LN308_4;
        case 0x12Bu:
          goto $LN309_4;
        case 0x12Cu:
          goto $LN310_2;
        case 0x12Du:
          goto $LN311_3;
        case 0x12Eu:
          goto $LN312_3;
        case 0x12Fu:
          goto $LN313_3;
        case 0x130u:
          goto $LN314_4;
        case 0x131u:
          goto $LN315_3;
        case 0x132u:
          goto $LN316_2;
        case 0x133u:
          goto $LN317_2;
        case 0x134u:
          goto $LN318_4;
        case 0x135u:
          goto $LN319_4;
        case 0x136u:
          goto $LN320_4;
        case 0x137u:
          goto $LN321_5;
        case 0x138u:
          goto $LN322_2;
        case 0x139u:
          goto $LN323_4;
        case 0x13Au:
          goto $LN324_5;
        case 0x13Bu:
          goto $LN325_3;
        case 0x13Cu:
          goto $LN326_4;
        case 0x13Du:
          goto $LN327_8;
        case 0x13Eu:
          goto $LN328_4;
        case 0x13Fu:
          goto $LN329_3;
        case 0x140u:
          goto $LN330_4;
        case 0x141u:
          goto $LN331_4;
        case 0x142u:
          goto $LN332_2;
        case 0x143u:
          goto $LN333_3;
        case 0x144u:
          goto $LN334_4;
        case 0x145u:
          goto $LN335_4;
        case 0x146u:
          goto $LN336_2;
        case 0x147u:
          goto $LN337_3;
        case 0x148u:
          goto $LN338_3;
        case 0x149u:
          goto $LN339_3;
        case 0x14Au:
          goto $LN340_4;
        case 0x14Bu:
          goto $LN341_3;
        case 0x14Cu:
          goto $LN342_3;
        case 0x14Du:
          goto $LN343_8;
        case 0x14Eu:
          goto $LN344_5;
        case 0x14Fu:
          goto $LN345_3;
        case 0x150u:
          goto $LN346_3;
        case 0x151u:
          goto $LN347_5;
        case 0x152u:
          goto $LN348_3;
        case 0x153u:
          goto $LN349_2;
        case 0x154u:
          goto $LN350_3;
        case 0x155u:
          goto $LN351_3;
        case 0x156u:
          goto $LN352_2;
        case 0x157u:
          goto $LN353_6;
        case 0x158u:
          goto $LN354_3;
        case 0x159u:
          goto $LN355_4;
        case 0x15Au:
          goto $LN356_3;
        case 0x15Bu:
          goto $LN357_3;
        case 0x15Cu:
          goto $LN358_3;
        case 0x15Du:
          goto $LN359_3;
        case 0x15Eu:
          goto $LN360_3;
        case 0x15Fu:
          goto $LN361_2;
        case 0x160u:
          goto $LN362_3;
        case 0x161u:
          goto $LN363_2;
        case 0x162u:
          goto $LN364_3;
        case 0x163u:
          goto $LN365_4;
        case 0x164u:
          goto $LN366_3;
        case 0x165u:
          goto $LN367_6;
        case 0x166u:
          goto $LN368_6;
        case 0x167u:
          goto $LN369_4;
        case 0x168u:
          goto $LN370_3;
        case 0x169u:
          goto $LN371_4;
        case 0x16Au:
          goto $LN372_5;
        case 0x16Bu:
          goto $LN373_6;
        case 0x16Cu:
          goto $LN374_2;
        case 0x16Du:
          goto $LN375_3;
        case 0x16Eu:
          goto $LN376_4;
        case 0x16Fu:
          goto $LN377_2;
        case 0x170u:
          goto $LN378_3;
        case 0x171u:
          goto $LN379_4;
        case 0x172u:
          goto $LN380_4;
        case 0x173u:
          goto $LN381_3;
        case 0x174u:
          goto $LN382_3;
        case 0x175u:
          goto $LN383_3;
        case 0x176u:
          goto $LN384_5;
        case 0x177u:
          goto $LN385_4;
        case 0x178u:
          goto $LN386_5;
        case 0x179u:
          goto $LN387_4;
        case 0x17Au:
          goto $LN388_2;
        case 0x17Bu:
          goto $LN389_4;
        case 0x17Cu:
          goto $LN390_5;
        case 0x17Du:
          goto $LN391_2;
        case 0x17Eu:
          goto $LN392_3;
        case 0x17Fu:
          goto $LN393_4;
        case 0x180u:
          goto $LN394_3;
        case 0x181u:
          goto $LN395_3;
        case 0x182u:
          goto $LN396_3;
        case 0x183u:
          goto $LN397_5;
        case 0x184u:
          goto $LN398_2;
        case 0x185u:
          goto $LN399_4;
        case 0x186u:
          goto $LN400_2;
        case 0x187u:
          goto $LN401_2;
        case 0x188u:
          goto $LN402_3;
        case 0x189u:
          goto $LN403_4;
        case 0x18Au:
          goto $LN404_3;
        case 0x18Bu:
          goto $LN405_4;
        case 0x18Cu:
          goto $LN406_3;
        case 0x18Du:
          goto $LN407_6;
        case 0x18Eu:
          goto $LN408_5;
        case 0x18Fu:
          goto $LN409_3;
        case 0x190u:
          goto $LN410_5;
        case 0x191u:
          goto $LN411_5;
        case 0x192u:
          goto $LN412_4;
        case 0x193u:
          goto $LN413_4;
        case 0x194u:
          goto $LN414_3;
        case 0x195u:
          goto $LN415_5;
        case 0x196u:
          goto $LN416_4;
        case 0x197u:
          goto $LN417_4;
        case 0x198u:
          goto $LN418_4;
        case 0x199u:
          goto $LN419_3;
        case 0x19Au:
          goto $LN420_3;
        case 0x19Bu:
          goto $LN421_4;
        case 0x19Cu:
          goto $LN422_4;
        case 0x19Du:
          goto $LN423_2;
        case 0x19Eu:
          goto $LN424_2;
        case 0x19Fu:
          goto $LN425_4;
        case 0x1A0u:
          goto $LN426_2;
        case 0x1A1u:
          goto $LN427_4;
        case 0x1A2u:
          goto $LN428_3;
        case 0x1A3u:
          goto $LN429_3;
        case 0x1A4u:
          goto $LN430_3;
        case 0x1A5u:
          goto $LN431_3;
        case 0x1A6u:
          goto $LN432_3;
        case 0x1A7u:
          goto $LN433_3;
        case 0x1A8u:
          goto $LN434_2;
        case 0x1A9u:
          goto $LN435_3;
        case 0x1AAu:
          goto $LN436_2;
        case 0x1ABu:
          goto $LN437_5;
        case 0x1ACu:
          goto $LN438_3;
        case 0x1ADu:
          goto $LN439_4;
        case 0x1AEu:
          goto $LN440_3;
        case 0x1AFu:
          goto $LN441_3;
        case 0x1B0u:
          goto $LN442_3;
        case 0x1B1u:
          goto $LN443_2;
        case 0x1B2u:
          goto $LN444_3;
        case 0x1B3u:
          goto $LN445_3;
        case 0x1B4u:
          goto $LN446_2;
        case 0x1B5u:
          goto $LN447_5;
        case 0x1B6u:
          goto $LN448_2;
        case 0x1B7u:
          goto $LN449_4;
        case 0x1B8u:
          goto $LN450_3;
        case 0x1B9u:
          goto $LN451_4;
        case 0x1BAu:
          goto $LN452_2;
        case 0x1BBu:
          goto $LN453_3;
        case 0x1BCu:
          goto $LN454_3;
        case 0x1BDu:
          goto $LN455_3;
        case 0x1BEu:
          goto $LN456_2;
        case 0x1BFu:
          goto $LN457_4;
        case 0x1C0u:
          goto $LN458_1;
        case 0x1C1u:
          goto $LN459_3;
        case 0x1C2u:
          goto $LN460_3;
        case 0x1C3u:
          goto $LN461_2;
        case 0x1C4u:
          goto $LN462_3;
        case 0x1C5u:
          goto $LN463_2;
        case 0x1C6u:
          goto $LN464_3;
        case 0x1C7u:
          goto $LN465_1;
        case 0x1C8u:
          goto $LN466_2;
        case 0x1C9u:
          goto $LN467_2;
        case 0x1CAu:
          goto $LN468_3;
        case 0x1CBu:
          goto $LN469_4;
        case 0x1CCu:
          goto $LN470_3;
        case 0x1CDu:
          goto $LN471_3;
        case 0x1CEu:
          goto $LN472_1;
        case 0x1CFu:
          goto $LN473_2;
        case 0x1D0u:
          goto $LN474_2;
        case 0x1D1u:
          goto $LN475_4;
        case 0x1D2u:
          goto $LN476_4;
        case 0x1D3u:
          goto $LN477_4;
        case 0x1D4u:
          goto $LN478_4;
        case 0x1D5u:
          goto $LN479_5;
        case 0x1D6u:
          goto $LN480_3;
        case 0x1D7u:
          goto $LN481_5;
        case 0x1D8u:
          goto $LN482_2;
        case 0x1D9u:
          goto $LN483_3;
        case 0x1DAu:
          goto $LN484_6;
        case 0x1DBu:
          goto $LN485_3;
        case 0x1DCu:
          goto $LN486_6;
        case 0x1DDu:
          goto $LN487_3;
        case 0x1DEu:
          goto $LN488_5;
        case 0x1DFu:
          goto $LN489_3;
        case 0x1E0u:
          goto $LN490_4;
        case 0x1E1u:
          goto $LN491_5;
        case 0x1E2u:
          goto $LN492_3;
        case 0x1E3u:
          goto $LN493_3;
        case 0x1E4u:
          goto $LN494_4;
        case 0x1E5u:
          goto $LN495_3;
        case 0x1E6u:
          goto $LN496_3;
        case 0x1E7u:
          goto $LN497_3;
        case 0x1E8u:
          goto $LN498_3;
        case 0x1E9u:
          goto $LN499_4;
        case 0x1EAu:
          goto $LN500_4;
        case 0x1EBu:
          goto $LN501_3;
        case 0x1ECu:
          goto $LN502_3;
        case 0x1EDu:
          goto $LN503_3;
        case 0x1EEu:
          goto $LN504_5;
        case 0x1EFu:
          goto $LN505_3;
        case 0x1F0u:
          goto $LN506_3;
        case 0x1F1u:
          goto $LN507_3;
        case 0x1F2u:
          goto $LN508_4;
        case 0x1F3u:
          goto $LN509_4;
        case 0x1F4u:
          goto $LN510_3;
        case 0x1F5u:
          goto $LN511_2;
        case 0x1F6u:
          goto $LN512_3;
        case 0x1F7u:
          goto $LN513_4;
        case 0x1F8u:
          goto $LN514_3;
        case 0x1F9u:
          goto $LN515_3;
        case 0x1FAu:
          goto $LN516_3;
        case 0x1FBu:
          goto $LN517_3;
        case 0x1FCu:
          goto $LN518_3;
        case 0x1FDu:
          goto $LN519_3;
        case 0x1FEu:
          goto $LN520_2;
        case 0x1FFu:
          goto $LN521_1;
        case 0x200u:
          goto $LN522_2;
        case 0x201u:
          goto $LN523_4;
        case 0x202u:
          goto $LN524_4;
        case 0x203u:
          goto $LN525_2;
        case 0x204u:
          goto $LN526_2;
        case 0x205u:
          goto $LN527_3;
        case 0x206u:
          goto $LN528_2;
        case 0x207u:
          goto $LN529_2;
        case 0x208u:
          goto $LN530_2;
        case 0x209u:
          goto $LN531_2;
        case 0x20Au:
          goto $LN532_3;
        case 0x20Bu:
          goto $LN533_2;
        case 0x20Cu:
          goto $LN534_3;
        case 0x20Du:
          goto $LN535_2;
        case 0x20Eu:
          goto $LN536_4;
        case 0x20Fu:
          goto $LN537_2;
        case 0x210u:
          goto $LN538_2;
        case 0x211u:
          goto $LN539_2;
        case 0x212u:
          goto $LN540_3;
        case 0x213u:
          goto $LN541_10;
        case 0x214u:
          goto $LN542_10;
        case 0x215u:
          goto $LN543_2;
        case 0x216u:
          goto $LN544_2;
        case 0x217u:
          goto $LN545_7;
        case 0x218u:
          goto $LN546_4;
        case 0x219u:
          goto $LN547_4;
        case 0x21Au:
          goto $LN548_3;
        case 0x21Bu:
          goto $LN549_4;
        case 0x21Cu:
          goto $LN550_6;
        case 0x21Du:
          goto $LN551_4;
        case 0x21Eu:
          goto $LN552_2;
        case 0x21Fu:
          goto $LN553_3;
        case 0x220u:
          goto $LN554_4;
        case 0x221u:
          goto $LN555_4;
        case 0x222u:
          goto $LN556_5;
        case 0x223u:
          goto $LN557_2;
        case 0x224u:
          goto $LN558_3;
        case 0x225u:
          goto $LN559_3;
        case 0x226u:
          goto $LN560_4;
        case 0x227u:
          goto $LN561_2;
        case 0x228u:
          goto $LN562_4;
        case 0x229u:
          goto $LN563_3;
        case 0x22Au:
          goto $LN564_4;
        case 0x22Bu:
          goto $LN565_4;
        case 0x22Cu:
          goto $LN566_2;
        case 0x22Du:
          goto $LN567_3;
        case 0x22Eu:
          goto $LN568_4;
        case 0x22Fu:
          goto $LN569_3;
        case 0x230u:
          goto $LN570_2;
        case 0x231u:
          goto $LN571_3;
        case 0x232u:
          goto $LN572_3;
        case 0x233u:
          goto $LN573_3;
        case 0x234u:
          goto $LN574_3;
        case 0x235u:
          goto $LN575_3;
        case 0x236u:
          goto $LN576_4;
        case 0x237u:
          goto $LN577_3;
        case 0x238u:
          goto $LN578_3;
        case 0x239u:
          goto $LN579_2;
        case 0x23Au:
          goto $LN580_3;
        case 0x23Bu:
          goto $LN581_4;
        case 0x23Cu:
          goto $LN582_3;
        case 0x23Du:
          goto $LN583_3;
        case 0x23Eu:
          goto $LN584_2;
        case 0x23Fu:
          goto $LN585_5;
        case 0x240u:
          goto $LN586_3;
        case 0x241u:
          goto $LN587_4;
        case 0x242u:
          goto $LN588_4;
        case 0x243u:
          goto $LN589_4;
        case 0x244u:
          goto $LN590_3;
        case 0x245u:
          goto $LN591_4;
        case 0x246u:
          goto $LN592_2;
        case 0x247u:
          goto $LN593_3;
        case 0x248u:
          goto $LN594_3;
        case 0x249u:
          goto $LN595_3;
        case 0x24Au:
          goto $LN596_3;
        case 0x24Bu:
          goto $LN597_3;
        case 0x24Cu:
          goto $LN598_2;
        case 0x24Du:
          goto $LN599_3;
        case 0x24Eu:
          goto $LN600_3;
        case 0x24Fu:
          goto $LN601_4;
        case 0x250u:
          goto $LN602_5;
        case 0x251u:
          goto $LN603_2;
        case 0x252u:
          goto $LN604_4;
        case 0x253u:
          goto $LN605_3;
        case 0x254u:
          goto $LN606_3;
        case 0x255u:
          goto $LN607_2;
        case 0x256u:
          goto $LN608_3;
        case 0x257u:
          goto $LN609_5;
        case 0x258u:
          goto $LN610_3;
        case 0x259u:
          goto $LN611_3;
        case 0x25Au:
          goto $LN612_2;
        case 0x25Bu:
          goto $LN613_4;
        case 0x25Cu:
          goto $LN614_4;
        case 0x25Du:
          goto $LN615_5;
        case 0x25Eu:
          goto $LN616_4;
        default:
          return 0i64;
      }
    }
    if ( v2 == 1 )
    {
      switch ( 0x40000000u )
      {
        case 0u:
          goto $LN11_159;
        case 1u:
          goto $LN620_4;
        case 2u:
          goto $LN13_145;
        case 3u:
          goto $LN14_123;
        case 4u:
          goto $LN15_133;
        case 5u:
          goto $LN16_110;
        case 6u:
          goto $LN17_96;
        case 7u:
          goto $LN18_93;
        case 8u:
          goto $LN19_145;
        case 9u:
          goto $LN20_78;
        case 0xAu:
          goto $LN21_69;
        case 0xBu:
          goto $LN22_62;
        case 0xCu:
          goto $LN23_70;
        case 0xDu:
          goto $LN24_67;
        case 0xEu:
          goto $LN25_51;
        case 0xFu:
          goto $LN26_55;
        case 0x10u:
          goto $LN27_55;
        case 0x11u:
          goto $LN28_47;
        case 0x12u:
          goto $LN29_45;
        case 0x13u:
          goto $LN30_49;
        case 0x15u:
          goto $LN31_33;
        case 0x16u:
          goto $LN32_34;
        case 0x17u:
          goto $LN33_29;
        case 0x18u:
          goto $LN34_27;
        case 0x19u:
          goto $LN35_24;
        case 0x1Au:
          goto $LN36_29;
        case 0x1Bu:
          goto $LN37_36;
        case 0x1Cu:
          goto $LN38_29;
        case 0x1Du:
          goto $LN39_28;
        case 0x1Eu:
          goto $LN40_28;
        case 0x1Fu:
          goto $LN41_23;
        case 0x20u:
          goto $LN42_26;
        case 0x21u:
          goto $LN43_23;
        case 0x22u:
          goto $LN44_25;
        case 0x23u:
          goto $LN45_28;
        case 0x24u:
          goto $LN46_20;
        case 0x25u:
          goto $LN47_19;
        case 0x26u:
          goto $LN48_17;
        case 0x27u:
          goto $LN49_20;
        case 0x28u:
          goto $LN50_18;
        case 0x29u:
          goto $LN51_16;
        case 0x2Au:
          goto $LN52_17;
        case 0x2Bu:
          goto $LN53_24;
        case 0x2Cu:
          goto $LN54_20;
        case 0x2Du:
          goto $LN55_15;
        case 0x2Eu:
          goto $LN56_15;
        case 0x2Fu:
          goto $LN57_16;
        case 0x30u:
          goto $LN58_17;
        case 0x31u:
          goto $LN59_15;
        case 0x32u:
          goto $LN60_12;
        case 0x33u:
          goto $LN61_12;
        case 0x34u:
          goto $LN62_16;
        case 0x35u:
          goto $LN63_17;
        case 0x36u:
          goto $LN64_22;
        case 0x37u:
          goto $LN65_20;
        case 0x38u:
          goto $LN66_17;
        case 0x39u:
          goto $LN67_18;
        case 0x3Au:
          goto $LN68_17;
        case 0x3Bu:
          goto $LN69_14;
        case 0x3Cu:
          goto $LN70_12;
        case 0x3Du:
          goto $LN71_19;
        case 0x3Eu:
          goto $LN72_15;
        case 0x3Fu:
          goto $LN73_11;
        case 0x40u:
          goto $LN74_16;
        case 0x41u:
          goto $LN75_19;
        case 0x42u:
          goto $LN76_18;
        case 0x43u:
          goto $LN77_21;
        case 0x44u:
          goto $LN78_14;
        case 0x45u:
          goto $LN79_16;
        case 0x46u:
          goto $LN80_14;
        case 0x47u:
          goto $LN81_17;
        case 0x48u:
          goto $LN82_15;
        case 0x49u:
          goto $LN83_11;
        case 0x4Au:
          goto $LN84_17;
        case 0x4Bu:
          goto $LN85_15;
        case 0x4Cu:
          goto $LN86_16;
        case 0x4Du:
          goto $LN87_13;
        case 0x4Eu:
          goto $LN88_12;
        case 0x4Fu:
          goto $LN89_18;
        case 0x50u:
          goto $LN90_14;
        case 0x51u:
          goto $LN91_11;
        case 0x52u:
          goto $LN92_10;
        case 0x53u:
          goto $LN93_12;
        case 0x54u:
          goto $LN94_10;
        case 0x55u:
          goto $LN95_9;
        case 0x56u:
          goto $LN96_8;
        case 0x57u:
          goto $LN97_10;
        case 0x58u:
          goto $LN98_11;
        case 0x59u:
          goto $LN99_10;
        case 0x5Au:
          goto $LN100_9;
        case 0x5Bu:
          goto $LN101_9;
        case 0x5Cu:
          goto $LN102_12;
        case 0x5Du:
          goto $LN103_8;
        case 0x5Eu:
          goto $LN104_9;
        case 0x5Fu:
          goto $LN105_10;
        case 0x60u:
          goto $LN106_11;
        case 0x61u:
          goto $LN107_10;
        case 0x62u:
          goto $LN108_9;
        case 0x63u:
          goto $LN109_13;
        case 0x64u:
          goto $LN110_9;
        case 0x65u:
          goto $LN111_9;
        case 0x66u:
          goto $LN112_11;
        case 0x67u:
          goto $LN113_12;
        case 0x68u:
          goto $LN114_9;
        case 0x69u:
          goto $LN115_16;
        case 0x6Au:
          goto $LN116_9;
        case 0x6Bu:
          goto $LN117_10;
        case 0x6Cu:
          goto $LN118_11;
        case 0x6Du:
          goto $LN119_11;
        case 0x6Eu:
          goto $LN120_9;
        case 0x6Fu:
          goto $LN121_8;
        case 0x70u:
          goto $LN122_8;
        case 0x71u:
          goto $LN123_9;
        case 0x72u:
          goto $LN124_8;
        case 0x73u:
          goto $LN125_9;
        case 0x74u:
          goto $LN126_8;
        case 0x75u:
          goto $LN127_8;
        case 0x76u:
          goto $LN128_7;
        case 0x77u:
          goto $LN129_7;
        case 0x78u:
          goto $LN130_11;
        case 0x79u:
          goto $LN131_8;
        case 0x7Au:
          goto $LN132_8;
        case 0x7Bu:
          goto $LN133_41;
        case 0x7Cu:
          goto $LN134_10;
        case 0x7Du:
          goto $LN135_4;
        case 0x7Eu:
          goto $LN136_9;
        case 0x7Fu:
          goto $LN137_5;
        case 0x80u:
          goto $LN138_7;
        case 0x81u:
          goto $LN139_5;
        case 0x82u:
          goto $LN140_6;
        case 0x83u:
          goto $LN141_4;
        case 0x84u:
          goto $LN142_4;
        case 0x85u:
          goto $LN143_8;
        case 0x86u:
          goto $LN144_3;
        case 0x87u:
          goto $LN145_6;
        case 0x88u:
          goto $LN146_4;
        case 0x89u:
          goto $LN147_4;
        case 0x8Au:
          goto $LN148_6;
        case 0x8Bu:
          goto $LN149_7;
        case 0x8Cu:
          goto $LN150_10;
        case 0x8Du:
          goto $LN151_7;
        case 0x8Eu:
          goto $LN152_6;
        case 0x8Fu:
          goto $LN153_3;
        case 0x90u:
          goto $LN154_9;
        case 0x91u:
          goto $LN155_6;
        case 0x92u:
          goto $LN156_12;
        case 0x93u:
          goto $LN157_5;
        case 0x94u:
          goto $LN158_5;
        case 0x95u:
          goto $LN159_6;
        case 0x96u:
          goto $LN160_6;
        case 0x97u:
          goto $LN161_6;
        case 0x98u:
          goto $LN162_3;
        case 0x99u:
          goto $LN163_3;
        case 0x9Au:
          goto $LN164_6;
        case 0x9Bu:
          goto $LN165_4;
        case 0x9Cu:
          goto $LN166_7;
        case 0x9Du:
          goto $LN167_7;
        case 0x9Eu:
          goto $LN168_8;
        case 0x9Fu:
          goto $LN169_14;
        case 0xA0u:
          goto $LN170_7;
        case 0xA1u:
          goto $LN171_9;
        case 0xA2u:
          goto $LN172_11;
        case 0xA3u:
          goto $LN173_8;
        case 0xA4u:
          goto $LN174_5;
        case 0xA5u:
          goto $LN175_9;
        case 0xA6u:
          goto $LN176_7;
        case 0xA7u:
          goto $LN177_5;
        case 0xA8u:
          goto $LN178_6;
        case 0xA9u:
          goto $LN179_5;
        case 0xAAu:
          goto $LN180_4;
        case 0xABu:
          goto $LN181_3;
        case 0xACu:
          goto $LN182_8;
        case 0xADu:
          goto $LN183_5;
        case 0xAEu:
          goto $LN184_6;
        case 0xAFu:
          goto $LN185_6;
        case 0xB0u:
          goto $LN186_4;
        case 0xB1u:
          goto $LN187_6;
        case 0xB2u:
          goto $LN188_11;
        case 0xB3u:
          goto $LN189_8;
        case 0xB4u:
          goto $LN190_10;
        case 0xB5u:
          goto $LN191_7;
        case 0xB6u:
          goto $LN192_5;
        case 0xB7u:
          goto $LN193_7;
        case 0xB8u:
          goto $LN194_5;
        case 0xB9u:
          goto $LN195_10;
        case 0xBAu:
          goto $LN196_8;
        case 0xBBu:
          goto $LN197_11;
        case 0xBCu:
          goto $LN198_11;
        case 0xBDu:
          goto $LN199_6;
        case 0xBEu:
          goto $LN200_6;
        case 0xBFu:
          goto $LN201_6;
        case 0xC0u:
          goto $LN202_9;
        case 0xC1u:
          goto $LN203_7;
        case 0xC2u:
          goto $LN204_7;
        case 0xC3u:
          goto $LN205_7;
        case 0xC4u:
          goto $LN206_8;
        case 0xC5u:
          goto $LN207_4;
        case 0xC6u:
          goto $LN208_3;
        case 0xC7u:
          goto $LN209_4;
        case 0xC8u:
          goto $LN210_4;
        case 0xC9u:
          goto $LN211_3;
        case 0xCAu:
          goto $LN212_3;
        case 0xCBu:
          goto $LN213_5;
        case 0xCCu:
          goto $LN214_4;
        case 0xCDu:
          goto $LN215_6;
        case 0xCEu:
          goto $LN216_4;
        case 0xCFu:
          goto $LN217_4;
        case 0xD0u:
          goto $LN218_3;
        case 0xD1u:
          goto $LN219_7;
        case 0xD2u:
          goto $LN220_4;
        case 0xD3u:
          goto $LN221_4;
        case 0xD4u:
          goto $LN222_5;
        case 0xD5u:
          goto $LN223_7;
        case 0xD6u:
          goto $LN224_3;
        case 0xD7u:
          goto $LN225_6;
        case 0xD8u:
          goto $LN226_4;
        case 0xD9u:
          goto $LN227_4;
        case 0xDAu:
          goto $LN228_4;
        case 0xDBu:
          goto $LN229_3;
        case 0xDCu:
          goto $LN230_3;
        case 0xDDu:
          goto $LN231_4;
        case 0xDEu:
          goto $LN232_3;
        case 0xDFu:
          goto $LN233_7;
        case 0xE0u:
          goto $LN234_4;
        case 0xE1u:
          goto $LN235_3;
        case 0xE2u:
          goto $LN236_3;
        case 0xE3u:
          goto $LN237_4;
        case 0xE4u:
          goto $LN238_4;
        case 0xE5u:
          goto $LN239_4;
        case 0xE6u:
          goto $LN240_4;
        case 0xE7u:
          goto $LN241_3;
        case 0xE8u:
          goto $LN242_3;
        case 0xE9u:
          goto $LN243_3;
        case 0xEAu:
          goto $LN244_4;
        case 0xEBu:
          goto $LN245_3;
        case 0xECu:
          goto $LN246_5;
        case 0xEDu:
          goto $LN247_4;
        case 0xEEu:
          goto $LN248_3;
        case 0xEFu:
          goto $LN249_4;
        case 0xF0u:
          goto $LN250_4;
        case 0xF1u:
          goto $LN251_7;
        case 0xF2u:
          goto $LN252_3;
        case 0xF3u:
          goto $LN253_4;
        case 0xF4u:
          goto $LN254_6;
        case 0xF5u:
          goto $LN255_3;
        case 0xF6u:
          goto $LN256_5;
        case 0xF7u:
          goto $LN257_3;
        case 0xF8u:
          goto $LN258_2;
        case 0xF9u:
          goto $LN259_4;
        case 0xFAu:
          goto $LN260_3;
        case 0xFBu:
          goto $LN261_2;
        case 0xFCu:
          goto $LN262_5;
        case 0xFDu:
          goto $LN263_3;
        case 0xFEu:
          goto $LN264_4;
        case 0xFFu:
          goto $LN265_4;
        case 0x100u:
          goto $LN266_3;
        case 0x101u:
          goto $LN267_3;
        case 0x102u:
          goto $LN268_3;
        case 0x103u:
          goto $LN269_4;
        case 0x104u:
          goto $LN270_3;
        case 0x105u:
          goto $LN271_4;
        case 0x106u:
          goto $LN272_3;
        case 0x107u:
          goto $LN273_4;
        case 0x108u:
          goto $LN274_3;
        case 0x109u:
          goto $LN275_4;
        case 0x10Au:
          goto $LN276_2;
        case 0x10Bu:
          goto $LN277_2;
        case 0x10Cu:
          goto $LN278_3;
        case 0x10Du:
          goto $LN279_6;
        case 0x10Eu:
          goto $LN280_4;
        case 0x10Fu:
          goto $LN281_3;
        case 0x110u:
          goto $LN282_4;
        case 0x111u:
          goto $LN283_5;
        case 0x112u:
          goto $LN284_4;
        case 0x113u:
          goto $LN285_4;
        case 0x114u:
          goto $LN286_4;
        case 0x115u:
          goto $LN287_4;
        case 0x116u:
          goto $LN288_2;
        case 0x117u:
          goto $LN289_3;
        case 0x118u:
          goto $LN290_3;
        case 0x119u:
          goto $LN291_6;
        case 0x11Au:
          goto $LN292_4;
        case 0x11Bu:
          goto $LN293_3;
        case 0x11Cu:
          goto $LN294_4;
        case 0x11Du:
          goto $LN295_3;
        case 0x11Eu:
          goto $LN296_9;
        case 0x11Fu:
          goto $LN297_3;
        case 0x120u:
          goto $LN298_4;
        case 0x121u:
          goto $LN299_3;
        case 0x122u:
          goto $LN300_4;
        case 0x123u:
          goto $LN301_1;
        case 0x124u:
          goto $LN302_2;
        case 0x125u:
          goto $LN303_4;
        case 0x126u:
          goto $LN304_4;
        case 0x127u:
          goto $LN305_4;
        case 0x128u:
          goto $LN306_3;
        case 0x129u:
          goto $LN307_4;
        case 0x12Au:
          goto $LN308_4;
        case 0x12Bu:
          goto $LN309_4;
        case 0x12Cu:
          goto $LN310_2;
        case 0x12Du:
          goto $LN311_3;
        case 0x12Eu:
          goto $LN312_3;
        case 0x12Fu:
          goto $LN313_3;
        case 0x130u:
          goto $LN314_4;
        case 0x131u:
          goto $LN315_3;
        case 0x132u:
          goto $LN316_2;
        case 0x133u:
          goto $LN317_2;
        case 0x134u:
          goto $LN318_4;
        case 0x135u:
          goto $LN319_4;
        case 0x136u:
          goto $LN320_4;
        case 0x137u:
          goto $LN321_5;
        case 0x138u:
          goto $LN322_2;
        case 0x139u:
          result = 5i64;
          break;
        case 0x13Au:
          result = 133i64;
          break;
        case 0x13Bu:
          result = 6i64;
          break;
        case 0x13Cu:
          result = 69i64;
          break;
        case 0x13Du:
          result = 37i64;
          break;
        case 0x13Eu:
          result = 165i64;
          break;
        case 0x13Fu:
          result = 38i64;
          break;
        case 0x140u:
          result = 101i64;
          break;
        case 0x141u:
          result = 21i64;
          break;
        case 0x142u:
          result = 22i64;
          break;
        case 0x143u:
          result = 85i64;
          break;
        case 0x144u:
          result = 53i64;
          break;
        case 0x145u:
          result = 54i64;
          break;
        case 0x146u:
          result = 117i64;
          break;
        case 0x147u:
          result = 261i64;
          break;
        case 0x148u:
          result = 262i64;
          break;
        case 0x149u:
          result = 325i64;
          break;
        case 0x14Au:
          result = 293i64;
          break;
        case 0x14Bu:
          result = 294i64;
          break;
        case 0x14Cu:
          result = 357i64;
          break;
        case 0x14Du:
          result = 1029i64;
          break;
        case 0x14Eu:
          result = 1030i64;
          break;
        case 0x14Fu:
          result = 1093i64;
          break;
        case 0x150u:
          result = 1061i64;
          break;
        case 0x151u:
          result = 1062i64;
          break;
        case 0x152u:
          result = 1125i64;
          break;
        case 0x153u:
          result = 1045i64;
          break;
        case 0x154u:
          result = 1046i64;
          break;
        case 0x155u:
          result = 1109i64;
          break;
        case 0x156u:
          result = 1077i64;
          break;
        case 0x157u:
          result = 1078i64;
          break;
        case 0x158u:
          result = 1141i64;
          break;
        case 0x159u:
          result = 1285i64;
          break;
        case 0x15Au:
          result = 1286i64;
          break;
        case 0x15Bu:
          result = 1349i64;
          break;
        case 0x15Cu:
          result = 1317i64;
          break;
        case 0x15Du:
          result = 1318i64;
          break;
        case 0x15Eu:
          result = 1381i64;
          break;
        case 0x15Fu:
          result = 2053i64;
          break;
        case 0x160u:
          result = 2181i64;
          break;
        case 0x161u:
          result = 2054i64;
          break;
        case 0x162u:
          result = 2117i64;
          break;
        case 0x163u:
          result = 2085i64;
          break;
        case 0x164u:
          result = 2213i64;
          break;
        case 0x165u:
          result = 2086i64;
          break;
        case 0x166u:
          result = 2149i64;
          break;
        case 0x167u:
          result = 2069i64;
          break;
        case 0x168u:
          result = 2070i64;
          break;
        case 0x169u:
          result = 2133i64;
          break;
        case 0x16Au:
          result = 2101i64;
          break;
        case 0x16Bu:
          result = 2102i64;
          break;
        case 0x16Cu:
          result = 2165i64;
          break;
        case 0x16Du:
          result = 2309i64;
          break;
        case 0x16Eu:
          result = 2310i64;
          break;
        case 0x16Fu:
          result = 2373i64;
          break;
        case 0x170u:
          result = 2341i64;
          break;
        case 0x171u:
          result = 2342i64;
          break;
        case 0x172u:
          result = 2405i64;
          break;
        case 0x173u:
          result = 8197i64;
          break;
        case 0x174u:
          result = 8325i64;
          break;
        case 0x175u:
          result = 8198i64;
          break;
        case 0x176u:
          result = 8261i64;
          break;
        case 0x177u:
          result = 8229i64;
          break;
        case 0x178u:
          result = 8357i64;
          break;
        case 0x179u:
          result = 8230i64;
          break;
        case 0x17Au:
          result = 8293i64;
          break;
        case 0x17Bu:
          result = 8213i64;
          break;
        case 0x17Cu:
          result = 8214i64;
          break;
        case 0x17Du:
          result = 8277i64;
          break;
        case 0x17Eu:
          result = 8245i64;
          break;
        case 0x17Fu:
          result = 8246i64;
          break;
        case 0x180u:
          result = 8309i64;
          break;
        case 0x181u:
          result = 8453i64;
          break;
        case 0x182u:
          result = 8454i64;
          break;
        case 0x183u:
          result = 8517i64;
          break;
        case 0x184u:
          result = 8485i64;
          break;
        case 0x185u:
          result = 8486i64;
          break;
        case 0x186u:
          result = 8549i64;
          break;
        case 0x187u:
          result = 13i64;
          break;
        case 0x188u:
          result = 141i64;
          break;
        case 0x189u:
          result = 14i64;
          break;
        case 0x18Au:
          result = 77i64;
          break;
        case 0x18Bu:
          result = 45i64;
          break;
        case 0x18Cu:
          result = 173i64;
          break;
        case 0x18Du:
          result = 46i64;
          break;
        case 0x18Eu:
          result = 109i64;
          break;
        case 0x18Fu:
          result = 29i64;
          break;
        case 0x190u:
          result = 30i64;
          break;
        case 0x191u:
          result = 93i64;
          break;
        case 0x192u:
          result = 61i64;
          break;
        case 0x193u:
          result = 62i64;
          break;
        case 0x194u:
          result = 125i64;
          break;
        case 0x195u:
          result = 269i64;
          break;
        case 0x196u:
          result = 270i64;
          break;
        case 0x197u:
          result = 333i64;
          break;
        case 0x198u:
          result = 301i64;
          break;
        case 0x199u:
          result = 302i64;
          break;
        case 0x19Au:
          result = 365i64;
          break;
        case 0x19Bu:
          result = 1037i64;
          break;
        case 0x19Cu:
          result = 1038i64;
          break;
        case 0x19Du:
          result = 1101i64;
          break;
        case 0x19Eu:
          result = 1069i64;
          break;
        case 0x19Fu:
          result = 1070i64;
          break;
        case 0x1A0u:
          result = 1133i64;
          break;
        case 0x1A1u:
          result = 1053i64;
          break;
        case 0x1A2u:
          result = 1054i64;
          break;
        case 0x1A3u:
          result = 1117i64;
          break;
        case 0x1A4u:
          result = 1085i64;
          break;
        case 0x1A5u:
          result = 1086i64;
          break;
        case 0x1A6u:
          result = 1149i64;
          break;
        case 0x1A7u:
          result = 1293i64;
          break;
        case 0x1A8u:
          result = 1294i64;
          break;
        case 0x1A9u:
          result = 1357i64;
          break;
        case 0x1AAu:
          result = 1325i64;
          break;
        case 0x1ABu:
          result = 1326i64;
          break;
        case 0x1ACu:
          result = 1389i64;
          break;
        case 0x1ADu:
          result = 2061i64;
          break;
        case 0x1AEu:
          result = 2189i64;
          break;
        case 0x1AFu:
          result = 2062i64;
          break;
        case 0x1B0u:
          result = 2125i64;
          break;
        case 0x1B1u:
          result = 2093i64;
          break;
        case 0x1B2u:
          result = 2221i64;
          break;
        case 0x1B3u:
          result = 2094i64;
          break;
        case 0x1B4u:
          result = 2157i64;
          break;
        case 0x1B5u:
          result = 2077i64;
          break;
        case 0x1B6u:
          result = 2078i64;
          break;
        case 0x1B7u:
          result = 2141i64;
          break;
        case 0x1B8u:
          result = 2109i64;
          break;
        case 0x1B9u:
          result = 2110i64;
          break;
        case 0x1BAu:
          result = 2173i64;
          break;
        case 0x1BBu:
          result = 2317i64;
          break;
        case 0x1BCu:
          result = 2318i64;
          break;
        case 0x1BDu:
          result = 2381i64;
          break;
        case 0x1BEu:
          result = 2349i64;
          break;
        case 0x1BFu:
          result = 2350i64;
          break;
        case 0x1C0u:
          result = 2413i64;
          break;
        case 0x1C1u:
          result = 8205i64;
          break;
        case 0x1C2u:
          result = 8333i64;
          break;
        case 0x1C3u:
          result = 8206i64;
          break;
        case 0x1C4u:
          result = 8269i64;
          break;
        case 0x1C5u:
          result = 8237i64;
          break;
        case 0x1C6u:
          result = 8365i64;
          break;
        case 0x1C7u:
          result = 8238i64;
          break;
        case 0x1C8u:
          result = 8301i64;
          break;
        case 0x1C9u:
          result = 8221i64;
          break;
        case 0x1CAu:
          result = 8222i64;
          break;
        case 0x1CBu:
          result = 8285i64;
          break;
        case 0x1CCu:
          result = 8253i64;
          break;
        case 0x1CDu:
          result = 8254i64;
          break;
        case 0x1CEu:
          result = 8317i64;
          break;
        case 0x1CFu:
          result = 8461i64;
          break;
        case 0x1D0u:
          result = 8462i64;
          break;
        case 0x1D1u:
          result = 8525i64;
          break;
        case 0x1D2u:
          result = 8493i64;
          break;
        case 0x1D3u:
          result = 8494i64;
          break;
        case 0x1D4u:
          result = 8557i64;
          break;
        case 0x1D5u:
          goto $LN323_4;
        case 0x1D6u:
          goto $LN324_5;
        case 0x1D7u:
          goto $LN325_3;
        case 0x1D8u:
          goto $LN326_4;
        case 0x1D9u:
          goto $LN327_8;
        case 0x1DAu:
          goto $LN328_4;
        case 0x1DBu:
          goto $LN329_3;
        case 0x1DCu:
          goto $LN330_4;
        case 0x1DDu:
          goto $LN331_4;
        case 0x1DEu:
          goto $LN332_2;
        case 0x1DFu:
          goto $LN333_3;
        case 0x1E0u:
          goto $LN334_4;
        case 0x1E1u:
          goto $LN335_4;
        case 0x1E2u:
          goto $LN336_2;
        case 0x1E3u:
          goto $LN337_3;
        case 0x1E4u:
          goto $LN338_3;
        case 0x1E5u:
          goto $LN339_3;
        case 0x1E6u:
          goto $LN340_4;
        case 0x1E7u:
          goto $LN341_3;
        case 0x1E8u:
          goto $LN342_3;
        case 0x1E9u:
          goto $LN343_8;
        case 0x1EAu:
          goto $LN344_5;
        case 0x1EBu:
          goto $LN345_3;
        case 0x1ECu:
          goto $LN346_3;
        case 0x1EDu:
          goto $LN347_5;
        case 0x1EEu:
          goto $LN348_3;
        case 0x1EFu:
          goto $LN349_2;
        case 0x1F0u:
          goto $LN350_3;
        case 0x1F1u:
          goto $LN351_3;
        case 0x1F2u:
          goto $LN352_2;
        case 0x1F3u:
          goto $LN353_6;
        case 0x1F4u:
          goto $LN354_3;
        case 0x1F5u:
          goto $LN355_4;
        case 0x1F6u:
          goto $LN356_3;
        case 0x1F7u:
          goto $LN357_3;
        case 0x1F8u:
          goto $LN358_3;
        case 0x1F9u:
          goto $LN359_3;
        case 0x1FAu:
          goto $LN360_3;
        case 0x1FBu:
          goto $LN361_2;
        case 0x1FCu:
          goto $LN362_3;
        case 0x1FDu:
          goto $LN363_2;
        case 0x1FEu:
          goto $LN364_3;
        case 0x1FFu:
          goto $LN365_4;
        case 0x200u:
          goto $LN366_3;
        case 0x201u:
          goto $LN367_6;
        case 0x202u:
          goto $LN368_6;
        case 0x203u:
          goto $LN369_4;
        case 0x204u:
          goto $LN370_3;
        case 0x205u:
          goto $LN371_4;
        case 0x206u:
          goto $LN372_5;
        case 0x207u:
          goto $LN373_6;
        case 0x208u:
          goto $LN374_2;
        case 0x209u:
          goto $LN375_3;
        case 0x20Au:
          goto $LN376_4;
        case 0x20Bu:
          goto $LN377_2;
        case 0x20Cu:
          goto $LN378_3;
        case 0x20Du:
          goto $LN379_4;
        case 0x20Eu:
          goto $LN380_4;
        case 0x20Fu:
          goto $LN381_3;
        case 0x210u:
          goto $LN382_3;
        case 0x211u:
          goto $LN383_3;
        case 0x212u:
          goto $LN384_5;
        case 0x213u:
          goto $LN385_4;
        case 0x214u:
          goto $LN386_5;
        case 0x215u:
          goto $LN387_4;
        case 0x216u:
          goto $LN388_2;
        case 0x217u:
          goto $LN389_4;
        case 0x218u:
          goto $LN390_5;
        case 0x219u:
          goto $LN391_2;
        case 0x21Au:
          goto $LN392_3;
        case 0x21Bu:
          goto $LN393_4;
        case 0x21Cu:
          goto $LN394_3;
        case 0x21Du:
          goto $LN395_3;
        case 0x21Eu:
          goto $LN396_3;
        case 0x21Fu:
          goto $LN397_5;
        case 0x220u:
          goto $LN398_2;
        case 0x221u:
          goto $LN399_4;
        case 0x222u:
          goto $LN400_2;
        case 0x223u:
          goto $LN401_2;
        case 0x224u:
          goto $LN402_3;
        case 0x225u:
          goto $LN403_4;
        case 0x226u:
          goto $LN404_3;
        case 0x227u:
          goto $LN405_4;
        case 0x228u:
          goto $LN406_3;
        case 0x229u:
          result = 524292i64;
          break;
        case 0x22Au:
          result = 524293i64;
          break;
        case 0x22Bu:
          result = 524356i64;
          break;
        case 0x22Cu:
          result = 557060i64;
          break;
        case 0x22Du:
          result = 557188i64;
          break;
        case 0x22Eu:
          result = 557061i64;
          break;
        case 0x22Fu:
          result = 557124i64;
          break;
        case 0x230u:
          result = 589828i64;
          break;
        case 0x231u:
          result = 589956i64;
          break;
        case 0x232u:
          result = 589829i64;
          break;
        case 0x233u:
          result = 589892i64;
          break;
        case 0x234u:
          result = 589844i64;
          break;
        case 0x235u:
          result = 589845i64;
          break;
        case 0x236u:
          result = 589908i64;
          break;
        case 0x237u:
          result = 786436i64;
          break;
        case 0x238u:
          result = 786564i64;
          break;
        case 0x239u:
          result = 786437i64;
          break;
        case 0x23Au:
          result = 786500i64;
          break;
        case 0x23Bu:
          result = 786452i64;
          break;
        case 0x23Cu:
          result = 786453i64;
          break;
        case 0x23Du:
          result = 786516i64;
          break;
        case 0x23Eu:
          result = 524300i64;
          break;
        case 0x23Fu:
          result = 524301i64;
          break;
        case 0x240u:
          result = 524364i64;
          break;
        case 0x241u:
          result = 557068i64;
          break;
        case 0x242u:
          result = 557196i64;
          break;
        case 0x243u:
          result = 557069i64;
          break;
        case 0x244u:
          result = 557132i64;
          break;
        case 0x245u:
          result = 589836i64;
          break;
        case 0x246u:
          result = 589964i64;
          break;
        case 0x247u:
          result = 589837i64;
          break;
        case 0x248u:
          result = 589900i64;
          break;
        case 0x249u:
          result = 589852i64;
          break;
        case 0x24Au:
          result = 589853i64;
          break;
        case 0x24Bu:
          result = 589916i64;
          break;
        case 0x24Cu:
          result = 786444i64;
          break;
        case 0x24Du:
          result = 786572i64;
          break;
        case 0x24Eu:
          result = 786445i64;
          break;
        case 0x24Fu:
          result = 786508i64;
          break;
        case 0x250u:
          result = 786460i64;
          break;
        case 0x251u:
          result = 786461i64;
          break;
        case 0x252u:
          result = 786524i64;
          break;
        case 0x253u:
          goto $LN407_6;
        case 0x254u:
          goto $LN408_5;
        case 0x255u:
          goto $LN409_3;
        case 0x256u:
          goto $LN410_5;
        case 0x257u:
          goto $LN411_5;
        case 0x258u:
          goto $LN412_4;
        case 0x259u:
          goto $LN413_4;
        case 0x25Au:
          goto $LN414_3;
        case 0x25Bu:
          goto $LN415_5;
        case 0x25Cu:
          goto $LN416_4;
        case 0x25Du:
          goto $LN417_4;
        case 0x25Eu:
          goto $LN418_4;
        case 0x25Fu:
          goto $LN419_3;
        case 0x260u:
          goto $LN420_3;
        case 0x261u:
          goto $LN421_4;
        case 0x262u:
          goto $LN422_4;
        case 0x263u:
          goto $LN423_2;
        case 0x264u:
          goto $LN424_2;
        case 0x265u:
          goto $LN425_4;
        case 0x266u:
          goto $LN426_2;
        case 0x267u:
          goto $LN427_4;
        case 0x268u:
          goto $LN428_3;
        case 0x269u:
          goto $LN429_3;
        case 0x26Au:
          goto $LN430_3;
        case 0x26Bu:
          goto $LN431_3;
        case 0x26Cu:
          goto $LN432_3;
        case 0x26Du:
          goto $LN433_3;
        case 0x26Eu:
          goto $LN434_2;
        case 0x26Fu:
          goto $LN435_3;
        case 0x270u:
          goto $LN436_2;
        case 0x271u:
          goto $LN437_5;
        case 0x272u:
          goto $LN438_3;
        case 0x273u:
          goto $LN439_4;
        case 0x274u:
          goto $LN440_3;
        case 0x275u:
          goto $LN441_3;
        case 0x276u:
          goto $LN442_3;
        case 0x277u:
          goto $LN443_2;
        case 0x278u:
          goto $LN444_3;
        case 0x279u:
          goto $LN445_3;
        case 0x27Au:
          goto $LN446_2;
        case 0x27Bu:
          goto $LN447_5;
        case 0x27Cu:
          goto $LN448_2;
        case 0x27Du:
          goto $LN449_4;
        case 0x27Eu:
          goto $LN450_3;
        case 0x27Fu:
          goto $LN451_4;
        case 0x280u:
          goto $LN452_2;
        case 0x281u:
          goto $LN453_3;
        case 0x282u:
          goto $LN454_3;
        case 0x283u:
          goto $LN455_3;
        case 0x284u:
          goto $LN456_2;
        case 0x285u:
          goto $LN457_4;
        case 0x286u:
          goto $LN458_1;
        case 0x287u:
          goto $LN459_3;
        case 0x288u:
          goto $LN460_3;
        case 0x289u:
          goto $LN461_2;
        case 0x28Au:
          goto $LN462_3;
        case 0x28Bu:
          goto $LN463_2;
        case 0x28Cu:
          goto $LN464_3;
        case 0x28Du:
          goto $LN465_1;
        case 0x28Eu:
          goto $LN466_2;
        case 0x28Fu:
          goto $LN467_2;
        case 0x290u:
          goto $LN468_3;
        case 0x291u:
          goto $LN469_4;
        case 0x292u:
          goto $LN470_3;
        case 0x293u:
          goto $LN471_3;
        case 0x294u:
          goto $LN472_1;
        case 0x295u:
          goto $LN473_2;
        case 0x296u:
          goto $LN474_2;
        case 0x297u:
          goto $LN475_4;
        case 0x298u:
          goto $LN476_4;
        case 0x299u:
          goto $LN477_4;
        case 0x29Au:
          goto $LN478_4;
        case 0x29Bu:
          goto $LN479_5;
        case 0x29Cu:
          goto $LN480_3;
        case 0x29Du:
          goto $LN481_5;
        case 0x29Eu:
          goto $LN482_2;
        case 0x29Fu:
          goto $LN483_3;
        case 0x2A0u:
          goto $LN484_6;
        case 0x2A1u:
          goto $LN485_3;
        case 0x2A2u:
          goto $LN486_6;
        case 0x2A3u:
          goto $LN487_3;
        case 0x2A4u:
          goto $LN488_5;
        case 0x2A5u:
          goto $LN489_3;
        case 0x2A6u:
          goto $LN490_4;
        case 0x2A7u:
          goto $LN491_5;
        case 0x2A8u:
          goto $LN492_3;
        case 0x2A9u:
          goto $LN493_3;
        case 0x2AAu:
          goto $LN494_4;
        case 0x2ABu:
          goto $LN495_3;
        case 0x2ACu:
          goto $LN496_3;
        case 0x2ADu:
          goto $LN497_3;
        case 0x2AEu:
          goto $LN498_3;
        case 0x2AFu:
          goto $LN499_4;
        case 0x2B0u:
          goto $LN500_4;
        case 0x2B1u:
          goto $LN501_3;
        case 0x2B2u:
          goto $LN502_3;
        case 0x2B3u:
          goto $LN503_3;
        case 0x2B4u:
          goto $LN504_5;
        case 0x2B5u:
          goto $LN505_3;
        case 0x2B6u:
          goto $LN506_3;
        case 0x2B7u:
          goto $LN507_3;
        case 0x2B8u:
          goto $LN508_4;
        case 0x2B9u:
          goto $LN509_4;
        case 0x2BAu:
          goto $LN510_3;
        case 0x2BBu:
          goto $LN511_2;
        case 0x2BCu:
          goto $LN512_3;
        case 0x2BDu:
          goto $LN513_4;
        case 0x2BEu:
          goto $LN514_3;
        case 0x2BFu:
          goto $LN515_3;
        case 0x2C0u:
          goto $LN516_3;
        case 0x2C1u:
          goto $LN517_3;
        case 0x2C2u:
          goto $LN518_3;
        case 0x2C3u:
          goto $LN519_3;
        case 0x2C4u:
          goto $LN520_2;
        case 0x2C5u:
          goto $LN521_1;
        case 0x2C6u:
          goto $LN522_2;
        case 0x2C7u:
          goto $LN523_4;
        case 0x2C8u:
          goto $LN524_4;
        case 0x2C9u:
          goto $LN525_2;
        case 0x2CAu:
          goto $LN526_2;
        case 0x2CBu:
          goto $LN527_3;
        case 0x2CCu:
          goto $LN528_2;
        case 0x2CDu:
          goto $LN529_2;
        case 0x2CEu:
          goto $LN530_2;
        case 0x2CFu:
          goto $LN531_2;
        case 0x2D0u:
          goto $LN532_3;
        case 0x2D1u:
          goto $LN533_2;
        case 0x2D2u:
          goto $LN534_3;
        case 0x2D3u:
          goto $LN535_2;
        case 0x2D4u:
          goto $LN536_4;
        case 0x2D5u:
          goto $LN537_2;
        case 0x2D6u:
          goto $LN538_2;
        case 0x2D7u:
          goto $LN539_2;
        case 0x2D8u:
          goto $LN540_3;
        case 0x2D9u:
          goto $LN541_10;
        case 0x2DAu:
          goto $LN542_10;
        case 0x2DBu:
          result = 1048580i64;
          break;
        case 0x2DCu:
          result = 1048708i64;
          break;
        case 0x2DDu:
          result = 1048581i64;
          break;
        case 0x2DEu:
          result = 1048612i64;
          break;
        case 0x2DFu:
          result = 1048740i64;
          break;
        case 0x2E0u:
          result = 1048613i64;
          break;
        case 0x2E1u:
          result = 1048596i64;
          break;
        case 0x2E2u:
          result = 1048597i64;
          break;
        case 0x2E3u:
          result = 1048628i64;
          break;
        case 0x2E4u:
          result = 1048629i64;
          break;
        case 0x2E5u:
          result = 1048836i64;
          break;
        case 0x2E6u:
          result = 1048837i64;
          break;
        case 0x2E7u:
          result = 1048868i64;
          break;
        case 0x2E8u:
          result = 1048869i64;
          break;
        case 0x2E9u:
          result = 1179652i64;
          break;
        case 0x2EAu:
          result = 1179780i64;
          break;
        case 0x2EBu:
          result = 1179653i64;
          break;
        case 0x2ECu:
          result = 1179716i64;
          break;
        case 0x2EDu:
          result = 1179684i64;
          break;
        case 0x2EEu:
          result = 1179812i64;
          break;
        case 0x2EFu:
          result = 1179685i64;
          break;
        case 0x2F0u:
          result = 1179748i64;
          break;
        case 0x2F1u:
          result = 1179668i64;
          break;
        case 0x2F2u:
          result = 1179669i64;
          break;
        case 0x2F3u:
          result = 1179732i64;
          break;
        case 0x2F4u:
          result = 1179700i64;
          break;
        case 0x2F5u:
          result = 1179701i64;
          break;
        case 0x2F6u:
          result = 1179764i64;
          break;
        case 0x2F7u:
          result = 1179908i64;
          break;
        case 0x2F8u:
          result = 1179909i64;
          break;
        case 0x2F9u:
          result = 1179972i64;
          break;
        case 0x2FAu:
          result = 1179940i64;
          break;
        case 0x2FBu:
          result = 1179941i64;
          break;
        case 0x2FCu:
          result = 1180004i64;
          break;
        case 0x2FDu:
          result = 1048588i64;
          break;
        case 0x2FEu:
          result = 1048716i64;
          break;
        case 0x2FFu:
          result = 1048589i64;
          break;
        case 0x300u:
          result = 1048620i64;
          break;
        case 0x301u:
          result = 1048748i64;
          break;
        case 0x302u:
          result = 1048621i64;
          break;
        case 0x303u:
          result = 1048604i64;
          break;
        case 0x304u:
          result = 1048605i64;
          break;
        case 0x305u:
          result = 1048636i64;
          break;
        case 0x306u:
          result = 1048637i64;
          break;
        case 0x307u:
          result = 1048844i64;
          break;
        case 0x308u:
          result = 1048845i64;
          break;
        case 0x309u:
          result = 1048876i64;
          break;
        case 0x30Au:
          result = 1048877i64;
          break;
        case 0x30Bu:
          result = 1179660i64;
          break;
        case 0x30Cu:
          result = 1179788i64;
          break;
        case 0x30Du:
          result = 1179661i64;
          break;
        case 0x30Eu:
          result = 1179724i64;
          break;
        case 0x30Fu:
          result = 1179692i64;
          break;
        case 0x310u:
          result = 1179820i64;
          break;
        case 0x311u:
          result = 1179693i64;
          break;
        case 0x312u:
          result = 1179756i64;
          break;
        case 0x313u:
          result = 1179676i64;
          break;
        case 0x314u:
          result = 1179677i64;
          break;
        case 0x315u:
          result = 1179740i64;
          break;
        case 0x316u:
          result = 1179708i64;
          break;
        case 0x317u:
          result = 1179709i64;
          break;
        case 0x318u:
          result = 1179772i64;
          break;
        case 0x319u:
          result = 1179916i64;
          break;
        case 0x31Au:
          result = 1179917i64;
          break;
        case 0x31Bu:
          result = 1179980i64;
          break;
        case 0x31Cu:
          result = 1179948i64;
          break;
        case 0x31Du:
          result = 1179949i64;
          break;
        case 0x31Eu:
          result = 1180012i64;
          break;
        case 0x31Fu:
          goto $LN543_2;
        case 0x320u:
          goto $LN544_2;
        case 0x321u:
          goto $LN545_7;
        case 0x322u:
          goto $LN546_4;
        case 0x323u:
          goto $LN547_4;
        case 0x324u:
          goto $LN548_3;
        case 0x325u:
          goto $LN549_4;
        case 0x326u:
          goto $LN550_6;
        case 0x327u:
          goto $LN551_4;
        case 0x328u:
          goto $LN552_2;
        case 0x329u:
          goto $LN553_3;
        case 0x32Au:
          goto $LN554_4;
        case 0x32Bu:
          goto $LN555_4;
        case 0x32Cu:
          goto $LN556_5;
        case 0x32Du:
          goto $LN557_2;
        case 0x32Eu:
          goto $LN558_3;
        case 0x32Fu:
          goto $LN559_3;
        case 0x330u:
          goto $LN560_4;
        case 0x331u:
          goto $LN561_2;
        case 0x332u:
          goto $LN562_4;
        case 0x333u:
          goto $LN563_3;
        case 0x334u:
          goto $LN564_4;
        case 0x335u:
          goto $LN565_4;
        case 0x336u:
          goto $LN566_2;
        case 0x337u:
          goto $LN567_3;
        case 0x338u:
          goto $LN568_4;
        case 0x339u:
          goto $LN569_3;
        case 0x33Au:
          goto $LN570_2;
        case 0x33Bu:
          goto $LN571_3;
        case 0x33Cu:
          goto $LN572_3;
        case 0x33Du:
          goto $LN573_3;
        case 0x33Eu:
          goto $LN574_3;
        case 0x33Fu:
          goto $LN575_3;
        case 0x340u:
          goto $LN576_4;
        case 0x341u:
          goto $LN577_3;
        case 0x342u:
          goto $LN578_3;
        case 0x343u:
          goto $LN579_2;
        case 0x344u:
          goto $LN580_3;
        case 0x345u:
          goto $LN581_4;
        case 0x346u:
          goto $LN582_3;
        case 0x347u:
          goto $LN583_3;
        case 0x348u:
          goto $LN584_2;
        case 0x349u:
          goto $LN585_5;
        case 0x34Au:
          goto $LN586_3;
        case 0x34Bu:
          goto $LN587_4;
        case 0x34Cu:
          goto $LN588_4;
        case 0x34Du:
          goto $LN589_4;
        case 0x34Eu:
          goto $LN590_3;
        case 0x34Fu:
          goto $LN591_4;
        case 0x350u:
          goto $LN592_2;
        case 0x351u:
          goto $LN593_3;
        case 0x352u:
          goto $LN594_3;
        case 0x353u:
          goto $LN595_3;
        case 0x354u:
          goto $LN596_3;
        case 0x355u:
          goto $LN597_3;
        case 0x356u:
          goto $LN598_2;
        case 0x357u:
          goto $LN599_3;
        case 0x358u:
          goto $LN600_3;
        case 0x359u:
          goto $LN601_4;
        case 0x35Au:
          goto $LN602_5;
        case 0x35Bu:
          goto $LN603_2;
        case 0x35Cu:
          goto $LN604_4;
        case 0x35Du:
          goto $LN605_3;
        case 0x35Eu:
          goto $LN606_3;
        case 0x35Fu:
          goto $LN607_2;
        case 0x360u:
          goto $LN608_3;
        case 0x361u:
          goto $LN609_5;
        case 0x362u:
          goto $LN610_3;
        case 0x363u:
          goto $LN611_3;
        case 0x364u:
          goto $LN612_2;
        case 0x365u:
          goto $LN613_4;
        case 0x366u:
          goto $LN614_4;
        case 0x367u:
          goto $LN615_5;
        case 0x368u:
          goto $LN616_4;
        default:
          return 0i64;
      }
    }
    else
    {
      return 0i64;
    }
  }
  else
  {
    switch ( 0x40000000u )
    {
      case 0u:
$LN11_159:
        result = 1i64;
        break;
      case 1u:
$LN620_4:
        result = 129i64;
        break;
      case 2u:
$LN13_145:
        result = 2i64;
        break;
      case 3u:
$LN14_123:
        result = 65i64;
        break;
      case 4u:
$LN15_133:
        result = 33i64;
        break;
      case 5u:
$LN16_110:
        result = 161i64;
        break;
      case 6u:
$LN17_96:
        result = 34i64;
        break;
      case 7u:
$LN18_93:
        result = 97i64;
        break;
      case 8u:
$LN19_145:
        result = 17i64;
        break;
      case 9u:
$LN20_78:
        result = 18i64;
        break;
      case 0xAu:
$LN21_69:
        result = 81i64;
        break;
      case 0xBu:
$LN22_62:
        result = 49i64;
        break;
      case 0xCu:
$LN23_70:
        result = 50i64;
        break;
      case 0xDu:
$LN24_67:
        result = 113i64;
        break;
      case 0xEu:
$LN25_51:
        result = 257i64;
        break;
      case 0xFu:
$LN26_55:
        result = 258i64;
        break;
      case 0x10u:
$LN27_55:
        result = 321i64;
        break;
      case 0x11u:
$LN28_47:
        result = 289i64;
        break;
      case 0x12u:
$LN29_45:
        result = 290i64;
        break;
      case 0x13u:
$LN30_49:
        result = 353i64;
        break;
      case 0x15u:
$LN31_33:
        result = 1025i64;
        break;
      case 0x16u:
$LN32_34:
        result = 1026i64;
        break;
      case 0x17u:
$LN33_29:
        result = 1089i64;
        break;
      case 0x18u:
$LN34_27:
        result = 1057i64;
        break;
      case 0x19u:
$LN35_24:
        result = 1058i64;
        break;
      case 0x1Au:
$LN36_29:
        result = 1121i64;
        break;
      case 0x1Bu:
$LN37_36:
        result = 1041i64;
        break;
      case 0x1Cu:
$LN38_29:
        result = 1042i64;
        break;
      case 0x1Du:
$LN39_28:
        result = 1105i64;
        break;
      case 0x1Eu:
$LN40_28:
        result = 1073i64;
        break;
      case 0x1Fu:
$LN41_23:
        result = 1074i64;
        break;
      case 0x20u:
$LN42_26:
        result = 1137i64;
        break;
      case 0x21u:
$LN43_23:
        result = 1281i64;
        break;
      case 0x22u:
$LN44_25:
        result = 1282i64;
        break;
      case 0x23u:
$LN45_28:
        result = 1345i64;
        break;
      case 0x24u:
$LN46_20:
        result = 1313i64;
        break;
      case 0x25u:
$LN47_19:
        result = 1314i64;
        break;
      case 0x26u:
$LN48_17:
        result = 1377i64;
        break;
      case 0x27u:
$LN49_20:
        result = 2049i64;
        break;
      case 0x28u:
$LN50_18:
        result = 2177i64;
        break;
      case 0x29u:
$LN51_16:
        result = 2050i64;
        break;
      case 0x2Au:
$LN52_17:
        result = 2113i64;
        break;
      case 0x2Bu:
$LN53_24:
        result = 2081i64;
        break;
      case 0x2Cu:
$LN54_20:
        result = 2209i64;
        break;
      case 0x2Du:
$LN55_15:
        result = 2082i64;
        break;
      case 0x2Eu:
$LN56_15:
        result = 2145i64;
        break;
      case 0x2Fu:
$LN57_16:
        result = 2065i64;
        break;
      case 0x30u:
$LN58_17:
        result = 2066i64;
        break;
      case 0x31u:
$LN59_15:
        result = 2129i64;
        break;
      case 0x32u:
$LN60_12:
        result = 2097i64;
        break;
      case 0x33u:
$LN61_12:
        result = 2098i64;
        break;
      case 0x34u:
$LN62_16:
        result = 2161i64;
        break;
      case 0x35u:
$LN63_17:
        result = 2305i64;
        break;
      case 0x36u:
$LN64_22:
        result = 2306i64;
        break;
      case 0x37u:
$LN65_20:
        result = 2369i64;
        break;
      case 0x38u:
$LN66_17:
        result = 2337i64;
        break;
      case 0x39u:
$LN67_18:
        result = 2338i64;
        break;
      case 0x3Au:
$LN68_17:
        result = 2401i64;
        break;
      case 0x3Bu:
$LN69_14:
        result = 8193i64;
        break;
      case 0x3Cu:
$LN70_12:
        result = 8321i64;
        break;
      case 0x3Du:
$LN71_19:
        result = 8194i64;
        break;
      case 0x3Eu:
$LN72_15:
        result = 8257i64;
        break;
      case 0x3Fu:
$LN73_11:
        result = 8225i64;
        break;
      case 0x40u:
$LN74_16:
        result = 8353i64;
        break;
      case 0x41u:
$LN75_19:
        result = 8226i64;
        break;
      case 0x42u:
$LN76_18:
        result = 8289i64;
        break;
      case 0x43u:
$LN77_21:
        result = 8209i64;
        break;
      case 0x44u:
$LN78_14:
        result = 8210i64;
        break;
      case 0x45u:
$LN79_16:
        result = 8273i64;
        break;
      case 0x46u:
$LN80_14:
        result = 8241i64;
        break;
      case 0x47u:
$LN81_17:
        result = 8242i64;
        break;
      case 0x48u:
$LN82_15:
        result = 8305i64;
        break;
      case 0x49u:
$LN83_11:
        result = 8449i64;
        break;
      case 0x4Au:
$LN84_17:
        result = 8450i64;
        break;
      case 0x4Bu:
$LN85_15:
        result = 8513i64;
        break;
      case 0x4Cu:
$LN86_16:
        result = 8481i64;
        break;
      case 0x4Du:
$LN87_13:
        result = 8482i64;
        break;
      case 0x4Eu:
$LN88_12:
        result = 8545i64;
        break;
      case 0x4Fu:
$LN89_18:
        result = 9i64;
        break;
      case 0x50u:
$LN90_14:
        result = 137i64;
        break;
      case 0x51u:
$LN91_11:
        result = 10i64;
        break;
      case 0x52u:
$LN92_10:
        result = 73i64;
        break;
      case 0x53u:
$LN93_12:
        result = 41i64;
        break;
      case 0x54u:
$LN94_10:
        result = 169i64;
        break;
      case 0x55u:
$LN95_9:
        result = 42i64;
        break;
      case 0x56u:
$LN96_8:
        result = 105i64;
        break;
      case 0x57u:
$LN97_10:
        result = 25i64;
        break;
      case 0x58u:
$LN98_11:
        result = 26i64;
        break;
      case 0x59u:
$LN99_10:
        result = 89i64;
        break;
      case 0x5Au:
$LN100_9:
        result = 57i64;
        break;
      case 0x5Bu:
$LN101_9:
        result = 58i64;
        break;
      case 0x5Cu:
$LN102_12:
        result = 121i64;
        break;
      case 0x5Du:
$LN103_8:
        result = 265i64;
        break;
      case 0x5Eu:
$LN104_9:
        result = 266i64;
        break;
      case 0x5Fu:
$LN105_10:
        result = 329i64;
        break;
      case 0x60u:
$LN106_11:
        result = 297i64;
        break;
      case 0x61u:
$LN107_10:
        result = 298i64;
        break;
      case 0x62u:
$LN108_9:
        result = 361i64;
        break;
      case 0x63u:
$LN109_13:
        result = 1033i64;
        break;
      case 0x64u:
$LN110_9:
        result = 1034i64;
        break;
      case 0x65u:
$LN111_9:
        result = 1097i64;
        break;
      case 0x66u:
$LN112_11:
        result = 1065i64;
        break;
      case 0x67u:
$LN113_12:
        result = 1066i64;
        break;
      case 0x68u:
$LN114_9:
        result = 1129i64;
        break;
      case 0x69u:
$LN115_16:
        result = 1049i64;
        break;
      case 0x6Au:
$LN116_9:
        result = 1050i64;
        break;
      case 0x6Bu:
$LN117_10:
        result = 1113i64;
        break;
      case 0x6Cu:
$LN118_11:
        result = 1081i64;
        break;
      case 0x6Du:
$LN119_11:
        result = 1082i64;
        break;
      case 0x6Eu:
$LN120_9:
        result = 1145i64;
        break;
      case 0x6Fu:
$LN121_8:
        result = 1289i64;
        break;
      case 0x70u:
$LN122_8:
        result = 1290i64;
        break;
      case 0x71u:
$LN123_9:
        result = 1353i64;
        break;
      case 0x72u:
$LN124_8:
        result = 1321i64;
        break;
      case 0x73u:
$LN125_9:
        result = 1322i64;
        break;
      case 0x74u:
$LN126_8:
        result = 1385i64;
        break;
      case 0x75u:
$LN127_8:
        result = 2057i64;
        break;
      case 0x76u:
$LN128_7:
        result = 2185i64;
        break;
      case 0x77u:
$LN129_7:
        result = 2058i64;
        break;
      case 0x78u:
$LN130_11:
        result = 2121i64;
        break;
      case 0x79u:
$LN131_8:
        result = 2089i64;
        break;
      case 0x7Au:
$LN132_8:
        result = 2217i64;
        break;
      case 0x7Bu:
$LN133_41:
        result = 2090i64;
        break;
      case 0x7Cu:
$LN134_10:
        result = 2153i64;
        break;
      case 0x7Du:
$LN135_4:
        result = 2073i64;
        break;
      case 0x7Eu:
$LN136_9:
        result = 2074i64;
        break;
      case 0x7Fu:
$LN137_5:
        result = 2137i64;
        break;
      case 0x80u:
$LN138_7:
        result = 2105i64;
        break;
      case 0x81u:
$LN139_5:
        result = 2106i64;
        break;
      case 0x82u:
$LN140_6:
        result = 2169i64;
        break;
      case 0x83u:
$LN141_4:
        result = 2313i64;
        break;
      case 0x84u:
$LN142_4:
        result = 2314i64;
        break;
      case 0x85u:
$LN143_8:
        result = 2377i64;
        break;
      case 0x86u:
$LN144_3:
        result = 2345i64;
        break;
      case 0x87u:
$LN145_6:
        result = 2346i64;
        break;
      case 0x88u:
$LN146_4:
        result = 2409i64;
        break;
      case 0x89u:
$LN147_4:
        result = 8201i64;
        break;
      case 0x8Au:
$LN148_6:
        result = 8329i64;
        break;
      case 0x8Bu:
$LN149_7:
        result = 8202i64;
        break;
      case 0x8Cu:
$LN150_10:
        result = 8265i64;
        break;
      case 0x8Du:
$LN151_7:
        result = 8233i64;
        break;
      case 0x8Eu:
$LN152_6:
        result = 8361i64;
        break;
      case 0x8Fu:
$LN153_3:
        result = 8234i64;
        break;
      case 0x90u:
$LN154_9:
        result = 8297i64;
        break;
      case 0x91u:
$LN155_6:
        result = 8217i64;
        break;
      case 0x92u:
$LN156_12:
        result = 8218i64;
        break;
      case 0x93u:
$LN157_5:
        result = 8281i64;
        break;
      case 0x94u:
$LN158_5:
        result = 8249i64;
        break;
      case 0x95u:
$LN159_6:
        result = 8250i64;
        break;
      case 0x96u:
$LN160_6:
        result = 8313i64;
        break;
      case 0x97u:
$LN161_6:
        result = 8457i64;
        break;
      case 0x98u:
$LN162_3:
        result = 8458i64;
        break;
      case 0x99u:
$LN163_3:
        result = 8521i64;
        break;
      case 0x9Au:
$LN164_6:
        result = 8489i64;
        break;
      case 0x9Bu:
$LN165_4:
        result = 8490i64;
        break;
      case 0x9Cu:
$LN166_7:
        result = 8553i64;
        break;
      case 0x9Du:
$LN167_7:
        result = 3i64;
        break;
      case 0x9Eu:
$LN168_8:
        result = 131i64;
        break;
      case 0x9Fu:
$LN169_14:
        result = 4i64;
        break;
      case 0xA0u:
$LN170_7:
        result = 67i64;
        break;
      case 0xA1u:
$LN171_9:
        result = 35i64;
        break;
      case 0xA2u:
$LN172_11:
        result = 163i64;
        break;
      case 0xA3u:
$LN173_8:
        result = 36i64;
        break;
      case 0xA4u:
$LN174_5:
        result = 99i64;
        break;
      case 0xA5u:
$LN175_9:
        result = 19i64;
        break;
      case 0xA6u:
$LN176_7:
        result = 20i64;
        break;
      case 0xA7u:
$LN177_5:
        result = 83i64;
        break;
      case 0xA8u:
$LN178_6:
        result = 51i64;
        break;
      case 0xA9u:
$LN179_5:
        result = 52i64;
        break;
      case 0xAAu:
$LN180_4:
        result = 115i64;
        break;
      case 0xABu:
$LN181_3:
        result = 259i64;
        break;
      case 0xACu:
$LN182_8:
        result = 260i64;
        break;
      case 0xADu:
$LN183_5:
        result = 323i64;
        break;
      case 0xAEu:
$LN184_6:
        result = 291i64;
        break;
      case 0xAFu:
$LN185_6:
        result = 292i64;
        break;
      case 0xB0u:
$LN186_4:
        result = 355i64;
        break;
      case 0xB1u:
$LN187_6:
        result = 1027i64;
        break;
      case 0xB2u:
$LN188_11:
        result = 1028i64;
        break;
      case 0xB3u:
$LN189_8:
        result = 1091i64;
        break;
      case 0xB4u:
$LN190_10:
        result = 1059i64;
        break;
      case 0xB5u:
$LN191_7:
        result = 1060i64;
        break;
      case 0xB6u:
$LN192_5:
        result = 1123i64;
        break;
      case 0xB7u:
$LN193_7:
        result = 1043i64;
        break;
      case 0xB8u:
$LN194_5:
        result = 1044i64;
        break;
      case 0xB9u:
$LN195_10:
        result = 1107i64;
        break;
      case 0xBAu:
$LN196_8:
        result = 1075i64;
        break;
      case 0xBBu:
$LN197_11:
        result = 1076i64;
        break;
      case 0xBCu:
$LN198_11:
        result = 1139i64;
        break;
      case 0xBDu:
$LN199_6:
        result = 1283i64;
        break;
      case 0xBEu:
$LN200_6:
        result = 1284i64;
        break;
      case 0xBFu:
$LN201_6:
        result = 1347i64;
        break;
      case 0xC0u:
$LN202_9:
        result = 1315i64;
        break;
      case 0xC1u:
$LN203_7:
        result = 1316i64;
        break;
      case 0xC2u:
$LN204_7:
        result = 1379i64;
        break;
      case 0xC3u:
$LN205_7:
        result = 2051i64;
        break;
      case 0xC4u:
$LN206_8:
        result = 2179i64;
        break;
      case 0xC5u:
$LN207_4:
        result = 2052i64;
        break;
      case 0xC6u:
$LN208_3:
        result = 2115i64;
        break;
      case 0xC7u:
$LN209_4:
        result = 2083i64;
        break;
      case 0xC8u:
$LN210_4:
        result = 2211i64;
        break;
      case 0xC9u:
$LN211_3:
        result = 2084i64;
        break;
      case 0xCAu:
$LN212_3:
        result = 2147i64;
        break;
      case 0xCBu:
$LN213_5:
        result = 2067i64;
        break;
      case 0xCCu:
$LN214_4:
        result = 2068i64;
        break;
      case 0xCDu:
$LN215_6:
        result = 2131i64;
        break;
      case 0xCEu:
$LN216_4:
        result = 2099i64;
        break;
      case 0xCFu:
$LN217_4:
        result = 2100i64;
        break;
      case 0xD0u:
$LN218_3:
        result = 2163i64;
        break;
      case 0xD1u:
$LN219_7:
        result = 2307i64;
        break;
      case 0xD2u:
$LN220_4:
        result = 2308i64;
        break;
      case 0xD3u:
$LN221_4:
        result = 2371i64;
        break;
      case 0xD4u:
$LN222_5:
        result = 2339i64;
        break;
      case 0xD5u:
$LN223_7:
        result = 2340i64;
        break;
      case 0xD6u:
$LN224_3:
        result = 2403i64;
        break;
      case 0xD7u:
$LN225_6:
        result = 8195i64;
        break;
      case 0xD8u:
$LN226_4:
        result = 8323i64;
        break;
      case 0xD9u:
$LN227_4:
        result = 8196i64;
        break;
      case 0xDAu:
$LN228_4:
        result = 8259i64;
        break;
      case 0xDBu:
$LN229_3:
        result = 8227i64;
        break;
      case 0xDCu:
$LN230_3:
        result = 8355i64;
        break;
      case 0xDDu:
$LN231_4:
        result = 8228i64;
        break;
      case 0xDEu:
$LN232_3:
        result = 8291i64;
        break;
      case 0xDFu:
$LN233_7:
        result = 8211i64;
        break;
      case 0xE0u:
$LN234_4:
        result = 8212i64;
        break;
      case 0xE1u:
$LN235_3:
        result = 8275i64;
        break;
      case 0xE2u:
$LN236_3:
        result = 8243i64;
        break;
      case 0xE3u:
$LN237_4:
        result = 8244i64;
        break;
      case 0xE4u:
$LN238_4:
        result = 8307i64;
        break;
      case 0xE5u:
$LN239_4:
        result = 8451i64;
        break;
      case 0xE6u:
$LN240_4:
        result = 8452i64;
        break;
      case 0xE7u:
$LN241_3:
        result = 8515i64;
        break;
      case 0xE8u:
$LN242_3:
        result = 8483i64;
        break;
      case 0xE9u:
$LN243_3:
        result = 8484i64;
        break;
      case 0xEAu:
$LN244_4:
        result = 8547i64;
        break;
      case 0xEBu:
$LN245_3:
        result = 11i64;
        break;
      case 0xECu:
$LN246_5:
        result = 139i64;
        break;
      case 0xEDu:
$LN247_4:
        result = 12i64;
        break;
      case 0xEEu:
$LN248_3:
        result = 75i64;
        break;
      case 0xEFu:
$LN249_4:
        result = 43i64;
        break;
      case 0xF0u:
$LN250_4:
        result = 171i64;
        break;
      case 0xF1u:
$LN251_7:
        result = 44i64;
        break;
      case 0xF2u:
$LN252_3:
        result = 107i64;
        break;
      case 0xF3u:
$LN253_4:
        result = 27i64;
        break;
      case 0xF4u:
$LN254_6:
        result = 28i64;
        break;
      case 0xF5u:
$LN255_3:
        result = 91i64;
        break;
      case 0xF6u:
$LN256_5:
        result = 59i64;
        break;
      case 0xF7u:
$LN257_3:
        result = 60i64;
        break;
      case 0xF8u:
$LN258_2:
        result = 123i64;
        break;
      case 0xF9u:
$LN259_4:
        result = 267i64;
        break;
      case 0xFAu:
$LN260_3:
        result = 268i64;
        break;
      case 0xFBu:
$LN261_2:
        result = 331i64;
        break;
      case 0xFCu:
$LN262_5:
        result = 299i64;
        break;
      case 0xFDu:
$LN263_3:
        result = 300i64;
        break;
      case 0xFEu:
$LN264_4:
        result = 363i64;
        break;
      case 0xFFu:
$LN265_4:
        result = 1035i64;
        break;
      case 0x100u:
$LN266_3:
        result = 1036i64;
        break;
      case 0x101u:
$LN267_3:
        result = 1099i64;
        break;
      case 0x102u:
$LN268_3:
        result = 1067i64;
        break;
      case 0x103u:
$LN269_4:
        result = 1068i64;
        break;
      case 0x104u:
$LN270_3:
        result = 1131i64;
        break;
      case 0x105u:
$LN271_4:
        result = 1051i64;
        break;
      case 0x106u:
$LN272_3:
        result = 1052i64;
        break;
      case 0x107u:
$LN273_4:
        result = 1115i64;
        break;
      case 0x108u:
$LN274_3:
        result = 1083i64;
        break;
      case 0x109u:
$LN275_4:
        result = 1084i64;
        break;
      case 0x10Au:
$LN276_2:
        result = 1147i64;
        break;
      case 0x10Bu:
$LN277_2:
        result = 1291i64;
        break;
      case 0x10Cu:
$LN278_3:
        result = 1292i64;
        break;
      case 0x10Du:
$LN279_6:
        result = 1355i64;
        break;
      case 0x10Eu:
$LN280_4:
        result = 1323i64;
        break;
      case 0x10Fu:
$LN281_3:
        result = 1324i64;
        break;
      case 0x110u:
$LN282_4:
        result = 1387i64;
        break;
      case 0x111u:
$LN283_5:
        result = 2059i64;
        break;
      case 0x112u:
$LN284_4:
        result = 2187i64;
        break;
      case 0x113u:
$LN285_4:
        result = 2060i64;
        break;
      case 0x114u:
$LN286_4:
        result = 2123i64;
        break;
      case 0x115u:
$LN287_4:
        result = 2091i64;
        break;
      case 0x116u:
$LN288_2:
        result = 2219i64;
        break;
      case 0x117u:
$LN289_3:
        result = 2092i64;
        break;
      case 0x118u:
$LN290_3:
        result = 2155i64;
        break;
      case 0x119u:
$LN291_6:
        result = 2075i64;
        break;
      case 0x11Au:
$LN292_4:
        result = 2076i64;
        break;
      case 0x11Bu:
$LN293_3:
        result = 2139i64;
        break;
      case 0x11Cu:
$LN294_4:
        result = 2107i64;
        break;
      case 0x11Du:
$LN295_3:
        result = 2108i64;
        break;
      case 0x11Eu:
$LN296_9:
        result = 2171i64;
        break;
      case 0x11Fu:
$LN297_3:
        result = 2315i64;
        break;
      case 0x120u:
$LN298_4:
        result = 2316i64;
        break;
      case 0x121u:
$LN299_3:
        result = 2379i64;
        break;
      case 0x122u:
$LN300_4:
        result = 2347i64;
        break;
      case 0x123u:
$LN301_1:
        result = 2348i64;
        break;
      case 0x124u:
$LN302_2:
        result = 2411i64;
        break;
      case 0x125u:
$LN303_4:
        result = 8203i64;
        break;
      case 0x126u:
$LN304_4:
        result = 8331i64;
        break;
      case 0x127u:
$LN305_4:
        result = 8204i64;
        break;
      case 0x128u:
$LN306_3:
        result = 8267i64;
        break;
      case 0x129u:
$LN307_4:
        result = 8235i64;
        break;
      case 0x12Au:
$LN308_4:
        result = 8363i64;
        break;
      case 0x12Bu:
$LN309_4:
        result = 8236i64;
        break;
      case 0x12Cu:
$LN310_2:
        result = 8299i64;
        break;
      case 0x12Du:
$LN311_3:
        result = 8219i64;
        break;
      case 0x12Eu:
$LN312_3:
        result = 8220i64;
        break;
      case 0x12Fu:
$LN313_3:
        result = 8283i64;
        break;
      case 0x130u:
$LN314_4:
        result = 8251i64;
        break;
      case 0x131u:
$LN315_3:
        result = 8252i64;
        break;
      case 0x132u:
$LN316_2:
        result = 8315i64;
        break;
      case 0x133u:
$LN317_2:
        result = 8459i64;
        break;
      case 0x134u:
$LN318_4:
        result = 8460i64;
        break;
      case 0x135u:
$LN319_4:
        result = 8523i64;
        break;
      case 0x136u:
$LN320_4:
        result = 8491i64;
        break;
      case 0x137u:
$LN321_5:
        result = 8492i64;
        break;
      case 0x138u:
$LN322_2:
        result = 8555i64;
        break;
      case 0x139u:
$LN323_4:
        result = 0x80000i64;
        break;
      case 0x13Au:
$LN324_5:
        result = 524289i64;
        break;
      case 0x13Bu:
$LN325_3:
        result = 524352i64;
        break;
      case 0x13Cu:
$LN326_4:
        result = 557056i64;
        break;
      case 0x13Du:
$LN327_8:
        result = 557184i64;
        break;
      case 0x13Eu:
$LN328_4:
        result = 557057i64;
        break;
      case 0x13Fu:
$LN329_3:
        result = 557120i64;
        break;
      case 0x140u:
$LN330_4:
        result = 589824i64;
        break;
      case 0x141u:
$LN331_4:
        result = 589952i64;
        break;
      case 0x142u:
$LN332_2:
        result = 589825i64;
        break;
      case 0x143u:
$LN333_3:
        result = 589888i64;
        break;
      case 0x144u:
$LN334_4:
        result = 589840i64;
        break;
      case 0x145u:
$LN335_4:
        result = 589841i64;
        break;
      case 0x146u:
$LN336_2:
        result = 589904i64;
        break;
      case 0x147u:
$LN337_3:
        result = 786432i64;
        break;
      case 0x148u:
$LN338_3:
        result = 786560i64;
        break;
      case 0x149u:
$LN339_3:
        result = 786433i64;
        break;
      case 0x14Au:
$LN340_4:
        result = 786496i64;
        break;
      case 0x14Bu:
$LN341_3:
        result = 786448i64;
        break;
      case 0x14Cu:
$LN342_3:
        result = 786449i64;
        break;
      case 0x14Du:
$LN343_8:
        result = 786512i64;
        break;
      case 0x14Eu:
$LN344_5:
        result = 524296i64;
        break;
      case 0x14Fu:
$LN345_3:
        result = 524297i64;
        break;
      case 0x150u:
$LN346_3:
        result = 524360i64;
        break;
      case 0x151u:
$LN347_5:
        result = 557064i64;
        break;
      case 0x152u:
$LN348_3:
        result = 557192i64;
        break;
      case 0x153u:
$LN349_2:
        result = 557065i64;
        break;
      case 0x154u:
$LN350_3:
        result = 557128i64;
        break;
      case 0x155u:
$LN351_3:
        result = 589832i64;
        break;
      case 0x156u:
$LN352_2:
        result = 589960i64;
        break;
      case 0x157u:
$LN353_6:
        result = 589833i64;
        break;
      case 0x158u:
$LN354_3:
        result = 589896i64;
        break;
      case 0x159u:
$LN355_4:
        result = 589848i64;
        break;
      case 0x15Au:
$LN356_3:
        result = 589849i64;
        break;
      case 0x15Bu:
$LN357_3:
        result = 589912i64;
        break;
      case 0x15Cu:
$LN358_3:
        result = 786440i64;
        break;
      case 0x15Du:
$LN359_3:
        result = 786568i64;
        break;
      case 0x15Eu:
$LN360_3:
        result = 786441i64;
        break;
      case 0x15Fu:
$LN361_2:
        result = 786504i64;
        break;
      case 0x160u:
$LN362_3:
        result = 786456i64;
        break;
      case 0x161u:
$LN363_2:
        result = 786457i64;
        break;
      case 0x162u:
$LN364_3:
        result = 786520i64;
        break;
      case 0x163u:
$LN365_4:
        result = 524290i64;
        break;
      case 0x164u:
$LN366_3:
        result = 524291i64;
        break;
      case 0x165u:
$LN367_6:
        result = 524354i64;
        break;
      case 0x166u:
$LN368_6:
        result = 557058i64;
        break;
      case 0x167u:
$LN369_4:
        result = 557186i64;
        break;
      case 0x168u:
$LN370_3:
        result = 557059i64;
        break;
      case 0x169u:
$LN371_4:
        result = 557122i64;
        break;
      case 0x16Au:
$LN372_5:
        result = 589826i64;
        break;
      case 0x16Bu:
$LN373_6:
        result = 589954i64;
        break;
      case 0x16Cu:
$LN374_2:
        result = 589827i64;
        break;
      case 0x16Du:
$LN375_3:
        result = 589890i64;
        break;
      case 0x16Eu:
$LN376_4:
        result = 589842i64;
        break;
      case 0x16Fu:
$LN377_2:
        result = 589843i64;
        break;
      case 0x170u:
$LN378_3:
        result = 589906i64;
        break;
      case 0x171u:
$LN379_4:
        result = 786434i64;
        break;
      case 0x172u:
$LN380_4:
        result = 786562i64;
        break;
      case 0x173u:
$LN381_3:
        result = 786435i64;
        break;
      case 0x174u:
$LN382_3:
        result = 786498i64;
        break;
      case 0x175u:
$LN383_3:
        result = 786450i64;
        break;
      case 0x176u:
$LN384_5:
        result = 786451i64;
        break;
      case 0x177u:
$LN385_4:
        result = 786514i64;
        break;
      case 0x178u:
$LN386_5:
        result = 524298i64;
        break;
      case 0x179u:
$LN387_4:
        result = 524299i64;
        break;
      case 0x17Au:
$LN388_2:
        result = 524362i64;
        break;
      case 0x17Bu:
$LN389_4:
        result = 557066i64;
        break;
      case 0x17Cu:
$LN390_5:
        result = 557194i64;
        break;
      case 0x17Du:
$LN391_2:
        result = 557067i64;
        break;
      case 0x17Eu:
$LN392_3:
        result = 557130i64;
        break;
      case 0x17Fu:
$LN393_4:
        result = 589834i64;
        break;
      case 0x180u:
$LN394_3:
        result = 589962i64;
        break;
      case 0x181u:
$LN395_3:
        result = 589835i64;
        break;
      case 0x182u:
$LN396_3:
        result = 589898i64;
        break;
      case 0x183u:
$LN397_5:
        result = 589850i64;
        break;
      case 0x184u:
$LN398_2:
        result = 589851i64;
        break;
      case 0x185u:
$LN399_4:
        result = 589914i64;
        break;
      case 0x186u:
$LN400_2:
        result = 786442i64;
        break;
      case 0x187u:
$LN401_2:
        result = 786570i64;
        break;
      case 0x188u:
$LN402_3:
        result = 786443i64;
        break;
      case 0x189u:
$LN403_4:
        result = 786506i64;
        break;
      case 0x18Au:
$LN404_3:
        result = 786458i64;
        break;
      case 0x18Bu:
$LN405_4:
        result = 786459i64;
        break;
      case 0x18Cu:
$LN406_3:
        result = 786522i64;
        break;
      case 0x18Du:
$LN407_6:
        result = 0x100000i64;
        break;
      case 0x18Eu:
$LN408_5:
        result = 1048704i64;
        break;
      case 0x18Fu:
$LN409_3:
        result = 1048577i64;
        break;
      case 0x190u:
$LN410_5:
        result = 1048608i64;
        break;
      case 0x191u:
$LN411_5:
        result = 1048736i64;
        break;
      case 0x192u:
$LN412_4:
        result = 1048609i64;
        break;
      case 0x193u:
$LN413_4:
        result = 1048592i64;
        break;
      case 0x194u:
$LN414_3:
        result = 1048593i64;
        break;
      case 0x195u:
$LN415_5:
        result = 1048624i64;
        break;
      case 0x196u:
$LN416_4:
        result = 1048625i64;
        break;
      case 0x197u:
$LN417_4:
        result = 1048832i64;
        break;
      case 0x198u:
$LN418_4:
        result = 1048833i64;
        break;
      case 0x199u:
$LN419_3:
        result = 1048864i64;
        break;
      case 0x19Au:
$LN420_3:
        result = 1048865i64;
        break;
      case 0x19Bu:
$LN421_4:
        result = 1179648i64;
        break;
      case 0x19Cu:
$LN422_4:
        result = 1179776i64;
        break;
      case 0x19Du:
$LN423_2:
        result = 1179649i64;
        break;
      case 0x19Eu:
$LN424_2:
        result = 1179712i64;
        break;
      case 0x19Fu:
$LN425_4:
        result = 1179680i64;
        break;
      case 0x1A0u:
$LN426_2:
        result = 1179808i64;
        break;
      case 0x1A1u:
$LN427_4:
        result = 1179681i64;
        break;
      case 0x1A2u:
$LN428_3:
        result = 1179744i64;
        break;
      case 0x1A3u:
$LN429_3:
        result = 1179664i64;
        break;
      case 0x1A4u:
$LN430_3:
        result = 1179665i64;
        break;
      case 0x1A5u:
$LN431_3:
        result = 1179728i64;
        break;
      case 0x1A6u:
$LN432_3:
        result = 1179696i64;
        break;
      case 0x1A7u:
$LN433_3:
        result = 1179697i64;
        break;
      case 0x1A8u:
$LN434_2:
        result = 1179760i64;
        break;
      case 0x1A9u:
$LN435_3:
        result = 1179904i64;
        break;
      case 0x1AAu:
$LN436_2:
        result = 1179905i64;
        break;
      case 0x1ABu:
$LN437_5:
        result = 1179968i64;
        break;
      case 0x1ACu:
$LN438_3:
        result = 1179936i64;
        break;
      case 0x1ADu:
$LN439_4:
        result = 1179937i64;
        break;
      case 0x1AEu:
$LN440_3:
        result = 1180000i64;
        break;
      case 0x1AFu:
$LN441_3:
        result = 1048584i64;
        break;
      case 0x1B0u:
$LN442_3:
        result = 1048712i64;
        break;
      case 0x1B1u:
$LN443_2:
        result = 1048585i64;
        break;
      case 0x1B2u:
$LN444_3:
        result = 1048616i64;
        break;
      case 0x1B3u:
$LN445_3:
        result = 1048744i64;
        break;
      case 0x1B4u:
$LN446_2:
        result = 1048617i64;
        break;
      case 0x1B5u:
$LN447_5:
        result = 1048600i64;
        break;
      case 0x1B6u:
$LN448_2:
        result = 1048601i64;
        break;
      case 0x1B7u:
$LN449_4:
        result = 1048632i64;
        break;
      case 0x1B8u:
$LN450_3:
        result = 1048633i64;
        break;
      case 0x1B9u:
$LN451_4:
        result = 1048840i64;
        break;
      case 0x1BAu:
$LN452_2:
        result = 1048841i64;
        break;
      case 0x1BBu:
$LN453_3:
        result = 1048872i64;
        break;
      case 0x1BCu:
$LN454_3:
        result = 1048873i64;
        break;
      case 0x1BDu:
$LN455_3:
        result = 1179656i64;
        break;
      case 0x1BEu:
$LN456_2:
        result = 1179784i64;
        break;
      case 0x1BFu:
$LN457_4:
        result = 1179657i64;
        break;
      case 0x1C0u:
$LN458_1:
        result = 1179720i64;
        break;
      case 0x1C1u:
$LN459_3:
        result = 1179688i64;
        break;
      case 0x1C2u:
$LN460_3:
        result = 1179816i64;
        break;
      case 0x1C3u:
$LN461_2:
        result = 1179689i64;
        break;
      case 0x1C4u:
$LN462_3:
        result = 1179752i64;
        break;
      case 0x1C5u:
$LN463_2:
        result = 1179672i64;
        break;
      case 0x1C6u:
$LN464_3:
        result = 1179673i64;
        break;
      case 0x1C7u:
$LN465_1:
        result = 1179736i64;
        break;
      case 0x1C8u:
$LN466_2:
        result = 1179704i64;
        break;
      case 0x1C9u:
$LN467_2:
        result = 1179705i64;
        break;
      case 0x1CAu:
$LN468_3:
        result = 1179768i64;
        break;
      case 0x1CBu:
$LN469_4:
        result = 1179912i64;
        break;
      case 0x1CCu:
$LN470_3:
        result = 1179913i64;
        break;
      case 0x1CDu:
$LN471_3:
        result = 1179976i64;
        break;
      case 0x1CEu:
$LN472_1:
        result = 1179944i64;
        break;
      case 0x1CFu:
$LN473_2:
        result = 1179945i64;
        break;
      case 0x1D0u:
$LN474_2:
        result = 1180008i64;
        break;
      case 0x1D1u:
$LN475_4:
        result = 1048578i64;
        break;
      case 0x1D2u:
$LN476_4:
        result = 1048706i64;
        break;
      case 0x1D3u:
$LN477_4:
        result = 1048579i64;
        break;
      case 0x1D4u:
$LN478_4:
        result = 1048610i64;
        break;
      case 0x1D5u:
$LN479_5:
        result = 1048738i64;
        break;
      case 0x1D6u:
$LN480_3:
        result = 1048611i64;
        break;
      case 0x1D7u:
$LN481_5:
        result = 1048594i64;
        break;
      case 0x1D8u:
$LN482_2:
        result = 1048595i64;
        break;
      case 0x1D9u:
$LN483_3:
        result = 1048626i64;
        break;
      case 0x1DAu:
$LN484_6:
        result = 1048627i64;
        break;
      case 0x1DBu:
$LN485_3:
        result = 1048834i64;
        break;
      case 0x1DCu:
$LN486_6:
        result = 1048835i64;
        break;
      case 0x1DDu:
$LN487_3:
        result = 1048866i64;
        break;
      case 0x1DEu:
$LN488_5:
        result = 1048867i64;
        break;
      case 0x1DFu:
$LN489_3:
        result = 1179650i64;
        break;
      case 0x1E0u:
$LN490_4:
        result = 1179778i64;
        break;
      case 0x1E1u:
$LN491_5:
        result = 1179651i64;
        break;
      case 0x1E2u:
$LN492_3:
        result = 1179714i64;
        break;
      case 0x1E3u:
$LN493_3:
        result = 1179682i64;
        break;
      case 0x1E4u:
$LN494_4:
        result = 1179810i64;
        break;
      case 0x1E5u:
$LN495_3:
        result = 1179683i64;
        break;
      case 0x1E6u:
$LN496_3:
        result = 1179746i64;
        break;
      case 0x1E7u:
$LN497_3:
        result = 1179666i64;
        break;
      case 0x1E8u:
$LN498_3:
        result = 1179667i64;
        break;
      case 0x1E9u:
$LN499_4:
        result = 1179730i64;
        break;
      case 0x1EAu:
$LN500_4:
        result = 1179698i64;
        break;
      case 0x1EBu:
$LN501_3:
        result = 1179699i64;
        break;
      case 0x1ECu:
$LN502_3:
        result = 1179762i64;
        break;
      case 0x1EDu:
$LN503_3:
        result = 1179906i64;
        break;
      case 0x1EEu:
$LN504_5:
        result = 1179907i64;
        break;
      case 0x1EFu:
$LN505_3:
        result = 1179970i64;
        break;
      case 0x1F0u:
$LN506_3:
        result = 1179938i64;
        break;
      case 0x1F1u:
$LN507_3:
        result = 1179939i64;
        break;
      case 0x1F2u:
$LN508_4:
        result = 1180002i64;
        break;
      case 0x1F3u:
$LN509_4:
        result = 1048586i64;
        break;
      case 0x1F4u:
$LN510_3:
        result = 1048714i64;
        break;
      case 0x1F5u:
$LN511_2:
        result = 1048587i64;
        break;
      case 0x1F6u:
$LN512_3:
        result = 1048618i64;
        break;
      case 0x1F7u:
$LN513_4:
        result = 1048746i64;
        break;
      case 0x1F8u:
$LN514_3:
        result = 1048619i64;
        break;
      case 0x1F9u:
$LN515_3:
        result = 1048602i64;
        break;
      case 0x1FAu:
$LN516_3:
        result = 1048603i64;
        break;
      case 0x1FBu:
$LN517_3:
        result = 1048634i64;
        break;
      case 0x1FCu:
$LN518_3:
        result = 1048635i64;
        break;
      case 0x1FDu:
$LN519_3:
        result = 1048842i64;
        break;
      case 0x1FEu:
$LN520_2:
        result = 1048843i64;
        break;
      case 0x1FFu:
$LN521_1:
        result = 1048874i64;
        break;
      case 0x200u:
$LN522_2:
        result = 1048875i64;
        break;
      case 0x201u:
$LN523_4:
        result = 1179658i64;
        break;
      case 0x202u:
$LN524_4:
        result = 1179786i64;
        break;
      case 0x203u:
$LN525_2:
        result = 1179659i64;
        break;
      case 0x204u:
$LN526_2:
        result = 1179722i64;
        break;
      case 0x205u:
$LN527_3:
        result = 1179690i64;
        break;
      case 0x206u:
$LN528_2:
        result = 1179818i64;
        break;
      case 0x207u:
$LN529_2:
        result = 1179691i64;
        break;
      case 0x208u:
$LN530_2:
        result = 1179754i64;
        break;
      case 0x209u:
$LN531_2:
        result = 1179674i64;
        break;
      case 0x20Au:
$LN532_3:
        result = 1179675i64;
        break;
      case 0x20Bu:
$LN533_2:
        result = 1179738i64;
        break;
      case 0x20Cu:
$LN534_3:
        result = 1179706i64;
        break;
      case 0x20Du:
$LN535_2:
        result = 1179707i64;
        break;
      case 0x20Eu:
$LN536_4:
        result = 1179770i64;
        break;
      case 0x20Fu:
$LN537_2:
        result = 1179914i64;
        break;
      case 0x210u:
$LN538_2:
        result = 1179915i64;
        break;
      case 0x211u:
$LN539_2:
        result = 1179978i64;
        break;
      case 0x212u:
$LN540_3:
        result = 1179946i64;
        break;
      case 0x213u:
$LN541_10:
        result = 1179947i64;
        break;
      case 0x214u:
$LN542_10:
        result = 1180010i64;
        break;
      case 0x215u:
$LN543_2:
        result = 1572864i64;
        break;
      case 0x216u:
$LN544_2:
        result = 1572865i64;
        break;
      case 0x217u:
$LN545_7:
        result = 1572896i64;
        break;
      case 0x218u:
$LN546_4:
        result = 1572897i64;
        break;
      case 0x219u:
$LN547_4:
        result = 0x200000i64;
        break;
      case 0x21Au:
$LN548_3:
        result = 2097153i64;
        break;
      case 0x21Bu:
$LN549_4:
        result = 2228224i64;
        break;
      case 0x21Cu:
$LN550_6:
        result = 2228225i64;
        break;
      case 0x21Du:
$LN551_4:
        result = 2621440i64;
        break;
      case 0x21Eu:
$LN552_2:
        result = 2621441i64;
        break;
      case 0x21Fu:
$LN553_3:
        result = 2623488i64;
        break;
      case 0x220u:
$LN554_4:
        result = 2623489i64;
        break;
      case 0x221u:
$LN555_4:
        result = 2622464i64;
        break;
      case 0x222u:
$LN556_5:
        result = 2622465i64;
        break;
      case 0x223u:
$LN557_2:
        result = 2629632i64;
        break;
      case 0x224u:
$LN558_3:
        result = 2629633i64;
        break;
      case 0x225u:
$LN559_3:
        result = 2631680i64;
        break;
      case 0x226u:
$LN560_4:
        result = 2631681i64;
        break;
      case 0x227u:
$LN561_2:
        result = 2630656i64;
        break;
      case 0x228u:
$LN562_4:
        result = 2630657i64;
        break;
      case 0x229u:
$LN563_3:
        result = 2654208i64;
        break;
      case 0x22Au:
$LN564_4:
        result = 2654209i64;
        break;
      case 0x22Bu:
$LN565_4:
        result = 2658304i64;
        break;
      case 0x22Cu:
$LN566_2:
        result = 2658305i64;
        break;
      case 0x22Du:
$LN567_3:
        result = 2655232i64;
        break;
      case 0x22Eu:
$LN568_4:
        result = 2655233i64;
        break;
      case 0x22Fu:
$LN569_3:
        result = 2662400i64;
        break;
      case 0x230u:
$LN570_2:
        result = 2662401i64;
        break;
      case 0x231u:
$LN571_3:
        result = 2666496i64;
        break;
      case 0x232u:
$LN572_3:
        result = 2666497i64;
        break;
      case 0x233u:
$LN573_3:
        result = 2663424i64;
        break;
      case 0x234u:
$LN574_3:
        result = 2663425i64;
        break;
      case 0x235u:
$LN575_3:
        result = 2949120i64;
        break;
      case 0x236u:
$LN576_4:
        result = 2949121i64;
        break;
      case 0x237u:
$LN577_3:
        result = 2953216i64;
        break;
      case 0x238u:
$LN578_3:
        result = 2953217i64;
        break;
      case 0x239u:
$LN579_2:
        result = 2950144i64;
        break;
      case 0x23Au:
$LN580_3:
        result = 2950145i64;
        break;
      case 0x23Bu:
$LN581_4:
        result = 2957312i64;
        break;
      case 0x23Cu:
$LN582_3:
        result = 2957313i64;
        break;
      case 0x23Du:
$LN583_3:
        result = 2961408i64;
        break;
      case 0x23Eu:
$LN584_2:
        result = 2961409i64;
        break;
      case 0x23Fu:
$LN585_5:
        result = 2958336i64;
        break;
      case 0x240u:
$LN586_3:
        result = 2958337i64;
        break;
      case 0x241u:
$LN587_4:
        result = 2899968i64;
        break;
      case 0x242u:
$LN588_4:
        result = 2899969i64;
        break;
      case 0x243u:
$LN589_4:
        result = 2904064i64;
        break;
      case 0x244u:
$LN590_3:
        result = 2904065i64;
        break;
      case 0x245u:
$LN591_4:
        result = 2900992i64;
        break;
      case 0x246u:
$LN592_2:
        result = 2900993i64;
        break;
      case 0x247u:
$LN593_3:
        result = 2908160i64;
        break;
      case 0x248u:
$LN594_3:
        result = 2908161i64;
        break;
      case 0x249u:
$LN595_3:
        result = 2912256i64;
        break;
      case 0x24Au:
$LN596_3:
        result = 2912257i64;
        break;
      case 0x24Bu:
$LN597_3:
        result = 2909184i64;
        break;
      case 0x24Cu:
$LN598_2:
        result = 2909185i64;
        break;
      case 0x24Du:
$LN599_3:
        result = 3145728i64;
        break;
      case 0x24Eu:
$LN600_3:
        result = 3146240i64;
        break;
      case 0x24Fu:
$LN601_4:
        result = 3145984i64;
        break;
      case 0x250u:
$LN602_5:
        result = 3670016i64;
        break;
      case 0x251u:
$LN603_2:
        result = 3670080i64;
        break;
      case 0x252u:
$LN604_4:
        result = 3670048i64;
        break;
      case 0x253u:
$LN605_3:
        result = 3670144i64;
        break;
      case 0x254u:
$LN606_3:
        result = 3670208i64;
        break;
      case 0x255u:
$LN607_2:
        result = 3670176i64;
        break;
      case 0x256u:
$LN608_3:
        result = 0x400000i64;
        break;
      case 0x257u:
$LN609_5:
        result = 4718592i64;
        break;
      case 0x258u:
$LN610_3:
        result = 5242880i64;
        break;
      case 0x259u:
$LN611_3:
        result = 5767168i64;
        break;
      case 0x25Au:
$LN612_2:
        result = 5767184i64;
        break;
      case 0x25Bu:
$LN613_4:
        result = 5767176i64;
        break;
      case 0x25Cu:
$LN614_4:
        result = 5767172i64;
        break;
      case 0x25Du:
$LN615_5:
        result = 5767170i64;
        break;
      case 0x25Eu:
$LN616_4:
        result = 5767169i64;
        break;
      default:
        return 0i64;
    }
  }
  return result;
}

bool __fastcall Scaleform::Render::GL::ShaderDesc::IsShaderVersionSupported(
        Scaleform::Render::GL::ShaderDesc::ShaderVersion ver)
{
  __int32 v1; // ecx
  bool result; // al

  result = 1;
  if ( ver )
  {
    v1 = ver - 1;
    if ( v1 )
    {
      if ( v1 != 1 )
        return 0;
    }
  }
  return result;
}

